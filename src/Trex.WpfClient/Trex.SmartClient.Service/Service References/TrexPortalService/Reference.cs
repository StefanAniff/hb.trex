//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Trex.SmartClient.Service.TrexPortalService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeEntryDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimeEntryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BillableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BillableTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PricePrHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TaskGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeEntryTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimeSpentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Billable {
            get {
                return this.BillableField;
            }
            set {
                if ((this.BillableField.Equals(value) != true)) {
                    this.BillableField = value;
                    this.RaisePropertyChanged("Billable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BillableTime {
            get {
                return this.BillableTimeField;
            }
            set {
                if ((this.BillableTimeField.Equals(value) != true)) {
                    this.BillableTimeField = value;
                    this.RaisePropertyChanged("BillableTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientSourceId {
            get {
                return this.ClientSourceIdField;
            }
            set {
                if ((this.ClientSourceIdField.Equals(value) != true)) {
                    this.ClientSourceIdField = value;
                    this.RaisePropertyChanged("ClientSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PricePrHour {
            get {
                return this.PricePrHourField;
            }
            set {
                if ((this.PricePrHourField.Equals(value) != true)) {
                    this.PricePrHourField = value;
                    this.RaisePropertyChanged("PricePrHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProjectName {
            get {
                return this.ProjectNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNameField, value) != true)) {
                    this.ProjectNameField = value;
                    this.RaisePropertyChanged("ProjectName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TaskGuid {
            get {
                return this.TaskGuidField;
            }
            set {
                if ((this.TaskGuidField.Equals(value) != true)) {
                    this.TaskGuidField = value;
                    this.RaisePropertyChanged("TaskGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskName {
            get {
                return this.TaskNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskNameField, value) != true)) {
                    this.TaskNameField = value;
                    this.RaisePropertyChanged("TaskName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeEntryTypeId {
            get {
                return this.TimeEntryTypeIdField;
            }
            set {
                if ((this.TimeEntryTypeIdField.Equals(value) != true)) {
                    this.TimeEntryTypeIdField = value;
                    this.RaisePropertyChanged("TimeEntryTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimeSpent {
            get {
                return this.TimeSpentField;
            }
            set {
                if ((this.TimeSpentField.Equals(value) != true)) {
                    this.TimeSpentField = value;
                    this.RaisePropertyChanged("TimeSpent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralTimeEntryDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class GeneralTimeEntryDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BillableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BillableTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientSourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> PricePrHourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TaskGuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TimeEntryTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimeSpentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Billable {
            get {
                return this.BillableField;
            }
            set {
                if ((this.BillableField.Equals(value) != true)) {
                    this.BillableField = value;
                    this.RaisePropertyChanged("Billable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BillableTime {
            get {
                return this.BillableTimeField;
            }
            set {
                if ((this.BillableTimeField.Equals(value) != true)) {
                    this.BillableTimeField = value;
                    this.RaisePropertyChanged("BillableTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientSourceId {
            get {
                return this.ClientSourceIdField;
            }
            set {
                if ((this.ClientSourceIdField.Equals(value) != true)) {
                    this.ClientSourceIdField = value;
                    this.RaisePropertyChanged("ClientSourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> PricePrHour {
            get {
                return this.PricePrHourField;
            }
            set {
                if ((this.PricePrHourField.Equals(value) != true)) {
                    this.PricePrHourField = value;
                    this.RaisePropertyChanged("PricePrHour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TaskGuid {
            get {
                return this.TaskGuidField;
            }
            set {
                if ((this.TaskGuidField.Equals(value) != true)) {
                    this.TaskGuidField = value;
                    this.RaisePropertyChanged("TaskGuid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TimeEntryTypeId {
            get {
                return this.TimeEntryTypeIdField;
            }
            set {
                if ((this.TimeEntryTypeIdField.Equals(value) != true)) {
                    this.TimeEntryTypeIdField = value;
                    this.RaisePropertyChanged("TimeEntryTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimeSpent {
            get {
                return this.TimeSpentField;
            }
            set {
                if ((this.TimeSpentField.Equals(value) != true)) {
                    this.TimeSpentField = value;
                    this.RaisePropertyChanged("TimeSpent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeEntryTypeDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TimeEntryTypeDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CustomerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsBillableByDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBillableByDefault {
            get {
                return this.IsBillableByDefaultField;
            }
            set {
                if ((this.IsBillableByDefaultField.Equals(value) != true)) {
                    this.IsBillableByDefaultField = value;
                    this.RaisePropertyChanged("IsBillableByDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumOfTimeEntriesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> PermissionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<string> RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalBillableTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumOfTimeEntries {
            get {
                return this.NumOfTimeEntriesField;
            }
            set {
                if ((this.NumOfTimeEntriesField.Equals(value) != true)) {
                    this.NumOfTimeEntriesField = value;
                    this.RaisePropertyChanged("NumOfTimeEntries");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Permissions {
            get {
                return this.PermissionsField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionsField, value) != true)) {
                    this.PermissionsField = value;
                    this.RaisePropertyChanged("Permissions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<string> Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalBillableTime {
            get {
                return this.TotalBillableTimeField;
            }
            set {
                if ((this.TotalBillableTimeField.Equals(value) != true)) {
                    this.TotalBillableTimeField = value;
                    this.RaisePropertyChanged("TotalBillableTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalTime {
            get {
                return this.TotalTimeField;
            }
            set {
                if ((this.TotalTimeField.Equals(value) != true)) {
                    this.TotalTimeField = value;
                    this.RaisePropertyChanged("TotalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStatistics", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class UserStatistics : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BillableHoursThisMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BillableHoursThisWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BillableHoursTodayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EarningsThisMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EarningsThisWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EarningsTodayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RegisteredHoursThisMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RegisteredHoursThisWeekField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RegisteredHoursTodayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BillableHoursThisMonth {
            get {
                return this.BillableHoursThisMonthField;
            }
            set {
                if ((this.BillableHoursThisMonthField.Equals(value) != true)) {
                    this.BillableHoursThisMonthField = value;
                    this.RaisePropertyChanged("BillableHoursThisMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BillableHoursThisWeek {
            get {
                return this.BillableHoursThisWeekField;
            }
            set {
                if ((this.BillableHoursThisWeekField.Equals(value) != true)) {
                    this.BillableHoursThisWeekField = value;
                    this.RaisePropertyChanged("BillableHoursThisWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BillableHoursToday {
            get {
                return this.BillableHoursTodayField;
            }
            set {
                if ((this.BillableHoursTodayField.Equals(value) != true)) {
                    this.BillableHoursTodayField = value;
                    this.RaisePropertyChanged("BillableHoursToday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EarningsThisMonth {
            get {
                return this.EarningsThisMonthField;
            }
            set {
                if ((this.EarningsThisMonthField.Equals(value) != true)) {
                    this.EarningsThisMonthField = value;
                    this.RaisePropertyChanged("EarningsThisMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EarningsThisWeek {
            get {
                return this.EarningsThisWeekField;
            }
            set {
                if ((this.EarningsThisWeekField.Equals(value) != true)) {
                    this.EarningsThisWeekField = value;
                    this.RaisePropertyChanged("EarningsThisWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EarningsToday {
            get {
                return this.EarningsTodayField;
            }
            set {
                if ((this.EarningsTodayField.Equals(value) != true)) {
                    this.EarningsTodayField = value;
                    this.RaisePropertyChanged("EarningsToday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RegisteredHoursThisMonth {
            get {
                return this.RegisteredHoursThisMonthField;
            }
            set {
                if ((this.RegisteredHoursThisMonthField.Equals(value) != true)) {
                    this.RegisteredHoursThisMonthField = value;
                    this.RaisePropertyChanged("RegisteredHoursThisMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RegisteredHoursThisWeek {
            get {
                return this.RegisteredHoursThisWeekField;
            }
            set {
                if ((this.RegisteredHoursThisWeekField.Equals(value) != true)) {
                    this.RegisteredHoursThisWeekField = value;
                    this.RaisePropertyChanged("RegisteredHoursThisWeek");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RegisteredHoursToday {
            get {
                return this.RegisteredHoursTodayField;
            }
            set {
                if ((this.RegisteredHoursTodayField.Equals(value) != true)) {
                    this.RegisteredHoursTodayField = value;
                    this.RaisePropertyChanged("RegisteredHoursToday");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompanyDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CompanyDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CellPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InheritsTimeEntryTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaymentTermIncludeCurrentMonthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentTermNumberOfDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhoneNumber {
            get {
                return this.CellPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneNumberField, value) != true)) {
                    this.CellPhoneNumberField = value;
                    this.RaisePropertyChanged("CellPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactName {
            get {
                return this.ContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNameField, value) != true)) {
                    this.ContactNameField = value;
                    this.RaisePropertyChanged("ContactName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByName {
            get {
                return this.CreatedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByNameField, value) != true)) {
                    this.CreatedByNameField = value;
                    this.RaisePropertyChanged("CreatedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InheritsTimeEntryTypes {
            get {
                return this.InheritsTimeEntryTypesField;
            }
            set {
                if ((this.InheritsTimeEntryTypesField.Equals(value) != true)) {
                    this.InheritsTimeEntryTypesField = value;
                    this.RaisePropertyChanged("InheritsTimeEntryTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PaymentTermIncludeCurrentMonth {
            get {
                return this.PaymentTermIncludeCurrentMonthField;
            }
            set {
                if ((this.PaymentTermIncludeCurrentMonthField.Equals(value) != true)) {
                    this.PaymentTermIncludeCurrentMonthField = value;
                    this.RaisePropertyChanged("PaymentTermIncludeCurrentMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PaymentTermNumberOfDays {
            get {
                return this.PaymentTermNumberOfDaysField;
            }
            set {
                if ((this.PaymentTermNumberOfDaysField.Equals(value) != true)) {
                    this.PaymentTermNumberOfDaysField = value;
                    this.RaisePropertyChanged("PaymentTermNumberOfDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompressedObject", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class CompressedObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ResponseHeadersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] SerializedResponseField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> ResponseHeaders {
            get {
                return this.ResponseHeadersField;
            }
            set {
                if ((object.ReferenceEquals(this.ResponseHeadersField, value) != true)) {
                    this.ResponseHeadersField = value;
                    this.RaisePropertyChanged("ResponseHeaders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] SerializedResponse {
            get {
                return this.SerializedResponseField;
            }
            set {
                if ((object.ReferenceEquals(this.SerializedResponseField, value) != true)) {
                    this.SerializedResponseField = value;
                    this.RaisePropertyChanged("SerializedResponse");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProjectDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ProjectDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CompanyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEstimatesEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedByName {
            get {
                return this.ChangedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByNameField, value) != true)) {
                    this.ChangedByNameField = value;
                    this.RaisePropertyChanged("ChangedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((this.CompanyIdField.Equals(value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByName {
            get {
                return this.CreatedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByNameField, value) != true)) {
                    this.CreatedByNameField = value;
                    this.RaisePropertyChanged("CreatedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEstimatesEnabled {
            get {
                return this.IsEstimatesEnabledField;
            }
            set {
                if ((this.IsEstimatesEnabledField.Equals(value) != true)) {
                    this.IsEstimatesEnabledField = value;
                    this.RaisePropertyChanged("IsEstimatesEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class TaskDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BestCaseEstimateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ChangeDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool InactiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ParentTaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RealisticEstimateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RegisteredTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimeEstimatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TimeLeftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WorstCaseEstimateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BestCaseEstimate {
            get {
                return this.BestCaseEstimateField;
            }
            set {
                if ((this.BestCaseEstimateField.Equals(value) != true)) {
                    this.BestCaseEstimateField = value;
                    this.RaisePropertyChanged("BestCaseEstimate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ChangeDate {
            get {
                return this.ChangeDateField;
            }
            set {
                if ((this.ChangeDateField.Equals(value) != true)) {
                    this.ChangeDateField = value;
                    this.RaisePropertyChanged("ChangeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedByName {
            get {
                return this.ChangedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedByNameField, value) != true)) {
                    this.ChangedByNameField = value;
                    this.RaisePropertyChanged("ChangedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateDate {
            get {
                return this.CreateDateField;
            }
            set {
                if ((this.CreateDateField.Equals(value) != true)) {
                    this.CreateDateField = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByName {
            get {
                return this.CreatedByNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByNameField, value) != true)) {
                    this.CreatedByNameField = value;
                    this.RaisePropertyChanged("CreatedByName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ParentTaskId {
            get {
                return this.ParentTaskIdField;
            }
            set {
                if ((this.ParentTaskIdField.Equals(value) != true)) {
                    this.ParentTaskIdField = value;
                    this.RaisePropertyChanged("ParentTaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectId {
            get {
                return this.ProjectIdField;
            }
            set {
                if ((this.ProjectIdField.Equals(value) != true)) {
                    this.ProjectIdField = value;
                    this.RaisePropertyChanged("ProjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RealisticEstimate {
            get {
                return this.RealisticEstimateField;
            }
            set {
                if ((this.RealisticEstimateField.Equals(value) != true)) {
                    this.RealisticEstimateField = value;
                    this.RaisePropertyChanged("RealisticEstimate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RegisteredTime {
            get {
                return this.RegisteredTimeField;
            }
            set {
                if ((this.RegisteredTimeField.Equals(value) != true)) {
                    this.RegisteredTimeField = value;
                    this.RaisePropertyChanged("RegisteredTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimeEstimated {
            get {
                return this.TimeEstimatedField;
            }
            set {
                if ((this.TimeEstimatedField.Equals(value) != true)) {
                    this.TimeEstimatedField = value;
                    this.RaisePropertyChanged("TimeEstimated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TimeLeft {
            get {
                return this.TimeLeftField;
            }
            set {
                if ((this.TimeLeftField.Equals(value) != true)) {
                    this.TimeLeftField = value;
                    this.RaisePropertyChanged("TimeLeft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WorstCaseEstimate {
            get {
                return this.WorstCaseEstimateField;
            }
            set {
                if ((this.WorstCaseEstimateField.Equals(value) != true)) {
                    this.WorstCaseEstimateField = value;
                    this.RaisePropertyChanged("WorstCaseEstimate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ExceptionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionDetails {
            get {
                return this.ExceptionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionDetailsField, value) != true)) {
                    this.ExceptionDetailsField = value;
                    this.RaisePropertyChanged("ExceptionDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PermissionItemDto", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
    [System.SerializableAttribute()]
    public partial class PermissionItemDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PermissionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnabled {
            get {
                return this.IsEnabledField;
            }
            set {
                if ((this.IsEnabledField.Equals(value) != true)) {
                    this.IsEnabledField = value;
                    this.RaisePropertyChanged("IsEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PermissionName {
            get {
                return this.PermissionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PermissionNameField, value) != true)) {
                    this.PermissionNameField = value;
                    this.RaisePropertyChanged("PermissionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="TrexPortalService.ITrexSlService")]
    public interface ITrexSlService {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetTimeEntriesByPeriodAndUser", ReplyAction="urn:ITrexSlService/GetTimeEntriesByPeriodAndUserResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> GetTimeEntriesByPeriodAndUser(int userId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetTimeEntriesByPeriodAndUser", ReplyAction="urn:ITrexSlService/GetTimeEntriesByPeriodAndUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto>> GetTimeEntriesByPeriodAndUserAsync(int userId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/SaveTimeEntry", ReplyAction="urn:ITrexSlService/SaveTimeEntryResponse")]
        Trex.SmartClient.Service.TrexPortalService.TimeEntryDto SaveTimeEntry(Trex.SmartClient.Service.TrexPortalService.TimeEntryDto timeEntryDto, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/SaveTimeEntry", ReplyAction="urn:ITrexSlService/SaveTimeEntryResponse")]
        System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> SaveTimeEntryAsync(Trex.SmartClient.Service.TrexPortalService.TimeEntryDto timeEntryDto, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetTimeEntriesByPeriod", ReplyAction="urn:ITrexSlService/GetTimeEntriesByPeriodResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.GeneralTimeEntryDto> GetTimeEntriesByPeriod(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetTimeEntriesByPeriod", ReplyAction="urn:ITrexSlService/GetTimeEntriesByPeriodResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.GeneralTimeEntryDto>> GetTimeEntriesByPeriodAsync(System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ChangeTaskActiveState", ReplyAction="urn:ITrexSlService/ChangeTaskActiveStateResponse")]
        void ChangeTaskActiveState(int taskId, bool isInactive);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ChangeTaskActiveState", ReplyAction="urn:ITrexSlService/ChangeTaskActiveStateResponse")]
        System.Threading.Tasks.Task ChangeTaskActiveStateAsync(int taskId, bool isInactive);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetAllTimeEntryTypes", ReplyAction="urn:ITrexSlService/GetAllTimeEntryTypesResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryTypeDto> GetAllTimeEntryTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetAllTimeEntryTypes", ReplyAction="urn:ITrexSlService/GetAllTimeEntryTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryTypeDto>> GetAllTimeEntryTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ValidateUser", ReplyAction="urn:ITrexSlService/ValidateUserResponse")]
        bool ValidateUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ValidateUser", ReplyAction="urn:ITrexSlService/ValidateUserResponse")]
        System.Threading.Tasks.Task<bool> ValidateUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUser", ReplyAction="urn:ITrexSlService/GetUserResponse")]
        Trex.SmartClient.Service.TrexPortalService.UserDto GetUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUser", ReplyAction="urn:ITrexSlService/GetUserResponse")]
        System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.UserDto> GetUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/PingService", ReplyAction="urn:ITrexSlService/PingServiceResponse")]
        bool PingService();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/PingService", ReplyAction="urn:ITrexSlService/PingServiceResponse")]
        System.Threading.Tasks.Task<bool> PingServiceAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUserStatistics", ReplyAction="urn:ITrexSlService/GetUserStatisticsResponse")]
        Trex.SmartClient.Service.TrexPortalService.UserStatistics GetUserStatistics(int userId, int numOfDaysBack);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUserStatistics", ReplyAction="urn:ITrexSlService/GetUserStatisticsResponse")]
        System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.UserStatistics> GetUserStatisticsAsync(int userId, int numOfDaysBack);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedCompanies", ReplyAction="urn:ITrexSlService/GetUnsyncedCompaniesResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto> GetUnsyncedCompanies(System.DateTime lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedCompanies", ReplyAction="urn:ITrexSlService/GetUnsyncedCompaniesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto>> GetUnsyncedCompaniesAsync(System.DateTime lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedCompaniesCompressed", ReplyAction="urn:ITrexSlService/GetUnsyncedCompaniesCompressedResponse")]
        Trex.SmartClient.Service.TrexPortalService.CompressedObject GetUnsyncedCompaniesCompressed(System.DateTime lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedCompaniesCompressed", ReplyAction="urn:ITrexSlService/GetUnsyncedCompaniesCompressedResponse")]
        System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.CompressedObject> GetUnsyncedCompaniesCompressedAsync(System.DateTime lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedProjects", ReplyAction="urn:ITrexSlService/GetUnsyncedProjectsResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.ProjectDto> GetUnsyncedProjects(System.DateTime lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedProjects", ReplyAction="urn:ITrexSlService/GetUnsyncedProjectsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.ProjectDto>> GetUnsyncedProjectsAsync(System.DateTime lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedTasks", ReplyAction="urn:ITrexSlService/GetUnsyncedTasksResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> GetUnsyncedTasks(System.Nullable<System.DateTime> lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedTasks", ReplyAction="urn:ITrexSlService/GetUnsyncedTasksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto>> GetUnsyncedTasksAsync(System.Nullable<System.DateTime> lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedTasksCompressed", ReplyAction="urn:ITrexSlService/GetUnsyncedTasksCompressedResponse")]
        Trex.SmartClient.Service.TrexPortalService.CompressedObject GetUnsyncedTasksCompressed(System.Nullable<System.DateTime> lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetUnsyncedTasksCompressed", ReplyAction="urn:ITrexSlService/GetUnsyncedTasksCompressedResponse")]
        System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.CompressedObject> GetUnsyncedTasksCompressedAsync(System.Nullable<System.DateTime> lastSyncDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UploadNewTasks", ReplyAction="urn:ITrexSlService/UploadNewTasksResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> UploadNewTasks(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> tasks, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UploadNewTasks", ReplyAction="urn:ITrexSlService/UploadNewTasksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto>> UploadNewTasksAsync(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> tasks, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UploadNewTimeEntries", ReplyAction="urn:ITrexSlService/UploadNewTimeEntriesResponse")]
        void UploadNewTimeEntries(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> timeEntries, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UploadNewTimeEntries", ReplyAction="urn:ITrexSlService/UploadNewTimeEntriesResponse")]
        System.Threading.Tasks.Task UploadNewTimeEntriesAsync(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> timeEntries, int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ChangePassword", ReplyAction="urn:ITrexSlService/ChangePasswordResponse")]
        bool ChangePassword(string userName, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ChangePassword", ReplyAction="urn:ITrexSlService/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string userName, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetRoles", ReplyAction="urn:ITrexSlService/GetRolesResponse")]
        System.Collections.Generic.List<string> GetRoles();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetRoles", ReplyAction="urn:ITrexSlService/GetRolesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UpdateUserRoles", ReplyAction="urn:ITrexSlService/UpdateUserRolesResponse")]
        void UpdateUserRoles(string userName, System.Collections.Generic.List<string> roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UpdateUserRoles", ReplyAction="urn:ITrexSlService/UpdateUserRolesResponse")]
        System.Threading.Tasks.Task UpdateUserRolesAsync(string userName, System.Collections.Generic.List<string> roles);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/CreateRole", ReplyAction="urn:ITrexSlService/CreateRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trex.SmartClient.Service.TrexPortalService.ExceptionInfo), Action="urn:ITrexSlService/CreateRoleExceptionInfoFault", Name="ExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
        void CreateRole(string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/CreateRole", ReplyAction="urn:ITrexSlService/CreateRoleResponse")]
        System.Threading.Tasks.Task CreateRoleAsync(string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/DeleteRole", ReplyAction="urn:ITrexSlService/DeleteRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trex.SmartClient.Service.TrexPortalService.ExceptionInfo), Action="urn:ITrexSlService/DeleteRoleExceptionInfoFault", Name="ExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/TrexSL.Web.DataContracts")]
        void DeleteRole(string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/DeleteRole", ReplyAction="urn:ITrexSlService/DeleteRoleResponse")]
        System.Threading.Tasks.Task DeleteRoleAsync(string roleName);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ExistsRole", ReplyAction="urn:ITrexSlService/ExistsRoleResponse")]
        bool ExistsRole(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/ExistsRole", ReplyAction="urn:ITrexSlService/ExistsRoleResponse")]
        System.Threading.Tasks.Task<bool> ExistsRoleAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetPermissionsForSingleRole", ReplyAction="urn:ITrexSlService/GetPermissionsForSingleRoleResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto> GetPermissionsForSingleRole(string roleName, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetPermissionsForSingleRole", ReplyAction="urn:ITrexSlService/GetPermissionsForSingleRoleResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto>> GetPermissionsForSingleRoleAsync(string roleName, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UpdatePermissions", ReplyAction="urn:ITrexSlService/UpdatePermissionsResponse")]
        void UpdatePermissions(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto> updatedPermissions, string roleName, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/UpdatePermissions", ReplyAction="urn:ITrexSlService/UpdatePermissionsResponse")]
        System.Threading.Tasks.Task UpdatePermissionsAsync(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto> updatedPermissions, string roleName, int applicationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetCompaniesByNameSearchString", ReplyAction="urn:ITrexSlService/GetCompaniesByNameSearchStringResponse")]
        System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto> GetCompaniesByNameSearchString(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:ITrexSlService/GetCompaniesByNameSearchString", ReplyAction="urn:ITrexSlService/GetCompaniesByNameSearchStringResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto>> GetCompaniesByNameSearchStringAsync(string searchString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrexSlServiceChannel : Trex.SmartClient.Service.TrexPortalService.ITrexSlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrexSlServiceClient : System.ServiceModel.ClientBase<Trex.SmartClient.Service.TrexPortalService.ITrexSlService>, Trex.SmartClient.Service.TrexPortalService.ITrexSlService {
        
        public TrexSlServiceClient() {
        }
        
        public TrexSlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrexSlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrexSlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrexSlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> GetTimeEntriesByPeriodAndUser(int userId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTimeEntriesByPeriodAndUser(userId, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto>> GetTimeEntriesByPeriodAndUserAsync(int userId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTimeEntriesByPeriodAndUserAsync(userId, startDate, endDate);
        }
        
        public Trex.SmartClient.Service.TrexPortalService.TimeEntryDto SaveTimeEntry(Trex.SmartClient.Service.TrexPortalService.TimeEntryDto timeEntryDto, int userId) {
            return base.Channel.SaveTimeEntry(timeEntryDto, userId);
        }
        
        public System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> SaveTimeEntryAsync(Trex.SmartClient.Service.TrexPortalService.TimeEntryDto timeEntryDto, int userId) {
            return base.Channel.SaveTimeEntryAsync(timeEntryDto, userId);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.GeneralTimeEntryDto> GetTimeEntriesByPeriod(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTimeEntriesByPeriod(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.GeneralTimeEntryDto>> GetTimeEntriesByPeriodAsync(System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTimeEntriesByPeriodAsync(startDate, endDate);
        }
        
        public void ChangeTaskActiveState(int taskId, bool isInactive) {
            base.Channel.ChangeTaskActiveState(taskId, isInactive);
        }
        
        public System.Threading.Tasks.Task ChangeTaskActiveStateAsync(int taskId, bool isInactive) {
            return base.Channel.ChangeTaskActiveStateAsync(taskId, isInactive);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryTypeDto> GetAllTimeEntryTypes() {
            return base.Channel.GetAllTimeEntryTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryTypeDto>> GetAllTimeEntryTypesAsync() {
            return base.Channel.GetAllTimeEntryTypesAsync();
        }
        
        public bool ValidateUser(string userName, string password) {
            return base.Channel.ValidateUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateUserAsync(string userName, string password) {
            return base.Channel.ValidateUserAsync(userName, password);
        }
        
        public Trex.SmartClient.Service.TrexPortalService.UserDto GetUser(string userName, string password) {
            return base.Channel.GetUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.UserDto> GetUserAsync(string userName, string password) {
            return base.Channel.GetUserAsync(userName, password);
        }
        
        public bool PingService() {
            return base.Channel.PingService();
        }
        
        public System.Threading.Tasks.Task<bool> PingServiceAsync() {
            return base.Channel.PingServiceAsync();
        }
        
        public Trex.SmartClient.Service.TrexPortalService.UserStatistics GetUserStatistics(int userId, int numOfDaysBack) {
            return base.Channel.GetUserStatistics(userId, numOfDaysBack);
        }
        
        public System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.UserStatistics> GetUserStatisticsAsync(int userId, int numOfDaysBack) {
            return base.Channel.GetUserStatisticsAsync(userId, numOfDaysBack);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto> GetUnsyncedCompanies(System.DateTime lastSyncDate) {
            return base.Channel.GetUnsyncedCompanies(lastSyncDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto>> GetUnsyncedCompaniesAsync(System.DateTime lastSyncDate) {
            return base.Channel.GetUnsyncedCompaniesAsync(lastSyncDate);
        }
        
        public Trex.SmartClient.Service.TrexPortalService.CompressedObject GetUnsyncedCompaniesCompressed(System.DateTime lastSyncDate) {
            return base.Channel.GetUnsyncedCompaniesCompressed(lastSyncDate);
        }
        
        public System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.CompressedObject> GetUnsyncedCompaniesCompressedAsync(System.DateTime lastSyncDate) {
            return base.Channel.GetUnsyncedCompaniesCompressedAsync(lastSyncDate);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.ProjectDto> GetUnsyncedProjects(System.DateTime lastSyncDate) {
            return base.Channel.GetUnsyncedProjects(lastSyncDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.ProjectDto>> GetUnsyncedProjectsAsync(System.DateTime lastSyncDate) {
            return base.Channel.GetUnsyncedProjectsAsync(lastSyncDate);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> GetUnsyncedTasks(System.Nullable<System.DateTime> lastSyncDate) {
            return base.Channel.GetUnsyncedTasks(lastSyncDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto>> GetUnsyncedTasksAsync(System.Nullable<System.DateTime> lastSyncDate) {
            return base.Channel.GetUnsyncedTasksAsync(lastSyncDate);
        }
        
        public Trex.SmartClient.Service.TrexPortalService.CompressedObject GetUnsyncedTasksCompressed(System.Nullable<System.DateTime> lastSyncDate) {
            return base.Channel.GetUnsyncedTasksCompressed(lastSyncDate);
        }
        
        public System.Threading.Tasks.Task<Trex.SmartClient.Service.TrexPortalService.CompressedObject> GetUnsyncedTasksCompressedAsync(System.Nullable<System.DateTime> lastSyncDate) {
            return base.Channel.GetUnsyncedTasksCompressedAsync(lastSyncDate);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> UploadNewTasks(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> tasks, int userId) {
            return base.Channel.UploadNewTasks(tasks, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto>> UploadNewTasksAsync(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TaskDto> tasks, int userId) {
            return base.Channel.UploadNewTasksAsync(tasks, userId);
        }
        
        public void UploadNewTimeEntries(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> timeEntries, int userId) {
            base.Channel.UploadNewTimeEntries(timeEntries, userId);
        }
        
        public System.Threading.Tasks.Task UploadNewTimeEntriesAsync(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.TimeEntryDto> timeEntries, int userId) {
            return base.Channel.UploadNewTimeEntriesAsync(timeEntries, userId);
        }
        
        public bool ChangePassword(string userName, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(userName, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string userName, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(userName, oldPassword, newPassword);
        }
        
        public System.Collections.Generic.List<string> GetRoles() {
            return base.Channel.GetRoles();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<string>> GetRolesAsync() {
            return base.Channel.GetRolesAsync();
        }
        
        public void UpdateUserRoles(string userName, System.Collections.Generic.List<string> roles) {
            base.Channel.UpdateUserRoles(userName, roles);
        }
        
        public System.Threading.Tasks.Task UpdateUserRolesAsync(string userName, System.Collections.Generic.List<string> roles) {
            return base.Channel.UpdateUserRolesAsync(userName, roles);
        }
        
        public void CreateRole(string roleName) {
            base.Channel.CreateRole(roleName);
        }
        
        public System.Threading.Tasks.Task CreateRoleAsync(string roleName) {
            return base.Channel.CreateRoleAsync(roleName);
        }
        
        public void DeleteRole(string roleName) {
            base.Channel.DeleteRole(roleName);
        }
        
        public System.Threading.Tasks.Task DeleteRoleAsync(string roleName) {
            return base.Channel.DeleteRoleAsync(roleName);
        }
        
        public bool ExistsRole(string name) {
            return base.Channel.ExistsRole(name);
        }
        
        public System.Threading.Tasks.Task<bool> ExistsRoleAsync(string name) {
            return base.Channel.ExistsRoleAsync(name);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto> GetPermissionsForSingleRole(string roleName, int applicationId) {
            return base.Channel.GetPermissionsForSingleRole(roleName, applicationId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto>> GetPermissionsForSingleRoleAsync(string roleName, int applicationId) {
            return base.Channel.GetPermissionsForSingleRoleAsync(roleName, applicationId);
        }
        
        public void UpdatePermissions(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto> updatedPermissions, string roleName, int applicationId) {
            base.Channel.UpdatePermissions(updatedPermissions, roleName, applicationId);
        }
        
        public System.Threading.Tasks.Task UpdatePermissionsAsync(System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.PermissionItemDto> updatedPermissions, string roleName, int applicationId) {
            return base.Channel.UpdatePermissionsAsync(updatedPermissions, roleName, applicationId);
        }
        
        public System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto> GetCompaniesByNameSearchString(string searchString) {
            return base.Channel.GetCompaniesByNameSearchString(searchString);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Trex.SmartClient.Service.TrexPortalService.CompanyDto>> GetCompaniesByNameSearchStringAsync(string searchString) {
            return base.Channel.GetCompaniesByNameSearchStringAsync(searchString);
        }
    }
}

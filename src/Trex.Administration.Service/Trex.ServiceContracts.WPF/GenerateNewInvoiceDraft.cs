//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace Trex.ServiceContracts
{
    
    public partial class GenerateNewInvoiceDraft : INotifyComplexPropertyChanging, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int ID
        {
            get { return _iD; }
            set
            {
                if (_iD != value)
                {
                    OnComplexPropertyChanging();
                    _iD = value;
                    OnPropertyChanged("ID");
                }
            }
        }
        private int _iD;
    
        [DataMember]
        public System.DateTime CreateDate
        {
            get { return _createDate; }
            set
            {
                if (_createDate != value)
                {
                    OnComplexPropertyChanging();
                    _createDate = value;
                    OnPropertyChanged("CreateDate");
                }
            }
        }
        private System.DateTime _createDate;
    
        [DataMember]
        public System.DateTime InvoiceDate
        {
            get { return _invoiceDate; }
            set
            {
                if (_invoiceDate != value)
                {
                    OnComplexPropertyChanging();
                    _invoiceDate = value;
                    OnPropertyChanged("InvoiceDate");
                }
            }
        }
        private System.DateTime _invoiceDate;
    
        [DataMember]
        public int CreatedBy
        {
            get { return _createdBy; }
            set
            {
                if (_createdBy != value)
                {
                    OnComplexPropertyChanging();
                    _createdBy = value;
                    OnPropertyChanged("CreatedBy");
                }
            }
        }
        private int _createdBy;
    
        [DataMember]
        public double VAT
        {
            get { return _vAT; }
            set
            {
                if (_vAT != value)
                {
                    OnComplexPropertyChanging();
                    _vAT = value;
                    OnPropertyChanged("VAT");
                }
            }
        }
        private double _vAT;
    
        [DataMember]
        public string FooterText
        {
            get { return _footerText; }
            set
            {
                if (_footerText != value)
                {
                    OnComplexPropertyChanging();
                    _footerText = value;
                    OnPropertyChanged("FooterText");
                }
            }
        }
        private string _footerText;
    
        [DataMember]
        public System.DateTime StartDate
        {
            get { return _startDate; }
            set
            {
                if (_startDate != value)
                {
                    OnComplexPropertyChanging();
                    _startDate = value;
                    OnPropertyChanged("StartDate");
                }
            }
        }
        private System.DateTime _startDate;
    
        [DataMember]
        public System.DateTime EndDate
        {
            get { return _endDate; }
            set
            {
                if (_endDate != value)
                {
                    OnComplexPropertyChanging();
                    _endDate = value;
                    OnPropertyChanged("EndDate");
                }
            }
        }
        private System.DateTime _endDate;
    
        [DataMember]
        public bool Closed
        {
            get { return _closed; }
            set
            {
                if (_closed != value)
                {
                    OnComplexPropertyChanging();
                    _closed = value;
                    OnPropertyChanged("Closed");
                }
            }
        }
        private bool _closed;
    
        [DataMember]
        public Nullable<System.DateTime> DueDate
        {
            get { return _dueDate; }
            set
            {
                if (_dueDate != value)
                {
                    OnComplexPropertyChanging();
                    _dueDate = value;
                    OnPropertyChanged("DueDate");
                }
            }
        }
        private Nullable<System.DateTime> _dueDate;
    
        [DataMember]
        public string Regarding
        {
            get { return _regarding; }
            set
            {
                if (_regarding != value)
                {
                    OnComplexPropertyChanging();
                    _regarding = value;
                    OnPropertyChanged("Regarding");
                }
            }
        }
        private string _regarding;
    
        [DataMember]
        public Nullable<int> InvoiceID
        {
            get { return _invoiceID; }
            set
            {
                if (_invoiceID != value)
                {
                    OnComplexPropertyChanging();
                    _invoiceID = value;
                    OnPropertyChanged("InvoiceID");
                }
            }
        }
        private Nullable<int> _invoiceID;
    
        [DataMember]
        public int CustomerInvoiceGroupId
        {
            get { return _customerInvoiceGroupId; }
            set
            {
                if (_customerInvoiceGroupId != value)
                {
                    OnComplexPropertyChanging();
                    _customerInvoiceGroupId = value;
                    OnPropertyChanged("CustomerInvoiceGroupId");
                }
            }
        }
        private int _customerInvoiceGroupId;

        #endregion

        #region ChangeTracking
    
        private void OnComplexPropertyChanging()
        {
            if (_complexPropertyChanging != null)
            {
                _complexPropertyChanging(this, new EventArgs());
            }
        }
    
        event EventHandler INotifyComplexPropertyChanging.ComplexPropertyChanging { add { _complexPropertyChanging += value; } remove { _complexPropertyChanging -= value; } }
        private event EventHandler _complexPropertyChanging;
    
        private void OnPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged { add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
    
        public static void RecordComplexOriginalValues(String parentPropertyName, GenerateNewInvoiceDraft complexObject, ObjectChangeTracker changeTracker)
        {
            if (String.IsNullOrEmpty(parentPropertyName))
            {
                throw new ArgumentException("String parameter cannot be null or empty.", "parentPropertyName");
            }
    
            if (changeTracker == null)
            {
                throw new ArgumentNullException("changeTracker");
            }
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.ID", parentPropertyName), complexObject == null ? null : (object)complexObject.ID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CreateDate", parentPropertyName), complexObject == null ? null : (object)complexObject.CreateDate);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InvoiceDate", parentPropertyName), complexObject == null ? null : (object)complexObject.InvoiceDate);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CreatedBy", parentPropertyName), complexObject == null ? null : (object)complexObject.CreatedBy);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.VAT", parentPropertyName), complexObject == null ? null : (object)complexObject.VAT);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.FooterText", parentPropertyName), complexObject == null ? null : (object)complexObject.FooterText);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.StartDate", parentPropertyName), complexObject == null ? null : (object)complexObject.StartDate);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.EndDate", parentPropertyName), complexObject == null ? null : (object)complexObject.EndDate);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Closed", parentPropertyName), complexObject == null ? null : (object)complexObject.Closed);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.DueDate", parentPropertyName), complexObject == null ? null : (object)complexObject.DueDate);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.Regarding", parentPropertyName), complexObject == null ? null : (object)complexObject.Regarding);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.InvoiceID", parentPropertyName), complexObject == null ? null : (object)complexObject.InvoiceID);
            changeTracker.RecordOriginalValue(String.Format(CultureInfo.InvariantCulture, "{0}.CustomerInvoiceGroupId", parentPropertyName), complexObject == null ? null : (object)complexObject.CustomerInvoiceGroupId);
        }

        #endregion

    }
}

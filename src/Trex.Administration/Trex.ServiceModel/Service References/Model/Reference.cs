//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.60310.0
// 
namespace Trex.ServiceModel.Model {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ExtendedPropertiesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="ExtendedProperties", KeyName="Name", ValueName="ExtendedProperty")]
    public class ExtendedPropertiesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsAddedToCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="AddedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="AddedObjects")]
    public class ObjectsAddedToCollectionProperties : System.Collections.Generic.Dictionary<string, Trex.ServiceModel.Model.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectList", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="ObjectValue")]
    public class ObjectList : System.Collections.ObjectModel.ObservableCollection<object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ObjectsRemovedFromCollectionProperties", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="DeletedObjectsForProperty", KeyName="CollectionPropertyName", ValueName="DeletedObjects")]
    public class ObjectsRemovedFromCollectionProperties : System.Collections.Generic.Dictionary<string, Trex.ServiceModel.Model.ObjectList> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="OriginalValuesDictionary", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="OriginalValues", KeyName="Name", ValueName="OriginalValue")]
    public class OriginalValuesDictionary : System.Collections.Generic.Dictionary<string, object> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfCustomertqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="Customer")]
    public class TrackableCollectionOfCustomertqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfCustomerInvoiceGrouptqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="CustomerInvoiceGroup")]
    public class TrackableCollectionOfCustomerInvoiceGrouptqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfInvoicetqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="Invoice")]
    public class TrackableCollectionOfInvoicetqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Invoice> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfCreditNotetqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="CreditNote")]
    public class TrackableCollectionOfCreditNotetqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTimeEntrytqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="TimeEntry")]
    public class TrackableCollectionOfTimeEntrytqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTasktqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="Task")]
    public class TrackableCollectionOfTasktqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfUsertqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="User")]
    public class TrackableCollectionOfUsertqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfInvoiceCommenttqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="InvoiceComment")]
    public class TrackableCollectionOfInvoiceCommenttqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfInvoiceFiletqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="InvoiceFile")]
    public class TrackableCollectionOfInvoiceFiletqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceFile> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfInvoiceLinetqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="InvoiceLine")]
    public class TrackableCollectionOfInvoiceLinetqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfProjecttqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="Project")]
    public class TrackableCollectionOfProjecttqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTagtqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="Tag")]
    public class TrackableCollectionOfTagtqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Tag> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfTimeEntryTypetqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="TimeEntryType")]
    public class TrackableCollectionOfTimeEntryTypetqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfUsersCustomertqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="UsersCustomer")]
    public class TrackableCollectionOfUsersCustomertqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UsersCustomer> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="TrackableCollectionOfInvoiceTemplateFilestqIfX_SpB", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts", ItemName="InvoiceTemplateFiles")]
    public class TrackableCollectionOfInvoiceTemplateFilestqIfX_SpB : System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplateFiles> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="TrexService", ConfigurationName="Model.ITrexService")]
    public interface ITrexService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ValidateUser", ReplyAction="TrexService/ITrexService/ValidateUserResponse")]
        System.IAsyncResult BeginValidateUser(string userName, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetUser", ReplyAction="TrexService/ITrexService/GetUserResponse")]
        System.IAsyncResult BeginGetUser(string userName, string password, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.User EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/PingService", ReplyAction="TrexService/ITrexService/PingServiceResponse")]
        System.IAsyncResult BeginPingService(System.AsyncCallback callback, object asyncState);
        
        bool EndPingService(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetUnsyncedCompanies", ReplyAction="TrexService/ITrexService/GetUnsyncedCompaniesResponse")]
        System.IAsyncResult BeginGetUnsyncedCompanies(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndGetUnsyncedCompanies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetUnsyncedProjects", ReplyAction="TrexService/ITrexService/GetUnsyncedProjectsResponse")]
        System.IAsyncResult BeginGetUnsyncedProjects(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndGetUnsyncedProjects(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetUnsyncedTasks", ReplyAction="TrexService/ITrexService/GetUnsyncedTasksResponse")]
        System.IAsyncResult BeginGetUnsyncedTasks(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndGetUnsyncedTasks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/UploadNewTasks", ReplyAction="TrexService/ITrexService/UploadNewTasksResponse")]
        System.IAsyncResult BeginUploadNewTasks(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> tasks, Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndUploadNewTasks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/UploadNewTimeEntries", ReplyAction="TrexService/ITrexService/UploadNewTimeEntriesResponse")]
        System.IAsyncResult BeginUploadNewTimeEntries(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> timeEntries, Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState);
        
        void EndUploadNewTimeEntries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ChangePassword", ReplyAction="TrexService/ITrexService/ChangePasswordResponse")]
        System.IAsyncResult BeginChangePassword(string userName, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState);
        
        bool EndChangePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetRoles", ReplyAction="TrexService/ITrexService/GetRolesResponse")]
        System.IAsyncResult BeginGetRoles(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role> EndGetRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/UpdateUserRoles", ReplyAction="TrexService/ITrexService/UpdateUserRolesResponse")]
        System.IAsyncResult BeginUpdateUserRoles(string userName, System.Collections.ObjectModel.ObservableCollection<string> roles, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateUserRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/CreateRole", ReplyAction="TrexService/ITrexService/CreateRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trex.ServiceContracts.ExceptionInfo), Action="TrexService/ITrexService/CreateRoleExceptionInfoFault", Name="ExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts")]
        System.IAsyncResult BeginCreateRole(string roleName, System.AsyncCallback callback, object asyncState);
        
        void EndCreateRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteRole", ReplyAction="TrexService/ITrexService/DeleteRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Trex.ServiceContracts.ExceptionInfo), Action="TrexService/ITrexService/DeleteRoleExceptionInfoFault", Name="ExceptionInfo", Namespace="http://schemas.datacontract.org/2004/07/Trex.ServiceContracts")]
        System.IAsyncResult BeginDeleteRole(string roleName, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ExistsRole", ReplyAction="TrexService/ITrexService/ExistsRoleResponse")]
        System.IAsyncResult BeginExistsRole(string name, System.AsyncCallback callback, object asyncState);
        
        bool EndExistsRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetPermissionsForSingleRole", ReplyAction="TrexService/ITrexService/GetPermissionsForSingleRoleResponse")]
        System.IAsyncResult BeginGetPermissionsForSingleRole(string roleName, int applicationId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> EndGetPermissionsForSingleRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/UpdatePermissions", ReplyAction="TrexService/ITrexService/UpdatePermissionsResponse")]
        System.IAsyncResult BeginUpdatePermissions(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> updatedPermissions, Trex.ServiceContracts.Role role, int applicationId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdatePermissions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetInvoiceById", ReplyAction="TrexService/ITrexService/GetInvoiceByIdResponse")]
        System.IAsyncResult BeginGetInvoiceById(int invoiceId, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Invoice EndGetInvoiceById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ValidateUserWithCustomerId", ReplyAction="TrexService/ITrexService/ValidateUserWithCustomerIdResponse")]
        System.IAsyncResult BeginValidateUserWithCustomerId(string userName, string password, string customerId, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateUserWithCustomerId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/CreateUser", ReplyAction="TrexService/ITrexService/CreateUserResponse")]
        System.IAsyncResult BeginCreateUser(Trex.ServiceContracts.User user, bool sendEmail, string language, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.UserCreationResponse EndCreateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ResetPassword", ReplyAction="TrexService/ITrexService/ResetPasswordResponse")]
        System.IAsyncResult BeginResetPassword(Trex.ServiceContracts.User user, string language, System.AsyncCallback callback, object asyncState);
        
        bool EndResetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetAllInvoiceTemplates", ReplyAction="TrexService/ITrexService/GetAllInvoiceTemplatesResponse")]
        System.IAsyncResult BeginGetAllInvoiceTemplates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> EndGetAllInvoiceTemplates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveInvoiceTemplate", ReplyAction="TrexService/ITrexService/SaveInvoiceTemplateResponse")]
        System.IAsyncResult BeginSaveInvoiceTemplate(Trex.ServiceContracts.InvoiceTemplate template, System.AsyncCallback callback, object asyncState);
        
        void EndSaveInvoiceTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetAllPermissionsByClientId", ReplyAction="TrexService/ITrexService/GetAllPermissionsByClientIdResponse")]
        System.IAsyncResult BeginGetAllPermissionsByClientId(int clientId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> EndGetAllPermissionsByClientId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetLatestWorkedOnCustomersByUser", ReplyAction="TrexService/ITrexService/GetLatestWorkedOnCustomersByUserResponse")]
        System.IAsyncResult BeginGetLatestWorkedOnCustomersByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndGetLatestWorkedOnCustomersByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetLatestWorkedOnProjectsByUser", ReplyAction="TrexService/ITrexService/GetLatestWorkedOnProjectsByUserResponse")]
        System.IAsyncResult BeginGetLatestWorkedOnProjectsByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndGetLatestWorkedOnProjectsByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetLatestWorkedOnTasksByUser", ReplyAction="TrexService/ITrexService/GetLatestWorkedOnTasksByUserResponse")]
        System.IAsyncResult BeginGetLatestWorkedOnTasksByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndGetLatestWorkedOnTasksByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GenerateInvoicesFromCustomerID", ReplyAction="TrexService/ITrexService/GenerateInvoicesFromCustomerIDResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginGenerateInvoicesFromCustomerID(System.DateTime startDate, System.DateTime endDate, int customerId, int userId, float VAT, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndGenerateInvoicesFromCustomerID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GenerateCreditnote", ReplyAction="TrexService/ITrexService/GenerateCreditnoteResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginGenerateCreditnote(int invoiceId, int currentUserId, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndGenerateCreditnote(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/UpdateTimeEntryPrice", ReplyAction="TrexService/ITrexService/UpdateTimeEntryPriceResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginUpdateTimeEntryPrice(int projectId, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndUpdateTimeEntryPrice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetCustomerByCriteria", ReplyAction="TrexService/ITrexService/GetCustomerByCriteriaResponse")]
        System.IAsyncResult BeginGetCustomerByCriteria(Trex.ServiceContracts.GetCustomerByIdCriterias criterias, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Customer EndGetCustomerByCriteria(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/LoadComments", ReplyAction="TrexService/ITrexService/LoadCommentsResponse")]
        System.IAsyncResult BeginLoadComments(int invoiceId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment> EndLoadComments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveComment", ReplyAction="TrexService/ITrexService/SaveCommentResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginSaveComment(string comment, int invoiceID, int userID, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndSaveComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetDebitList", ReplyAction="TrexService/ITrexService/GetDebitListResponse")]
        System.IAsyncResult BeginGetDebitList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> EndGetDebitList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetTimeEntryByTimeEntry", ReplyAction="TrexService/ITrexService/GetTimeEntryByTimeEntryResponse")]
        System.IAsyncResult BeginGetTimeEntryByTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.TimeEntry EndGetTimeEntryByTimeEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetInvoiceByInvoiceId", ReplyAction="TrexService/ITrexService/GetInvoiceByInvoiceIdResponse")]
        System.IAsyncResult BeginGetInvoiceByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.InvoiceListItemView EndGetInvoiceByInvoiceId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetAllInvoiceIds", ReplyAction="TrexService/ITrexService/GetAllInvoiceIdsResponse")]
        System.IAsyncResult BeginGetAllInvoiceIds(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>> EndGetAllInvoiceIds(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/RecalculateInvoice", ReplyAction="TrexService/ITrexService/RecalculateInvoiceResponse")]
        System.IAsyncResult BeginRecalculateInvoice(int invoiceId, System.DateTime startDate, System.DateTime endDate, int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState);
        
        void EndRecalculateInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteInvoiceTemplate", ReplyAction="TrexService/ITrexService/DeleteInvoiceTemplateResponse")]
        System.IAsyncResult BeginDeleteInvoiceTemplate(Trex.ServiceContracts.InvoiceTemplate template, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteInvoiceTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/UpdateExclVAT", ReplyAction="TrexService/ITrexService/UpdateExclVATResponse")]
        System.IAsyncResult BeginUpdateExclVAT(int invoiceId, System.AsyncCallback callback, object asyncState);
        
        System.Nullable<double> EndUpdateExclVAT(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetFinalizedInvoiceDataByInvoiceId", ReplyAction="TrexService/ITrexService/GetFinalizedInvoiceDataByInvoiceIdResponse")]
        System.IAsyncResult BeginGetFinalizedInvoiceDataByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote> EndGetFinalizedInvoiceDataByInvoiceId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveInvoiceTemplateFile", ReplyAction="TrexService/ITrexService/SaveInvoiceTemplateFileResponse")]
        System.IAsyncResult BeginSaveInvoiceTemplateFile(byte[] binaryFile, int invoiceTemplateId, System.AsyncCallback callback, object asyncState);
        
        void EndSaveInvoiceTemplateFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetInvoiceTemplates", ReplyAction="TrexService/ITrexService/GetInvoiceTemplatesResponse")]
        System.IAsyncResult BeginGetInvoiceTemplates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> EndGetInvoiceTemplates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/OverWriteCig", ReplyAction="TrexService/ITrexService/OverWriteCigResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginOverWriteCig(Trex.ServiceContracts.CustomerInvoiceGroup cig, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndOverWriteCig(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveCIG", ReplyAction="TrexService/ITrexService/SaveCIGResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginSaveCIG(Trex.ServiceContracts.CustomerInvoiceGroup cig, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndSaveCIG(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveInvoiceChanges", ReplyAction="TrexService/ITrexService/SaveInvoiceChangesResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginSaveInvoiceChanges(Trex.ServiceContracts.InvoiceListItemView invoicedata, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndSaveInvoiceChanges(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetInvoicesByCustomerId", ReplyAction="TrexService/ITrexService/GetInvoicesByCustomerIdResponse")]
        System.IAsyncResult BeginGetInvoicesByCustomerId(System.Collections.ObjectModel.ObservableCollection<int> customerIds, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> EndGetInvoicesByCustomerId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GenerateInvoiceLines", ReplyAction="TrexService/ITrexService/GenerateInvoiceLinesResponse")]
        System.IAsyncResult BeginGenerateInvoiceLines(int invoiceid, System.AsyncCallback callback, object asyncState);
        
        void EndGenerateInvoiceLines(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/CreateNewInvoiceLine", ReplyAction="TrexService/ITrexService/CreateNewInvoiceLineResponse")]
        System.IAsyncResult BeginCreateNewInvoiceLine(int invoiceId, double vat, System.AsyncCallback callback, object asyncState);
        
        void EndCreateNewInvoiceLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SetStandardInvoicePrintTemplate", ReplyAction="TrexService/ITrexService/SetStandardInvoicePrintTemplateResponse")]
        System.IAsyncResult BeginSetStandardInvoicePrintTemplate(int templateId, System.AsyncCallback callback, object asyncState);
        
        void EndSetStandardInvoicePrintTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SetStandardInvoiceMailTemplate", ReplyAction="TrexService/ITrexService/SetStandardInvoiceMailTemplateResponse")]
        System.IAsyncResult BeginSetStandardInvoiceMailTemplate(int templateId, System.AsyncCallback callback, object asyncState);
        
        void EndSetStandardInvoiceMailTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SetStandardSpecificationTemplate", ReplyAction="TrexService/ITrexService/SetStandardSpecificationTemplateResponse")]
        System.IAsyncResult BeginSetStandardSpecificationTemplate(int templateId, System.AsyncCallback callback, object asyncState);
        
        void EndSetStandardSpecificationTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SendInvoiceEmailToCustomerInvoiceGroup", ReplyAction="TrexService/ITrexService/SendInvoiceEmailToCustomerInvoiceGroupResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginSendInvoiceEmailToCustomerInvoiceGroup(Trex.ServiceContracts.Invoice invoice, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndSendInvoiceEmailToCustomerInvoiceGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetCustomerInvoiceGroupByCustomerInvoiceFGroupId", ReplyAction="TrexService/ITrexService/GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdResponse" +
            "")]
        System.IAsyncResult BeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.CustomerInvoiceGroup EndGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteCustomerInvoiceGroup", ReplyAction="TrexService/ITrexService/DeleteCustomerInvoiceGroupResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginDeleteCustomerInvoiceGroup(int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndDeleteCustomerInvoiceGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetCustomerInvoiceGroupByCustomerId", ReplyAction="TrexService/ITrexService/GetCustomerInvoiceGroupByCustomerIdResponse")]
        System.IAsyncResult BeginGetCustomerInvoiceGroupByCustomerId(int customerId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> EndGetCustomerInvoiceGroupByCustomerId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/InsertCustomerInvoiceGroup", ReplyAction="TrexService/ITrexService/InsertCustomerInvoiceGroupResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Trex.ServiceContracts.UserCreationResponse))]
        System.IAsyncResult BeginInsertCustomerInvoiceGroup(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> group, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.ServerResponse EndInsertCustomerInvoiceGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ReCalculateInvoice", ReplyAction="TrexService/ITrexService/ReCalculateInvoiceResponse")]
        System.IAsyncResult BeginReCalculateInvoice1(Trex.ServiceModel.Model.ReCalculateInvoiceRequest request, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceModel.Model.ReCalculateInvoiceResponse EndReCalculateInvoice1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetInvoiceDataByInvoiceId", ReplyAction="TrexService/ITrexService/GetInvoiceDataByInvoiceIdResponse")]
        System.IAsyncResult BeginGetInvoiceDataByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> EndGetInvoiceDataByInvoiceId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetInvoiceLinesByInvoiceId", ReplyAction="TrexService/ITrexService/GetInvoiceLinesByInvoiceIdResponse")]
        System.IAsyncResult BeginGetInvoiceLinesByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine> EndGetInvoiceLinesByInvoiceId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetTimeEntriesForInvoicing", ReplyAction="TrexService/ITrexService/GetTimeEntriesForInvoicingResponse")]
        System.IAsyncResult BeginGetTimeEntriesForInvoicing(System.DateTime startDate, System.DateTime endDate, int customerId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> EndGetTimeEntriesForInvoicing(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetCustomerInvoiceViews", ReplyAction="TrexService/ITrexService/GetCustomerInvoiceViewsResponse")]
        System.IAsyncResult BeginGetCustomerInvoiceViews(System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView> EndGetCustomerInvoiceViews(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetCustomerById", ReplyAction="TrexService/ITrexService/GetCustomerByIdResponse")]
        System.IAsyncResult BeginGetCustomerById(int customerId, bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Customer EndGetCustomerById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetProjectById", ReplyAction="TrexService/ITrexService/GetProjectByIdResponse")]
        System.IAsyncResult BeginGetProjectById(int projectId, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Project EndGetProjectById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetTaskById", ReplyAction="TrexService/ITrexService/GetTaskByIdResponse")]
        System.IAsyncResult BeginGetTaskById(int taskId, bool includeParents, bool includeSubTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Task EndGetTaskById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetAllCustomers", ReplyAction="TrexService/ITrexService/GetAllCustomersResponse")]
        System.IAsyncResult BeginGetAllCustomers(bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndGetAllCustomers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/EntityCompanyRequest", ReplyAction="TrexService/ITrexService/EntityCompanyRequestResponse")]
        System.IAsyncResult BeginEntityCompanyRequest(System.Collections.ObjectModel.ObservableCollection<int> customerIds, bool includeParents, bool includeInactive, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndEntityCompanyRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/EntityProjectRequest", ReplyAction="TrexService/ITrexService/EntityProjectRequestResponse")]
        System.IAsyncResult BeginEntityProjectRequest(System.Collections.ObjectModel.ObservableCollection<int> projectIds, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndEntityProjectRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/EntityTaskRequest", ReplyAction="TrexService/ITrexService/EntityTaskRequestResponse")]
        System.IAsyncResult BeginEntityTaskRequest(System.Collections.ObjectModel.ObservableCollection<int> taskIds, bool includeParents, bool includeSubTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndEntityTaskRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetTimeEntriesByPeriodAndUser", ReplyAction="TrexService/ITrexService/GetTimeEntriesByPeriodAndUserResponse")]
        System.IAsyncResult BeginGetTimeEntriesByPeriodAndUser(Trex.ServiceContracts.User user, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> EndGetTimeEntriesByPeriodAndUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetTimeEntriesByPeriod", ReplyAction="TrexService/ITrexService/GetTimeEntriesByPeriodResponse")]
        System.IAsyncResult BeginGetTimeEntriesByPeriod(System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView> EndGetTimeEntriesByPeriod(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetAllUsers", ReplyAction="TrexService/ITrexService/GetAllUsersResponse")]
        System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User> EndGetAllUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetUserByUserName", ReplyAction="TrexService/ITrexService/GetUserByUserNameResponse")]
        System.IAsyncResult BeginGetUserByUserName(string userName, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.User EndGetUserByUserName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveUser", ReplyAction="TrexService/ITrexService/SaveUserResponse")]
        System.IAsyncResult BeginSaveUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState);
        
        void EndSaveUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteUser", ReplyAction="TrexService/ITrexService/DeleteUserResponse")]
        System.IAsyncResult BeginDeleteUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeactivateUser", ReplyAction="TrexService/ITrexService/DeactivateUserResponse")]
        System.IAsyncResult BeginDeactivateUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState);
        
        void EndDeactivateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ActivateUser", ReplyAction="TrexService/ITrexService/ActivateUserResponse")]
        System.IAsyncResult BeginActivateUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState);
        
        void EndActivateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveTimeEntry", ReplyAction="TrexService/ITrexService/SaveTimeEntryResponse")]
        System.IAsyncResult BeginSaveTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.TimeEntry EndSaveTimeEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/ExcludeTimeEntry", ReplyAction="TrexService/ITrexService/ExcludeTimeEntryResponse")]
        System.IAsyncResult BeginExcludeTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState);
        
        void EndExcludeTimeEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveInvoiceLine", ReplyAction="TrexService/ITrexService/SaveInvoiceLineResponse")]
        System.IAsyncResult BeginSaveInvoiceLine(Trex.ServiceContracts.InvoiceLine invoiceLine, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.InvoiceLine EndSaveInvoiceLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveInvoice", ReplyAction="TrexService/ITrexService/SaveInvoiceResponse")]
        System.IAsyncResult BeginSaveInvoice(Trex.ServiceContracts.Invoice invoice, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Invoice EndSaveInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveTask", ReplyAction="TrexService/ITrexService/SaveTaskResponse")]
        System.IAsyncResult BeginSaveTask(Trex.ServiceContracts.Task task, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Task EndSaveTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveProject", ReplyAction="TrexService/ITrexService/SaveProjectResponse")]
        System.IAsyncResult BeginSaveProject(Trex.ServiceContracts.Project project, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Project EndSaveProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveCustomer", ReplyAction="TrexService/ITrexService/SaveCustomerResponse")]
        System.IAsyncResult BeginSaveCustomer(Trex.ServiceContracts.Customer customer, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.Customer EndSaveCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteInvoiceLine", ReplyAction="TrexService/ITrexService/DeleteInvoiceLineResponse")]
        System.IAsyncResult BeginDeleteInvoiceLine(int invoiceLineId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteInvoiceLine(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteInvoiceDraft", ReplyAction="TrexService/ITrexService/DeleteInvoiceDraftResponse")]
        System.IAsyncResult BeginDeleteInvoiceDraft(int invoiceDraftID, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteInvoiceDraft(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteCustomer", ReplyAction="TrexService/ITrexService/DeleteCustomerResponse")]
        System.IAsyncResult BeginDeleteCustomer(Trex.ServiceContracts.Customer customer, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteCustomer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteTask", ReplyAction="TrexService/ITrexService/DeleteTaskResponse")]
        System.IAsyncResult BeginDeleteTask(Trex.ServiceContracts.Task task, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteTask(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteProject", ReplyAction="TrexService/ITrexService/DeleteProjectResponse")]
        System.IAsyncResult BeginDeleteProject(Trex.ServiceContracts.Project project, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/DeleteTimeEntry", ReplyAction="TrexService/ITrexService/DeleteTimeEntryResponse")]
        System.IAsyncResult BeginDeleteTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteTimeEntry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetGlobalTimeEntryTypes", ReplyAction="TrexService/ITrexService/GetGlobalTimeEntryTypesResponse")]
        System.IAsyncResult BeginGetGlobalTimeEntryTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> EndGetGlobalTimeEntryTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/GetAllTimeEntryTypes", ReplyAction="TrexService/ITrexService/GetAllTimeEntryTypesResponse")]
        System.IAsyncResult BeginGetAllTimeEntryTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> EndGetAllTimeEntryTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SaveTimeEntryType", ReplyAction="TrexService/ITrexService/SaveTimeEntryTypeResponse")]
        System.IAsyncResult BeginSaveTimeEntryType(Trex.ServiceContracts.TimeEntryType timeEntryType, System.AsyncCallback callback, object asyncState);
        
        Trex.ServiceContracts.TimeEntryType EndSaveTimeEntryType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SearchTasks", ReplyAction="TrexService/ITrexService/SearchTasksResponse")]
        System.IAsyncResult BeginSearchTasks(string searchString, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndSearchTasks(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="TrexService/ITrexService/SearchProjects", ReplyAction="TrexService/ITrexService/SearchProjectsResponse")]
        System.IAsyncResult BeginSearchProjects(string searchString, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndSearchProjects(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReCalculateInvoice", WrapperNamespace="TrexService", IsWrapped=true)]
    public partial class ReCalculateInvoiceRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="TrexService", Order=0)]
        public Trex.ServiceContracts.Invoice invoice;
        
        public ReCalculateInvoiceRequest() {
        }
        
        public ReCalculateInvoiceRequest(Trex.ServiceContracts.Invoice invoice) {
            this.invoice = invoice;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReCalculateInvoiceResponse", WrapperNamespace="TrexService", IsWrapped=true)]
    public partial class ReCalculateInvoiceResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="TrexService", Order=0)]
        public Trex.ServiceContracts.Invoice ReCalculateInvoiceResult;
        
        public ReCalculateInvoiceResponse() {
        }
        
        public ReCalculateInvoiceResponse(Trex.ServiceContracts.Invoice ReCalculateInvoiceResult) {
            this.ReCalculateInvoiceResult = ReCalculateInvoiceResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITrexServiceChannel : Trex.ServiceModel.Model.ITrexService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PingServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PingServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUnsyncedCompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUnsyncedCompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUnsyncedProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUnsyncedProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUnsyncedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUnsyncedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UploadNewTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UploadNewTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExistsRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExistsRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPermissionsForSingleRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPermissionsForSingleRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvoiceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvoiceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Invoice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Invoice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateUserWithCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateUserWithCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.UserCreationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.UserCreationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllInvoiceTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllInvoiceTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllPermissionsByClientIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPermissionsByClientIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestWorkedOnCustomersByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestWorkedOnCustomersByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestWorkedOnProjectsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestWorkedOnProjectsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestWorkedOnTasksByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestWorkedOnTasksByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateInvoicesFromCustomerIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateInvoicesFromCustomerIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateCreditnoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateCreditnoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateTimeEntryPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateTimeEntryPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerByCriteriaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerByCriteriaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Customer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Customer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoadCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoadCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDebitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDebitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeEntryByTimeEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeEntryByTimeEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.TimeEntry Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.TimeEntry)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvoiceByInvoiceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvoiceByInvoiceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.InvoiceListItemView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.InvoiceListItemView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllInvoiceIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllInvoiceIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateExclVATCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateExclVATCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Nullable<double> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Nullable<double>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFinalizedInvoiceDataByInvoiceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFinalizedInvoiceDataByInvoiceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvoiceTemplatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvoiceTemplatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OverWriteCigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OverWriteCigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCIGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCIGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveInvoiceChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveInvoiceChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvoicesByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvoicesByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendInvoiceEmailToCustomerInvoiceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendInvoiceEmailToCustomerInvoiceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.CustomerInvoiceGroup Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.CustomerInvoiceGroup)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCustomerInvoiceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCustomerInvoiceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerInvoiceGroupByCustomerIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerInvoiceGroupByCustomerIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertCustomerInvoiceGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertCustomerInvoiceGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.ServerResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.ServerResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReCalculateInvoice1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReCalculateInvoice1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Invoice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Invoice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvoiceDataByInvoiceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvoiceDataByInvoiceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInvoiceLinesByInvoiceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInvoiceLinesByInvoiceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeEntriesForInvoicingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeEntriesForInvoicingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerInvoiceViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerInvoiceViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Customer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Customer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Project Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Project)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaskByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaskByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Task Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Task)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityCompanyRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityCompanyRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityProjectRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityProjectRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EntityTaskRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EntityTaskRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeEntriesByPeriodAndUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeEntriesByPeriodAndUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTimeEntriesByPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeEntriesByPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTimeEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTimeEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.TimeEntry Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.TimeEntry)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveInvoiceLineCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveInvoiceLineCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.InvoiceLine Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.InvoiceLine)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Invoice Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Invoice)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Task Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Task)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Project Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Project)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.Customer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.Customer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteTimeEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteTimeEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGlobalTimeEntryTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGlobalTimeEntryTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllTimeEntryTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllTimeEntryTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveTimeEntryTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveTimeEntryTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Trex.ServiceContracts.TimeEntryType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Trex.ServiceContracts.TimeEntryType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchProjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchProjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TrexServiceClient : System.ServiceModel.ClientBase<Trex.ServiceModel.Model.ITrexService>, Trex.ServiceModel.Model.ITrexService {
        
        private BeginOperationDelegate onBeginValidateUserDelegate;
        
        private EndOperationDelegate onEndValidateUserDelegate;
        
        private System.Threading.SendOrPostCallback onValidateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginPingServiceDelegate;
        
        private EndOperationDelegate onEndPingServiceDelegate;
        
        private System.Threading.SendOrPostCallback onPingServiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUnsyncedCompaniesDelegate;
        
        private EndOperationDelegate onEndGetUnsyncedCompaniesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUnsyncedCompaniesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUnsyncedProjectsDelegate;
        
        private EndOperationDelegate onEndGetUnsyncedProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onGetUnsyncedProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUnsyncedTasksDelegate;
        
        private EndOperationDelegate onEndGetUnsyncedTasksDelegate;
        
        private System.Threading.SendOrPostCallback onGetUnsyncedTasksCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadNewTasksDelegate;
        
        private EndOperationDelegate onEndUploadNewTasksDelegate;
        
        private System.Threading.SendOrPostCallback onUploadNewTasksCompletedDelegate;
        
        private BeginOperationDelegate onBeginUploadNewTimeEntriesDelegate;
        
        private EndOperationDelegate onEndUploadNewTimeEntriesDelegate;
        
        private System.Threading.SendOrPostCallback onUploadNewTimeEntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePasswordDelegate;
        
        private EndOperationDelegate onEndChangePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRolesDelegate;
        
        private EndOperationDelegate onEndGetRolesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUserRolesDelegate;
        
        private EndOperationDelegate onEndUpdateUserRolesDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUserRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateRoleDelegate;
        
        private EndOperationDelegate onEndCreateRoleDelegate;
        
        private System.Threading.SendOrPostCallback onCreateRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRoleDelegate;
        
        private EndOperationDelegate onEndDeleteRoleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginExistsRoleDelegate;
        
        private EndOperationDelegate onEndExistsRoleDelegate;
        
        private System.Threading.SendOrPostCallback onExistsRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPermissionsForSingleRoleDelegate;
        
        private EndOperationDelegate onEndGetPermissionsForSingleRoleDelegate;
        
        private System.Threading.SendOrPostCallback onGetPermissionsForSingleRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePermissionsDelegate;
        
        private EndOperationDelegate onEndUpdatePermissionsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePermissionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvoiceByIdDelegate;
        
        private EndOperationDelegate onEndGetInvoiceByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvoiceByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateUserWithCustomerIdDelegate;
        
        private EndOperationDelegate onEndValidateUserWithCustomerIdDelegate;
        
        private System.Threading.SendOrPostCallback onValidateUserWithCustomerIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateUserDelegate;
        
        private EndOperationDelegate onEndCreateUserDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetPasswordDelegate;
        
        private EndOperationDelegate onEndResetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onResetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllInvoiceTemplatesDelegate;
        
        private EndOperationDelegate onEndGetAllInvoiceTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllInvoiceTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveInvoiceTemplateDelegate;
        
        private EndOperationDelegate onEndSaveInvoiceTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onSaveInvoiceTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPermissionsByClientIdDelegate;
        
        private EndOperationDelegate onEndGetAllPermissionsByClientIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPermissionsByClientIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestWorkedOnCustomersByUserDelegate;
        
        private EndOperationDelegate onEndGetLatestWorkedOnCustomersByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestWorkedOnCustomersByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestWorkedOnProjectsByUserDelegate;
        
        private EndOperationDelegate onEndGetLatestWorkedOnProjectsByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestWorkedOnProjectsByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestWorkedOnTasksByUserDelegate;
        
        private EndOperationDelegate onEndGetLatestWorkedOnTasksByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestWorkedOnTasksByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateInvoicesFromCustomerIDDelegate;
        
        private EndOperationDelegate onEndGenerateInvoicesFromCustomerIDDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateInvoicesFromCustomerIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateCreditnoteDelegate;
        
        private EndOperationDelegate onEndGenerateCreditnoteDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateCreditnoteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateTimeEntryPriceDelegate;
        
        private EndOperationDelegate onEndUpdateTimeEntryPriceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateTimeEntryPriceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerByCriteriaDelegate;
        
        private EndOperationDelegate onEndGetCustomerByCriteriaDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerByCriteriaCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoadCommentsDelegate;
        
        private EndOperationDelegate onEndLoadCommentsDelegate;
        
        private System.Threading.SendOrPostCallback onLoadCommentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCommentDelegate;
        
        private EndOperationDelegate onEndSaveCommentDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDebitListDelegate;
        
        private EndOperationDelegate onEndGetDebitListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDebitListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeEntryByTimeEntryDelegate;
        
        private EndOperationDelegate onEndGetTimeEntryByTimeEntryDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeEntryByTimeEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvoiceByInvoiceIdDelegate;
        
        private EndOperationDelegate onEndGetInvoiceByInvoiceIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvoiceByInvoiceIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllInvoiceIdsDelegate;
        
        private EndOperationDelegate onEndGetAllInvoiceIdsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllInvoiceIdsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecalculateInvoiceDelegate;
        
        private EndOperationDelegate onEndRecalculateInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onRecalculateInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteInvoiceTemplateDelegate;
        
        private EndOperationDelegate onEndDeleteInvoiceTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteInvoiceTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateExclVATDelegate;
        
        private EndOperationDelegate onEndUpdateExclVATDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateExclVATCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFinalizedInvoiceDataByInvoiceIdDelegate;
        
        private EndOperationDelegate onEndGetFinalizedInvoiceDataByInvoiceIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetFinalizedInvoiceDataByInvoiceIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveInvoiceTemplateFileDelegate;
        
        private EndOperationDelegate onEndSaveInvoiceTemplateFileDelegate;
        
        private System.Threading.SendOrPostCallback onSaveInvoiceTemplateFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvoiceTemplatesDelegate;
        
        private EndOperationDelegate onEndGetInvoiceTemplatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvoiceTemplatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOverWriteCigDelegate;
        
        private EndOperationDelegate onEndOverWriteCigDelegate;
        
        private System.Threading.SendOrPostCallback onOverWriteCigCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCIGDelegate;
        
        private EndOperationDelegate onEndSaveCIGDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCIGCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveInvoiceChangesDelegate;
        
        private EndOperationDelegate onEndSaveInvoiceChangesDelegate;
        
        private System.Threading.SendOrPostCallback onSaveInvoiceChangesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvoicesByCustomerIdDelegate;
        
        private EndOperationDelegate onEndGetInvoicesByCustomerIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvoicesByCustomerIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateInvoiceLinesDelegate;
        
        private EndOperationDelegate onEndGenerateInvoiceLinesDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateInvoiceLinesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateNewInvoiceLineDelegate;
        
        private EndOperationDelegate onEndCreateNewInvoiceLineDelegate;
        
        private System.Threading.SendOrPostCallback onCreateNewInvoiceLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetStandardInvoicePrintTemplateDelegate;
        
        private EndOperationDelegate onEndSetStandardInvoicePrintTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onSetStandardInvoicePrintTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetStandardInvoiceMailTemplateDelegate;
        
        private EndOperationDelegate onEndSetStandardInvoiceMailTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onSetStandardInvoiceMailTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetStandardSpecificationTemplateDelegate;
        
        private EndOperationDelegate onEndSetStandardSpecificationTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onSetStandardSpecificationTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendInvoiceEmailToCustomerInvoiceGroupDelegate;
        
        private EndOperationDelegate onEndSendInvoiceEmailToCustomerInvoiceGroupDelegate;
        
        private System.Threading.SendOrPostCallback onSendInvoiceEmailToCustomerInvoiceGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate;
        
        private EndOperationDelegate onEndGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCustomerInvoiceGroupDelegate;
        
        private EndOperationDelegate onEndDeleteCustomerInvoiceGroupDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCustomerInvoiceGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerInvoiceGroupByCustomerIdDelegate;
        
        private EndOperationDelegate onEndGetCustomerInvoiceGroupByCustomerIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerInvoiceGroupByCustomerIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertCustomerInvoiceGroupDelegate;
        
        private EndOperationDelegate onEndInsertCustomerInvoiceGroupDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCustomerInvoiceGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginReCalculateInvoice1Delegate;
        
        private EndOperationDelegate onEndReCalculateInvoice1Delegate;
        
        private System.Threading.SendOrPostCallback onReCalculateInvoice1CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvoiceDataByInvoiceIdDelegate;
        
        private EndOperationDelegate onEndGetInvoiceDataByInvoiceIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvoiceDataByInvoiceIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInvoiceLinesByInvoiceIdDelegate;
        
        private EndOperationDelegate onEndGetInvoiceLinesByInvoiceIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetInvoiceLinesByInvoiceIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeEntriesForInvoicingDelegate;
        
        private EndOperationDelegate onEndGetTimeEntriesForInvoicingDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeEntriesForInvoicingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerInvoiceViewsDelegate;
        
        private EndOperationDelegate onEndGetCustomerInvoiceViewsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerInvoiceViewsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerByIdDelegate;
        
        private EndOperationDelegate onEndGetCustomerByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectByIdDelegate;
        
        private EndOperationDelegate onEndGetProjectByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaskByIdDelegate;
        
        private EndOperationDelegate onEndGetTaskByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaskByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllCustomersDelegate;
        
        private EndOperationDelegate onEndGetAllCustomersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllCustomersCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityCompanyRequestDelegate;
        
        private EndOperationDelegate onEndEntityCompanyRequestDelegate;
        
        private System.Threading.SendOrPostCallback onEntityCompanyRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityProjectRequestDelegate;
        
        private EndOperationDelegate onEndEntityProjectRequestDelegate;
        
        private System.Threading.SendOrPostCallback onEntityProjectRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginEntityTaskRequestDelegate;
        
        private EndOperationDelegate onEndEntityTaskRequestDelegate;
        
        private System.Threading.SendOrPostCallback onEntityTaskRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeEntriesByPeriodAndUserDelegate;
        
        private EndOperationDelegate onEndGetTimeEntriesByPeriodAndUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeEntriesByPeriodAndUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeEntriesByPeriodDelegate;
        
        private EndOperationDelegate onEndGetTimeEntriesByPeriodDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeEntriesByPeriodCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllUsersDelegate;
        
        private EndOperationDelegate onEndGetAllUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserByUserNameDelegate;
        
        private EndOperationDelegate onEndGetUserByUserNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserByUserNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveUserDelegate;
        
        private EndOperationDelegate onEndSaveUserDelegate;
        
        private System.Threading.SendOrPostCallback onSaveUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserDelegate;
        
        private EndOperationDelegate onEndDeleteUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeactivateUserDelegate;
        
        private EndOperationDelegate onEndDeactivateUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeactivateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginActivateUserDelegate;
        
        private EndOperationDelegate onEndActivateUserDelegate;
        
        private System.Threading.SendOrPostCallback onActivateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTimeEntryDelegate;
        
        private EndOperationDelegate onEndSaveTimeEntryDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTimeEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginExcludeTimeEntryDelegate;
        
        private EndOperationDelegate onEndExcludeTimeEntryDelegate;
        
        private System.Threading.SendOrPostCallback onExcludeTimeEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveInvoiceLineDelegate;
        
        private EndOperationDelegate onEndSaveInvoiceLineDelegate;
        
        private System.Threading.SendOrPostCallback onSaveInvoiceLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveInvoiceDelegate;
        
        private EndOperationDelegate onEndSaveInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onSaveInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTaskDelegate;
        
        private EndOperationDelegate onEndSaveTaskDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveProjectDelegate;
        
        private EndOperationDelegate onEndSaveProjectDelegate;
        
        private System.Threading.SendOrPostCallback onSaveProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCustomerDelegate;
        
        private EndOperationDelegate onEndSaveCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteInvoiceLineDelegate;
        
        private EndOperationDelegate onEndDeleteInvoiceLineDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteInvoiceLineCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteInvoiceDraftDelegate;
        
        private EndOperationDelegate onEndDeleteInvoiceDraftDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteInvoiceDraftCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteCustomerDelegate;
        
        private EndOperationDelegate onEndDeleteCustomerDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCustomerCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTaskDelegate;
        
        private EndOperationDelegate onEndDeleteTaskDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProjectDelegate;
        
        private EndOperationDelegate onEndDeleteProjectDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteTimeEntryDelegate;
        
        private EndOperationDelegate onEndDeleteTimeEntryDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteTimeEntryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGlobalTimeEntryTypesDelegate;
        
        private EndOperationDelegate onEndGetGlobalTimeEntryTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetGlobalTimeEntryTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllTimeEntryTypesDelegate;
        
        private EndOperationDelegate onEndGetAllTimeEntryTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllTimeEntryTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveTimeEntryTypeDelegate;
        
        private EndOperationDelegate onEndSaveTimeEntryTypeDelegate;
        
        private System.Threading.SendOrPostCallback onSaveTimeEntryTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchTasksDelegate;
        
        private EndOperationDelegate onEndSearchTasksDelegate;
        
        private System.Threading.SendOrPostCallback onSearchTasksCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchProjectsDelegate;
        
        private EndOperationDelegate onEndSearchProjectsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchProjectsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public TrexServiceClient() {
        }
        
        public TrexServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TrexServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrexServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TrexServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<ValidateUserCompletedEventArgs> ValidateUserCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<PingServiceCompletedEventArgs> PingServiceCompleted;
        
        public event System.EventHandler<GetUnsyncedCompaniesCompletedEventArgs> GetUnsyncedCompaniesCompleted;
        
        public event System.EventHandler<GetUnsyncedProjectsCompletedEventArgs> GetUnsyncedProjectsCompleted;
        
        public event System.EventHandler<GetUnsyncedTasksCompletedEventArgs> GetUnsyncedTasksCompleted;
        
        public event System.EventHandler<UploadNewTasksCompletedEventArgs> UploadNewTasksCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UploadNewTimeEntriesCompleted;
        
        public event System.EventHandler<ChangePasswordCompletedEventArgs> ChangePasswordCompleted;
        
        public event System.EventHandler<GetRolesCompletedEventArgs> GetRolesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateUserRolesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateRoleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteRoleCompleted;
        
        public event System.EventHandler<ExistsRoleCompletedEventArgs> ExistsRoleCompleted;
        
        public event System.EventHandler<GetPermissionsForSingleRoleCompletedEventArgs> GetPermissionsForSingleRoleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdatePermissionsCompleted;
        
        public event System.EventHandler<GetInvoiceByIdCompletedEventArgs> GetInvoiceByIdCompleted;
        
        public event System.EventHandler<ValidateUserWithCustomerIdCompletedEventArgs> ValidateUserWithCustomerIdCompleted;
        
        public event System.EventHandler<CreateUserCompletedEventArgs> CreateUserCompleted;
        
        public event System.EventHandler<ResetPasswordCompletedEventArgs> ResetPasswordCompleted;
        
        public event System.EventHandler<GetAllInvoiceTemplatesCompletedEventArgs> GetAllInvoiceTemplatesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveInvoiceTemplateCompleted;
        
        public event System.EventHandler<GetAllPermissionsByClientIdCompletedEventArgs> GetAllPermissionsByClientIdCompleted;
        
        public event System.EventHandler<GetLatestWorkedOnCustomersByUserCompletedEventArgs> GetLatestWorkedOnCustomersByUserCompleted;
        
        public event System.EventHandler<GetLatestWorkedOnProjectsByUserCompletedEventArgs> GetLatestWorkedOnProjectsByUserCompleted;
        
        public event System.EventHandler<GetLatestWorkedOnTasksByUserCompletedEventArgs> GetLatestWorkedOnTasksByUserCompleted;
        
        public event System.EventHandler<GenerateInvoicesFromCustomerIDCompletedEventArgs> GenerateInvoicesFromCustomerIDCompleted;
        
        public event System.EventHandler<GenerateCreditnoteCompletedEventArgs> GenerateCreditnoteCompleted;
        
        public event System.EventHandler<UpdateTimeEntryPriceCompletedEventArgs> UpdateTimeEntryPriceCompleted;
        
        public event System.EventHandler<GetCustomerByCriteriaCompletedEventArgs> GetCustomerByCriteriaCompleted;
        
        public event System.EventHandler<LoadCommentsCompletedEventArgs> LoadCommentsCompleted;
        
        public event System.EventHandler<SaveCommentCompletedEventArgs> SaveCommentCompleted;
        
        public event System.EventHandler<GetDebitListCompletedEventArgs> GetDebitListCompleted;
        
        public event System.EventHandler<GetTimeEntryByTimeEntryCompletedEventArgs> GetTimeEntryByTimeEntryCompleted;
        
        public event System.EventHandler<GetInvoiceByInvoiceIdCompletedEventArgs> GetInvoiceByInvoiceIdCompleted;
        
        public event System.EventHandler<GetAllInvoiceIdsCompletedEventArgs> GetAllInvoiceIdsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RecalculateInvoiceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteInvoiceTemplateCompleted;
        
        public event System.EventHandler<UpdateExclVATCompletedEventArgs> UpdateExclVATCompleted;
        
        public event System.EventHandler<GetFinalizedInvoiceDataByInvoiceIdCompletedEventArgs> GetFinalizedInvoiceDataByInvoiceIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveInvoiceTemplateFileCompleted;
        
        public event System.EventHandler<GetInvoiceTemplatesCompletedEventArgs> GetInvoiceTemplatesCompleted;
        
        public event System.EventHandler<OverWriteCigCompletedEventArgs> OverWriteCigCompleted;
        
        public event System.EventHandler<SaveCIGCompletedEventArgs> SaveCIGCompleted;
        
        public event System.EventHandler<SaveInvoiceChangesCompletedEventArgs> SaveInvoiceChangesCompleted;
        
        public event System.EventHandler<GetInvoicesByCustomerIdCompletedEventArgs> GetInvoicesByCustomerIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GenerateInvoiceLinesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateNewInvoiceLineCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetStandardInvoicePrintTemplateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetStandardInvoiceMailTemplateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SetStandardSpecificationTemplateCompleted;
        
        public event System.EventHandler<SendInvoiceEmailToCustomerInvoiceGroupCompletedEventArgs> SendInvoiceEmailToCustomerInvoiceGroupCompleted;
        
        public event System.EventHandler<GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedEventArgs> GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompleted;
        
        public event System.EventHandler<DeleteCustomerInvoiceGroupCompletedEventArgs> DeleteCustomerInvoiceGroupCompleted;
        
        public event System.EventHandler<GetCustomerInvoiceGroupByCustomerIdCompletedEventArgs> GetCustomerInvoiceGroupByCustomerIdCompleted;
        
        public event System.EventHandler<InsertCustomerInvoiceGroupCompletedEventArgs> InsertCustomerInvoiceGroupCompleted;
        
        public event System.EventHandler<ReCalculateInvoice1CompletedEventArgs> ReCalculateInvoice1Completed;
        
        public event System.EventHandler<GetInvoiceDataByInvoiceIdCompletedEventArgs> GetInvoiceDataByInvoiceIdCompleted;
        
        public event System.EventHandler<GetInvoiceLinesByInvoiceIdCompletedEventArgs> GetInvoiceLinesByInvoiceIdCompleted;
        
        public event System.EventHandler<GetTimeEntriesForInvoicingCompletedEventArgs> GetTimeEntriesForInvoicingCompleted;
        
        public event System.EventHandler<GetCustomerInvoiceViewsCompletedEventArgs> GetCustomerInvoiceViewsCompleted;
        
        public event System.EventHandler<GetCustomerByIdCompletedEventArgs> GetCustomerByIdCompleted;
        
        public event System.EventHandler<GetProjectByIdCompletedEventArgs> GetProjectByIdCompleted;
        
        public event System.EventHandler<GetTaskByIdCompletedEventArgs> GetTaskByIdCompleted;
        
        public event System.EventHandler<GetAllCustomersCompletedEventArgs> GetAllCustomersCompleted;
        
        public event System.EventHandler<EntityCompanyRequestCompletedEventArgs> EntityCompanyRequestCompleted;
        
        public event System.EventHandler<EntityProjectRequestCompletedEventArgs> EntityProjectRequestCompleted;
        
        public event System.EventHandler<EntityTaskRequestCompletedEventArgs> EntityTaskRequestCompleted;
        
        public event System.EventHandler<GetTimeEntriesByPeriodAndUserCompletedEventArgs> GetTimeEntriesByPeriodAndUserCompleted;
        
        public event System.EventHandler<GetTimeEntriesByPeriodCompletedEventArgs> GetTimeEntriesByPeriodCompleted;
        
        public event System.EventHandler<GetAllUsersCompletedEventArgs> GetAllUsersCompleted;
        
        public event System.EventHandler<GetUserByUserNameCompletedEventArgs> GetUserByUserNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeactivateUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ActivateUserCompleted;
        
        public event System.EventHandler<SaveTimeEntryCompletedEventArgs> SaveTimeEntryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ExcludeTimeEntryCompleted;
        
        public event System.EventHandler<SaveInvoiceLineCompletedEventArgs> SaveInvoiceLineCompleted;
        
        public event System.EventHandler<SaveInvoiceCompletedEventArgs> SaveInvoiceCompleted;
        
        public event System.EventHandler<SaveTaskCompletedEventArgs> SaveTaskCompleted;
        
        public event System.EventHandler<SaveProjectCompletedEventArgs> SaveProjectCompleted;
        
        public event System.EventHandler<SaveCustomerCompletedEventArgs> SaveCustomerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteInvoiceLineCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteInvoiceDraftCompleted;
        
        public event System.EventHandler<DeleteCustomerCompletedEventArgs> DeleteCustomerCompleted;
        
        public event System.EventHandler<DeleteTaskCompletedEventArgs> DeleteTaskCompleted;
        
        public event System.EventHandler<DeleteProjectCompletedEventArgs> DeleteProjectCompleted;
        
        public event System.EventHandler<DeleteTimeEntryCompletedEventArgs> DeleteTimeEntryCompleted;
        
        public event System.EventHandler<GetGlobalTimeEntryTypesCompletedEventArgs> GetGlobalTimeEntryTypesCompleted;
        
        public event System.EventHandler<GetAllTimeEntryTypesCompletedEventArgs> GetAllTimeEntryTypesCompleted;
        
        public event System.EventHandler<SaveTimeEntryTypeCompletedEventArgs> SaveTimeEntryTypeCompleted;
        
        public event System.EventHandler<SearchTasksCompletedEventArgs> SearchTasksCompleted;
        
        public event System.EventHandler<SearchProjectsCompletedEventArgs> SearchProjectsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginValidateUser(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateUser(userName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndValidateUser(System.IAsyncResult result) {
            return base.Channel.EndValidateUser(result);
        }
        
        private System.IAsyncResult OnBeginValidateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginValidateUser(userName, password, callback, asyncState);
        }
        
        private object[] OnEndValidateUser(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndValidateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateUserCompleted(object state) {
            if ((this.ValidateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateUserAsync(string userName, string password) {
            this.ValidateUserAsync(userName, password, null);
        }
        
        public void ValidateUserAsync(string userName, string password, object userState) {
            if ((this.onBeginValidateUserDelegate == null)) {
                this.onBeginValidateUserDelegate = new BeginOperationDelegate(this.OnBeginValidateUser);
            }
            if ((this.onEndValidateUserDelegate == null)) {
                this.onEndValidateUserDelegate = new EndOperationDelegate(this.OnEndValidateUser);
            }
            if ((this.onValidateUserCompletedDelegate == null)) {
                this.onValidateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateUserCompleted);
            }
            base.InvokeAsync(this.onBeginValidateUserDelegate, new object[] {
                        userName,
                        password}, this.onEndValidateUserDelegate, this.onValidateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetUser(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(userName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.User Trex.ServiceModel.Model.ITrexService.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetUser(userName, password, callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            Trex.ServiceContracts.User retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync(string userName, string password) {
            this.GetUserAsync(userName, password, null);
        }
        
        public void GetUserAsync(string userName, string password, object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, new object[] {
                        userName,
                        password}, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginPingService(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPingService(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndPingService(System.IAsyncResult result) {
            return base.Channel.EndPingService(result);
        }
        
        private System.IAsyncResult OnBeginPingService(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginPingService(callback, asyncState);
        }
        
        private object[] OnEndPingService(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndPingService(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPingServiceCompleted(object state) {
            if ((this.PingServiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PingServiceCompleted(this, new PingServiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PingServiceAsync() {
            this.PingServiceAsync(null);
        }
        
        public void PingServiceAsync(object userState) {
            if ((this.onBeginPingServiceDelegate == null)) {
                this.onBeginPingServiceDelegate = new BeginOperationDelegate(this.OnBeginPingService);
            }
            if ((this.onEndPingServiceDelegate == null)) {
                this.onEndPingServiceDelegate = new EndOperationDelegate(this.OnEndPingService);
            }
            if ((this.onPingServiceCompletedDelegate == null)) {
                this.onPingServiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPingServiceCompleted);
            }
            base.InvokeAsync(this.onBeginPingServiceDelegate, null, this.onEndPingServiceDelegate, this.onPingServiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetUnsyncedCompanies(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUnsyncedCompanies(lastSyncDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Trex.ServiceModel.Model.ITrexService.EndGetUnsyncedCompanies(System.IAsyncResult result) {
            return base.Channel.EndGetUnsyncedCompanies(result);
        }
        
        private System.IAsyncResult OnBeginGetUnsyncedCompanies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime lastSyncDate = ((System.DateTime)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetUnsyncedCompanies(lastSyncDate, callback, asyncState);
        }
        
        private object[] OnEndGetUnsyncedCompanies(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetUnsyncedCompanies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUnsyncedCompaniesCompleted(object state) {
            if ((this.GetUnsyncedCompaniesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUnsyncedCompaniesCompleted(this, new GetUnsyncedCompaniesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUnsyncedCompaniesAsync(System.DateTime lastSyncDate) {
            this.GetUnsyncedCompaniesAsync(lastSyncDate, null);
        }
        
        public void GetUnsyncedCompaniesAsync(System.DateTime lastSyncDate, object userState) {
            if ((this.onBeginGetUnsyncedCompaniesDelegate == null)) {
                this.onBeginGetUnsyncedCompaniesDelegate = new BeginOperationDelegate(this.OnBeginGetUnsyncedCompanies);
            }
            if ((this.onEndGetUnsyncedCompaniesDelegate == null)) {
                this.onEndGetUnsyncedCompaniesDelegate = new EndOperationDelegate(this.OnEndGetUnsyncedCompanies);
            }
            if ((this.onGetUnsyncedCompaniesCompletedDelegate == null)) {
                this.onGetUnsyncedCompaniesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUnsyncedCompaniesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUnsyncedCompaniesDelegate, new object[] {
                        lastSyncDate}, this.onEndGetUnsyncedCompaniesDelegate, this.onGetUnsyncedCompaniesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetUnsyncedProjects(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUnsyncedProjects(lastSyncDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Trex.ServiceModel.Model.ITrexService.EndGetUnsyncedProjects(System.IAsyncResult result) {
            return base.Channel.EndGetUnsyncedProjects(result);
        }
        
        private System.IAsyncResult OnBeginGetUnsyncedProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime lastSyncDate = ((System.DateTime)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetUnsyncedProjects(lastSyncDate, callback, asyncState);
        }
        
        private object[] OnEndGetUnsyncedProjects(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetUnsyncedProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUnsyncedProjectsCompleted(object state) {
            if ((this.GetUnsyncedProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUnsyncedProjectsCompleted(this, new GetUnsyncedProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUnsyncedProjectsAsync(System.DateTime lastSyncDate) {
            this.GetUnsyncedProjectsAsync(lastSyncDate, null);
        }
        
        public void GetUnsyncedProjectsAsync(System.DateTime lastSyncDate, object userState) {
            if ((this.onBeginGetUnsyncedProjectsDelegate == null)) {
                this.onBeginGetUnsyncedProjectsDelegate = new BeginOperationDelegate(this.OnBeginGetUnsyncedProjects);
            }
            if ((this.onEndGetUnsyncedProjectsDelegate == null)) {
                this.onEndGetUnsyncedProjectsDelegate = new EndOperationDelegate(this.OnEndGetUnsyncedProjects);
            }
            if ((this.onGetUnsyncedProjectsCompletedDelegate == null)) {
                this.onGetUnsyncedProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUnsyncedProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginGetUnsyncedProjectsDelegate, new object[] {
                        lastSyncDate}, this.onEndGetUnsyncedProjectsDelegate, this.onGetUnsyncedProjectsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetUnsyncedTasks(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUnsyncedTasks(lastSyncDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Trex.ServiceModel.Model.ITrexService.EndGetUnsyncedTasks(System.IAsyncResult result) {
            return base.Channel.EndGetUnsyncedTasks(result);
        }
        
        private System.IAsyncResult OnBeginGetUnsyncedTasks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime lastSyncDate = ((System.DateTime)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetUnsyncedTasks(lastSyncDate, callback, asyncState);
        }
        
        private object[] OnEndGetUnsyncedTasks(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetUnsyncedTasks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUnsyncedTasksCompleted(object state) {
            if ((this.GetUnsyncedTasksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUnsyncedTasksCompleted(this, new GetUnsyncedTasksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUnsyncedTasksAsync(System.DateTime lastSyncDate) {
            this.GetUnsyncedTasksAsync(lastSyncDate, null);
        }
        
        public void GetUnsyncedTasksAsync(System.DateTime lastSyncDate, object userState) {
            if ((this.onBeginGetUnsyncedTasksDelegate == null)) {
                this.onBeginGetUnsyncedTasksDelegate = new BeginOperationDelegate(this.OnBeginGetUnsyncedTasks);
            }
            if ((this.onEndGetUnsyncedTasksDelegate == null)) {
                this.onEndGetUnsyncedTasksDelegate = new EndOperationDelegate(this.OnEndGetUnsyncedTasks);
            }
            if ((this.onGetUnsyncedTasksCompletedDelegate == null)) {
                this.onGetUnsyncedTasksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUnsyncedTasksCompleted);
            }
            base.InvokeAsync(this.onBeginGetUnsyncedTasksDelegate, new object[] {
                        lastSyncDate}, this.onEndGetUnsyncedTasksDelegate, this.onGetUnsyncedTasksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginUploadNewTasks(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> tasks, Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadNewTasks(tasks, user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Trex.ServiceModel.Model.ITrexService.EndUploadNewTasks(System.IAsyncResult result) {
            return base.Channel.EndUploadNewTasks(result);
        }
        
        private System.IAsyncResult OnBeginUploadNewTasks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> tasks = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(inValues[0]));
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginUploadNewTasks(tasks, user, callback, asyncState);
        }
        
        private object[] OnEndUploadNewTasks(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndUploadNewTasks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUploadNewTasksCompleted(object state) {
            if ((this.UploadNewTasksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadNewTasksCompleted(this, new UploadNewTasksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadNewTasksAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> tasks, Trex.ServiceContracts.User user) {
            this.UploadNewTasksAsync(tasks, user, null);
        }
        
        public void UploadNewTasksAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> tasks, Trex.ServiceContracts.User user, object userState) {
            if ((this.onBeginUploadNewTasksDelegate == null)) {
                this.onBeginUploadNewTasksDelegate = new BeginOperationDelegate(this.OnBeginUploadNewTasks);
            }
            if ((this.onEndUploadNewTasksDelegate == null)) {
                this.onEndUploadNewTasksDelegate = new EndOperationDelegate(this.OnEndUploadNewTasks);
            }
            if ((this.onUploadNewTasksCompletedDelegate == null)) {
                this.onUploadNewTasksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadNewTasksCompleted);
            }
            base.InvokeAsync(this.onBeginUploadNewTasksDelegate, new object[] {
                        tasks,
                        user}, this.onEndUploadNewTasksDelegate, this.onUploadNewTasksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginUploadNewTimeEntries(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> timeEntries, Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUploadNewTimeEntries(timeEntries, user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndUploadNewTimeEntries(System.IAsyncResult result) {
            base.Channel.EndUploadNewTimeEntries(result);
        }
        
        private System.IAsyncResult OnBeginUploadNewTimeEntries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> timeEntries = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry>)(inValues[0]));
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginUploadNewTimeEntries(timeEntries, user, callback, asyncState);
        }
        
        private object[] OnEndUploadNewTimeEntries(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndUploadNewTimeEntries(result);
            return null;
        }
        
        private void OnUploadNewTimeEntriesCompleted(object state) {
            if ((this.UploadNewTimeEntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UploadNewTimeEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UploadNewTimeEntriesAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> timeEntries, Trex.ServiceContracts.User user) {
            this.UploadNewTimeEntriesAsync(timeEntries, user, null);
        }
        
        public void UploadNewTimeEntriesAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> timeEntries, Trex.ServiceContracts.User user, object userState) {
            if ((this.onBeginUploadNewTimeEntriesDelegate == null)) {
                this.onBeginUploadNewTimeEntriesDelegate = new BeginOperationDelegate(this.OnBeginUploadNewTimeEntries);
            }
            if ((this.onEndUploadNewTimeEntriesDelegate == null)) {
                this.onEndUploadNewTimeEntriesDelegate = new EndOperationDelegate(this.OnEndUploadNewTimeEntries);
            }
            if ((this.onUploadNewTimeEntriesCompletedDelegate == null)) {
                this.onUploadNewTimeEntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUploadNewTimeEntriesCompleted);
            }
            base.InvokeAsync(this.onBeginUploadNewTimeEntriesDelegate, new object[] {
                        timeEntries,
                        user}, this.onEndUploadNewTimeEntriesDelegate, this.onUploadNewTimeEntriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginChangePassword(string userName, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePassword(userName, oldPassword, newPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndChangePassword(System.IAsyncResult result) {
            return base.Channel.EndChangePassword(result);
        }
        
        private System.IAsyncResult OnBeginChangePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string oldPassword = ((string)(inValues[1]));
            string newPassword = ((string)(inValues[2]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginChangePassword(userName, oldPassword, newPassword, callback, asyncState);
        }
        
        private object[] OnEndChangePassword(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndChangePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangePasswordCompleted(object state) {
            if ((this.ChangePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePasswordAsync(string userName, string oldPassword, string newPassword) {
            this.ChangePasswordAsync(userName, oldPassword, newPassword, null);
        }
        
        public void ChangePasswordAsync(string userName, string oldPassword, string newPassword, object userState) {
            if ((this.onBeginChangePasswordDelegate == null)) {
                this.onBeginChangePasswordDelegate = new BeginOperationDelegate(this.OnBeginChangePassword);
            }
            if ((this.onEndChangePasswordDelegate == null)) {
                this.onEndChangePasswordDelegate = new EndOperationDelegate(this.OnEndChangePassword);
            }
            if ((this.onChangePasswordCompletedDelegate == null)) {
                this.onChangePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangePasswordDelegate, new object[] {
                        userName,
                        oldPassword,
                        newPassword}, this.onEndChangePasswordDelegate, this.onChangePasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetRoles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role> Trex.ServiceModel.Model.ITrexService.EndGetRoles(System.IAsyncResult result) {
            return base.Channel.EndGetRoles(result);
        }
        
        private System.IAsyncResult OnBeginGetRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetRoles(callback, asyncState);
        }
        
        private object[] OnEndGetRoles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRolesCompleted(object state) {
            if ((this.GetRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRolesCompleted(this, new GetRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRolesAsync() {
            this.GetRolesAsync(null);
        }
        
        public void GetRolesAsync(object userState) {
            if ((this.onBeginGetRolesDelegate == null)) {
                this.onBeginGetRolesDelegate = new BeginOperationDelegate(this.OnBeginGetRoles);
            }
            if ((this.onEndGetRolesDelegate == null)) {
                this.onEndGetRolesDelegate = new EndOperationDelegate(this.OnEndGetRoles);
            }
            if ((this.onGetRolesCompletedDelegate == null)) {
                this.onGetRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRolesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRolesDelegate, null, this.onEndGetRolesDelegate, this.onGetRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginUpdateUserRoles(string userName, System.Collections.ObjectModel.ObservableCollection<string> roles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUserRoles(userName, roles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndUpdateUserRoles(System.IAsyncResult result) {
            base.Channel.EndUpdateUserRoles(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUserRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> roles = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginUpdateUserRoles(userName, roles, callback, asyncState);
        }
        
        private object[] OnEndUpdateUserRoles(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndUpdateUserRoles(result);
            return null;
        }
        
        private void OnUpdateUserRolesCompleted(object state) {
            if ((this.UpdateUserRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUserRolesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUserRolesAsync(string userName, System.Collections.ObjectModel.ObservableCollection<string> roles) {
            this.UpdateUserRolesAsync(userName, roles, null);
        }
        
        public void UpdateUserRolesAsync(string userName, System.Collections.ObjectModel.ObservableCollection<string> roles, object userState) {
            if ((this.onBeginUpdateUserRolesDelegate == null)) {
                this.onBeginUpdateUserRolesDelegate = new BeginOperationDelegate(this.OnBeginUpdateUserRoles);
            }
            if ((this.onEndUpdateUserRolesDelegate == null)) {
                this.onEndUpdateUserRolesDelegate = new EndOperationDelegate(this.OnEndUpdateUserRoles);
            }
            if ((this.onUpdateUserRolesCompletedDelegate == null)) {
                this.onUpdateUserRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUserRolesCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUserRolesDelegate, new object[] {
                        userName,
                        roles}, this.onEndUpdateUserRolesDelegate, this.onUpdateUserRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginCreateRole(string roleName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateRole(roleName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndCreateRole(System.IAsyncResult result) {
            base.Channel.EndCreateRole(result);
        }
        
        private System.IAsyncResult OnBeginCreateRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleName = ((string)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginCreateRole(roleName, callback, asyncState);
        }
        
        private object[] OnEndCreateRole(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndCreateRole(result);
            return null;
        }
        
        private void OnCreateRoleCompleted(object state) {
            if ((this.CreateRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateRoleAsync(string roleName) {
            this.CreateRoleAsync(roleName, null);
        }
        
        public void CreateRoleAsync(string roleName, object userState) {
            if ((this.onBeginCreateRoleDelegate == null)) {
                this.onBeginCreateRoleDelegate = new BeginOperationDelegate(this.OnBeginCreateRole);
            }
            if ((this.onEndCreateRoleDelegate == null)) {
                this.onEndCreateRoleDelegate = new EndOperationDelegate(this.OnEndCreateRole);
            }
            if ((this.onCreateRoleCompletedDelegate == null)) {
                this.onCreateRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateRoleCompleted);
            }
            base.InvokeAsync(this.onBeginCreateRoleDelegate, new object[] {
                        roleName}, this.onEndCreateRoleDelegate, this.onCreateRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteRole(string roleName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRole(roleName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndDeleteRole(System.IAsyncResult result) {
            base.Channel.EndDeleteRole(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleName = ((string)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteRole(roleName, callback, asyncState);
        }
        
        private object[] OnEndDeleteRole(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteRole(result);
            return null;
        }
        
        private void OnDeleteRoleCompleted(object state) {
            if ((this.DeleteRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRoleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRoleAsync(string roleName) {
            this.DeleteRoleAsync(roleName, null);
        }
        
        public void DeleteRoleAsync(string roleName, object userState) {
            if ((this.onBeginDeleteRoleDelegate == null)) {
                this.onBeginDeleteRoleDelegate = new BeginOperationDelegate(this.OnBeginDeleteRole);
            }
            if ((this.onEndDeleteRoleDelegate == null)) {
                this.onEndDeleteRoleDelegate = new EndOperationDelegate(this.OnEndDeleteRole);
            }
            if ((this.onDeleteRoleCompletedDelegate == null)) {
                this.onDeleteRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRoleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRoleDelegate, new object[] {
                        roleName}, this.onEndDeleteRoleDelegate, this.onDeleteRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginExistsRole(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExistsRole(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndExistsRole(System.IAsyncResult result) {
            return base.Channel.EndExistsRole(result);
        }
        
        private System.IAsyncResult OnBeginExistsRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginExistsRole(name, callback, asyncState);
        }
        
        private object[] OnEndExistsRole(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndExistsRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExistsRoleCompleted(object state) {
            if ((this.ExistsRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExistsRoleCompleted(this, new ExistsRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExistsRoleAsync(string name) {
            this.ExistsRoleAsync(name, null);
        }
        
        public void ExistsRoleAsync(string name, object userState) {
            if ((this.onBeginExistsRoleDelegate == null)) {
                this.onBeginExistsRoleDelegate = new BeginOperationDelegate(this.OnBeginExistsRole);
            }
            if ((this.onEndExistsRoleDelegate == null)) {
                this.onEndExistsRoleDelegate = new EndOperationDelegate(this.OnEndExistsRole);
            }
            if ((this.onExistsRoleCompletedDelegate == null)) {
                this.onExistsRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExistsRoleCompleted);
            }
            base.InvokeAsync(this.onBeginExistsRoleDelegate, new object[] {
                        name}, this.onEndExistsRoleDelegate, this.onExistsRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetPermissionsForSingleRole(string roleName, int applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPermissionsForSingleRole(roleName, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> Trex.ServiceModel.Model.ITrexService.EndGetPermissionsForSingleRole(System.IAsyncResult result) {
            return base.Channel.EndGetPermissionsForSingleRole(result);
        }
        
        private System.IAsyncResult OnBeginGetPermissionsForSingleRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleName = ((string)(inValues[0]));
            int applicationId = ((int)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetPermissionsForSingleRole(roleName, applicationId, callback, asyncState);
        }
        
        private object[] OnEndGetPermissionsForSingleRole(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetPermissionsForSingleRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPermissionsForSingleRoleCompleted(object state) {
            if ((this.GetPermissionsForSingleRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPermissionsForSingleRoleCompleted(this, new GetPermissionsForSingleRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPermissionsForSingleRoleAsync(string roleName, int applicationId) {
            this.GetPermissionsForSingleRoleAsync(roleName, applicationId, null);
        }
        
        public void GetPermissionsForSingleRoleAsync(string roleName, int applicationId, object userState) {
            if ((this.onBeginGetPermissionsForSingleRoleDelegate == null)) {
                this.onBeginGetPermissionsForSingleRoleDelegate = new BeginOperationDelegate(this.OnBeginGetPermissionsForSingleRole);
            }
            if ((this.onEndGetPermissionsForSingleRoleDelegate == null)) {
                this.onEndGetPermissionsForSingleRoleDelegate = new EndOperationDelegate(this.OnEndGetPermissionsForSingleRole);
            }
            if ((this.onGetPermissionsForSingleRoleCompletedDelegate == null)) {
                this.onGetPermissionsForSingleRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPermissionsForSingleRoleCompleted);
            }
            base.InvokeAsync(this.onBeginGetPermissionsForSingleRoleDelegate, new object[] {
                        roleName,
                        applicationId}, this.onEndGetPermissionsForSingleRoleDelegate, this.onGetPermissionsForSingleRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginUpdatePermissions(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> updatedPermissions, Trex.ServiceContracts.Role role, int applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePermissions(updatedPermissions, role, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndUpdatePermissions(System.IAsyncResult result) {
            base.Channel.EndUpdatePermissions(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePermissions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> updatedPermissions = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission>)(inValues[0]));
            Trex.ServiceContracts.Role role = ((Trex.ServiceContracts.Role)(inValues[1]));
            int applicationId = ((int)(inValues[2]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginUpdatePermissions(updatedPermissions, role, applicationId, callback, asyncState);
        }
        
        private object[] OnEndUpdatePermissions(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndUpdatePermissions(result);
            return null;
        }
        
        private void OnUpdatePermissionsCompleted(object state) {
            if ((this.UpdatePermissionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePermissionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePermissionsAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> updatedPermissions, Trex.ServiceContracts.Role role, int applicationId) {
            this.UpdatePermissionsAsync(updatedPermissions, role, applicationId, null);
        }
        
        public void UpdatePermissionsAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> updatedPermissions, Trex.ServiceContracts.Role role, int applicationId, object userState) {
            if ((this.onBeginUpdatePermissionsDelegate == null)) {
                this.onBeginUpdatePermissionsDelegate = new BeginOperationDelegate(this.OnBeginUpdatePermissions);
            }
            if ((this.onEndUpdatePermissionsDelegate == null)) {
                this.onEndUpdatePermissionsDelegate = new EndOperationDelegate(this.OnEndUpdatePermissions);
            }
            if ((this.onUpdatePermissionsCompletedDelegate == null)) {
                this.onUpdatePermissionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePermissionsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePermissionsDelegate, new object[] {
                        updatedPermissions,
                        role,
                        applicationId}, this.onEndUpdatePermissionsDelegate, this.onUpdatePermissionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetInvoiceById(int invoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvoiceById(invoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Invoice Trex.ServiceModel.Model.ITrexService.EndGetInvoiceById(System.IAsyncResult result) {
            return base.Channel.EndGetInvoiceById(result);
        }
        
        private System.IAsyncResult OnBeginGetInvoiceById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetInvoiceById(invoiceId, callback, asyncState);
        }
        
        private object[] OnEndGetInvoiceById(System.IAsyncResult result) {
            Trex.ServiceContracts.Invoice retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetInvoiceById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvoiceByIdCompleted(object state) {
            if ((this.GetInvoiceByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvoiceByIdCompleted(this, new GetInvoiceByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvoiceByIdAsync(int invoiceId) {
            this.GetInvoiceByIdAsync(invoiceId, null);
        }
        
        public void GetInvoiceByIdAsync(int invoiceId, object userState) {
            if ((this.onBeginGetInvoiceByIdDelegate == null)) {
                this.onBeginGetInvoiceByIdDelegate = new BeginOperationDelegate(this.OnBeginGetInvoiceById);
            }
            if ((this.onEndGetInvoiceByIdDelegate == null)) {
                this.onEndGetInvoiceByIdDelegate = new EndOperationDelegate(this.OnEndGetInvoiceById);
            }
            if ((this.onGetInvoiceByIdCompletedDelegate == null)) {
                this.onGetInvoiceByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvoiceByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvoiceByIdDelegate, new object[] {
                        invoiceId}, this.onEndGetInvoiceByIdDelegate, this.onGetInvoiceByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginValidateUserWithCustomerId(string userName, string password, string customerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateUserWithCustomerId(userName, password, customerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndValidateUserWithCustomerId(System.IAsyncResult result) {
            return base.Channel.EndValidateUserWithCustomerId(result);
        }
        
        private System.IAsyncResult OnBeginValidateUserWithCustomerId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string customerId = ((string)(inValues[2]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginValidateUserWithCustomerId(userName, password, customerId, callback, asyncState);
        }
        
        private object[] OnEndValidateUserWithCustomerId(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndValidateUserWithCustomerId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateUserWithCustomerIdCompleted(object state) {
            if ((this.ValidateUserWithCustomerIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateUserWithCustomerIdCompleted(this, new ValidateUserWithCustomerIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateUserWithCustomerIdAsync(string userName, string password, string customerId) {
            this.ValidateUserWithCustomerIdAsync(userName, password, customerId, null);
        }
        
        public void ValidateUserWithCustomerIdAsync(string userName, string password, string customerId, object userState) {
            if ((this.onBeginValidateUserWithCustomerIdDelegate == null)) {
                this.onBeginValidateUserWithCustomerIdDelegate = new BeginOperationDelegate(this.OnBeginValidateUserWithCustomerId);
            }
            if ((this.onEndValidateUserWithCustomerIdDelegate == null)) {
                this.onEndValidateUserWithCustomerIdDelegate = new EndOperationDelegate(this.OnEndValidateUserWithCustomerId);
            }
            if ((this.onValidateUserWithCustomerIdCompletedDelegate == null)) {
                this.onValidateUserWithCustomerIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateUserWithCustomerIdCompleted);
            }
            base.InvokeAsync(this.onBeginValidateUserWithCustomerIdDelegate, new object[] {
                        userName,
                        password,
                        customerId}, this.onEndValidateUserWithCustomerIdDelegate, this.onValidateUserWithCustomerIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginCreateUser(Trex.ServiceContracts.User user, bool sendEmail, string language, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUser(user, sendEmail, language, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.UserCreationResponse Trex.ServiceModel.Model.ITrexService.EndCreateUser(System.IAsyncResult result) {
            return base.Channel.EndCreateUser(result);
        }
        
        private System.IAsyncResult OnBeginCreateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            bool sendEmail = ((bool)(inValues[1]));
            string language = ((string)(inValues[2]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginCreateUser(user, sendEmail, language, callback, asyncState);
        }
        
        private object[] OnEndCreateUser(System.IAsyncResult result) {
            Trex.ServiceContracts.UserCreationResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndCreateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateUserCompleted(object state) {
            if ((this.CreateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUserAsync(Trex.ServiceContracts.User user, bool sendEmail, string language) {
            this.CreateUserAsync(user, sendEmail, language, null);
        }
        
        public void CreateUserAsync(Trex.ServiceContracts.User user, bool sendEmail, string language, object userState) {
            if ((this.onBeginCreateUserDelegate == null)) {
                this.onBeginCreateUserDelegate = new BeginOperationDelegate(this.OnBeginCreateUser);
            }
            if ((this.onEndCreateUserDelegate == null)) {
                this.onEndCreateUserDelegate = new EndOperationDelegate(this.OnEndCreateUser);
            }
            if ((this.onCreateUserCompletedDelegate == null)) {
                this.onCreateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUserCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUserDelegate, new object[] {
                        user,
                        sendEmail,
                        language}, this.onEndCreateUserDelegate, this.onCreateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginResetPassword(Trex.ServiceContracts.User user, string language, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetPassword(user, language, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndResetPassword(System.IAsyncResult result) {
            return base.Channel.EndResetPassword(result);
        }
        
        private System.IAsyncResult OnBeginResetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            string language = ((string)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginResetPassword(user, language, callback, asyncState);
        }
        
        private object[] OnEndResetPassword(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndResetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetPasswordCompleted(object state) {
            if ((this.ResetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetPasswordAsync(Trex.ServiceContracts.User user, string language) {
            this.ResetPasswordAsync(user, language, null);
        }
        
        public void ResetPasswordAsync(Trex.ServiceContracts.User user, string language, object userState) {
            if ((this.onBeginResetPasswordDelegate == null)) {
                this.onBeginResetPasswordDelegate = new BeginOperationDelegate(this.OnBeginResetPassword);
            }
            if ((this.onEndResetPasswordDelegate == null)) {
                this.onEndResetPasswordDelegate = new EndOperationDelegate(this.OnEndResetPassword);
            }
            if ((this.onResetPasswordCompletedDelegate == null)) {
                this.onResetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginResetPasswordDelegate, new object[] {
                        user,
                        language}, this.onEndResetPasswordDelegate, this.onResetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetAllInvoiceTemplates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllInvoiceTemplates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> Trex.ServiceModel.Model.ITrexService.EndGetAllInvoiceTemplates(System.IAsyncResult result) {
            return base.Channel.EndGetAllInvoiceTemplates(result);
        }
        
        private System.IAsyncResult OnBeginGetAllInvoiceTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetAllInvoiceTemplates(callback, asyncState);
        }
        
        private object[] OnEndGetAllInvoiceTemplates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetAllInvoiceTemplates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllInvoiceTemplatesCompleted(object state) {
            if ((this.GetAllInvoiceTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllInvoiceTemplatesCompleted(this, new GetAllInvoiceTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllInvoiceTemplatesAsync() {
            this.GetAllInvoiceTemplatesAsync(null);
        }
        
        public void GetAllInvoiceTemplatesAsync(object userState) {
            if ((this.onBeginGetAllInvoiceTemplatesDelegate == null)) {
                this.onBeginGetAllInvoiceTemplatesDelegate = new BeginOperationDelegate(this.OnBeginGetAllInvoiceTemplates);
            }
            if ((this.onEndGetAllInvoiceTemplatesDelegate == null)) {
                this.onEndGetAllInvoiceTemplatesDelegate = new EndOperationDelegate(this.OnEndGetAllInvoiceTemplates);
            }
            if ((this.onGetAllInvoiceTemplatesCompletedDelegate == null)) {
                this.onGetAllInvoiceTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllInvoiceTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllInvoiceTemplatesDelegate, null, this.onEndGetAllInvoiceTemplatesDelegate, this.onGetAllInvoiceTemplatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveInvoiceTemplate(Trex.ServiceContracts.InvoiceTemplate template, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveInvoiceTemplate(template, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndSaveInvoiceTemplate(System.IAsyncResult result) {
            base.Channel.EndSaveInvoiceTemplate(result);
        }
        
        private System.IAsyncResult OnBeginSaveInvoiceTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.InvoiceTemplate template = ((Trex.ServiceContracts.InvoiceTemplate)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveInvoiceTemplate(template, callback, asyncState);
        }
        
        private object[] OnEndSaveInvoiceTemplate(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveInvoiceTemplate(result);
            return null;
        }
        
        private void OnSaveInvoiceTemplateCompleted(object state) {
            if ((this.SaveInvoiceTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveInvoiceTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveInvoiceTemplateAsync(Trex.ServiceContracts.InvoiceTemplate template) {
            this.SaveInvoiceTemplateAsync(template, null);
        }
        
        public void SaveInvoiceTemplateAsync(Trex.ServiceContracts.InvoiceTemplate template, object userState) {
            if ((this.onBeginSaveInvoiceTemplateDelegate == null)) {
                this.onBeginSaveInvoiceTemplateDelegate = new BeginOperationDelegate(this.OnBeginSaveInvoiceTemplate);
            }
            if ((this.onEndSaveInvoiceTemplateDelegate == null)) {
                this.onEndSaveInvoiceTemplateDelegate = new EndOperationDelegate(this.OnEndSaveInvoiceTemplate);
            }
            if ((this.onSaveInvoiceTemplateCompletedDelegate == null)) {
                this.onSaveInvoiceTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveInvoiceTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginSaveInvoiceTemplateDelegate, new object[] {
                        template}, this.onEndSaveInvoiceTemplateDelegate, this.onSaveInvoiceTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetAllPermissionsByClientId(int clientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPermissionsByClientId(clientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> Trex.ServiceModel.Model.ITrexService.EndGetAllPermissionsByClientId(System.IAsyncResult result) {
            return base.Channel.EndGetAllPermissionsByClientId(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPermissionsByClientId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int clientId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetAllPermissionsByClientId(clientId, callback, asyncState);
        }
        
        private object[] OnEndGetAllPermissionsByClientId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetAllPermissionsByClientId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPermissionsByClientIdCompleted(object state) {
            if ((this.GetAllPermissionsByClientIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPermissionsByClientIdCompleted(this, new GetAllPermissionsByClientIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPermissionsByClientIdAsync(int clientId) {
            this.GetAllPermissionsByClientIdAsync(clientId, null);
        }
        
        public void GetAllPermissionsByClientIdAsync(int clientId, object userState) {
            if ((this.onBeginGetAllPermissionsByClientIdDelegate == null)) {
                this.onBeginGetAllPermissionsByClientIdDelegate = new BeginOperationDelegate(this.OnBeginGetAllPermissionsByClientId);
            }
            if ((this.onEndGetAllPermissionsByClientIdDelegate == null)) {
                this.onEndGetAllPermissionsByClientIdDelegate = new EndOperationDelegate(this.OnEndGetAllPermissionsByClientId);
            }
            if ((this.onGetAllPermissionsByClientIdCompletedDelegate == null)) {
                this.onGetAllPermissionsByClientIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPermissionsByClientIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPermissionsByClientIdDelegate, new object[] {
                        clientId}, this.onEndGetAllPermissionsByClientIdDelegate, this.onGetAllPermissionsByClientIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetLatestWorkedOnCustomersByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestWorkedOnCustomersByUser(user, fromDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Trex.ServiceModel.Model.ITrexService.EndGetLatestWorkedOnCustomersByUser(System.IAsyncResult result) {
            return base.Channel.EndGetLatestWorkedOnCustomersByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestWorkedOnCustomersByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            System.DateTime fromDate = ((System.DateTime)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetLatestWorkedOnCustomersByUser(user, fromDate, callback, asyncState);
        }
        
        private object[] OnEndGetLatestWorkedOnCustomersByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetLatestWorkedOnCustomersByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestWorkedOnCustomersByUserCompleted(object state) {
            if ((this.GetLatestWorkedOnCustomersByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestWorkedOnCustomersByUserCompleted(this, new GetLatestWorkedOnCustomersByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestWorkedOnCustomersByUserAsync(Trex.ServiceContracts.User user, System.DateTime fromDate) {
            this.GetLatestWorkedOnCustomersByUserAsync(user, fromDate, null);
        }
        
        public void GetLatestWorkedOnCustomersByUserAsync(Trex.ServiceContracts.User user, System.DateTime fromDate, object userState) {
            if ((this.onBeginGetLatestWorkedOnCustomersByUserDelegate == null)) {
                this.onBeginGetLatestWorkedOnCustomersByUserDelegate = new BeginOperationDelegate(this.OnBeginGetLatestWorkedOnCustomersByUser);
            }
            if ((this.onEndGetLatestWorkedOnCustomersByUserDelegate == null)) {
                this.onEndGetLatestWorkedOnCustomersByUserDelegate = new EndOperationDelegate(this.OnEndGetLatestWorkedOnCustomersByUser);
            }
            if ((this.onGetLatestWorkedOnCustomersByUserCompletedDelegate == null)) {
                this.onGetLatestWorkedOnCustomersByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestWorkedOnCustomersByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestWorkedOnCustomersByUserDelegate, new object[] {
                        user,
                        fromDate}, this.onEndGetLatestWorkedOnCustomersByUserDelegate, this.onGetLatestWorkedOnCustomersByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetLatestWorkedOnProjectsByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestWorkedOnProjectsByUser(user, fromDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Trex.ServiceModel.Model.ITrexService.EndGetLatestWorkedOnProjectsByUser(System.IAsyncResult result) {
            return base.Channel.EndGetLatestWorkedOnProjectsByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestWorkedOnProjectsByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            System.DateTime fromDate = ((System.DateTime)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetLatestWorkedOnProjectsByUser(user, fromDate, callback, asyncState);
        }
        
        private object[] OnEndGetLatestWorkedOnProjectsByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetLatestWorkedOnProjectsByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestWorkedOnProjectsByUserCompleted(object state) {
            if ((this.GetLatestWorkedOnProjectsByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestWorkedOnProjectsByUserCompleted(this, new GetLatestWorkedOnProjectsByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestWorkedOnProjectsByUserAsync(Trex.ServiceContracts.User user, System.DateTime fromDate) {
            this.GetLatestWorkedOnProjectsByUserAsync(user, fromDate, null);
        }
        
        public void GetLatestWorkedOnProjectsByUserAsync(Trex.ServiceContracts.User user, System.DateTime fromDate, object userState) {
            if ((this.onBeginGetLatestWorkedOnProjectsByUserDelegate == null)) {
                this.onBeginGetLatestWorkedOnProjectsByUserDelegate = new BeginOperationDelegate(this.OnBeginGetLatestWorkedOnProjectsByUser);
            }
            if ((this.onEndGetLatestWorkedOnProjectsByUserDelegate == null)) {
                this.onEndGetLatestWorkedOnProjectsByUserDelegate = new EndOperationDelegate(this.OnEndGetLatestWorkedOnProjectsByUser);
            }
            if ((this.onGetLatestWorkedOnProjectsByUserCompletedDelegate == null)) {
                this.onGetLatestWorkedOnProjectsByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestWorkedOnProjectsByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestWorkedOnProjectsByUserDelegate, new object[] {
                        user,
                        fromDate}, this.onEndGetLatestWorkedOnProjectsByUserDelegate, this.onGetLatestWorkedOnProjectsByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetLatestWorkedOnTasksByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestWorkedOnTasksByUser(user, fromDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Trex.ServiceModel.Model.ITrexService.EndGetLatestWorkedOnTasksByUser(System.IAsyncResult result) {
            return base.Channel.EndGetLatestWorkedOnTasksByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestWorkedOnTasksByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            System.DateTime fromDate = ((System.DateTime)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetLatestWorkedOnTasksByUser(user, fromDate, callback, asyncState);
        }
        
        private object[] OnEndGetLatestWorkedOnTasksByUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetLatestWorkedOnTasksByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestWorkedOnTasksByUserCompleted(object state) {
            if ((this.GetLatestWorkedOnTasksByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestWorkedOnTasksByUserCompleted(this, new GetLatestWorkedOnTasksByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestWorkedOnTasksByUserAsync(Trex.ServiceContracts.User user, System.DateTime fromDate) {
            this.GetLatestWorkedOnTasksByUserAsync(user, fromDate, null);
        }
        
        public void GetLatestWorkedOnTasksByUserAsync(Trex.ServiceContracts.User user, System.DateTime fromDate, object userState) {
            if ((this.onBeginGetLatestWorkedOnTasksByUserDelegate == null)) {
                this.onBeginGetLatestWorkedOnTasksByUserDelegate = new BeginOperationDelegate(this.OnBeginGetLatestWorkedOnTasksByUser);
            }
            if ((this.onEndGetLatestWorkedOnTasksByUserDelegate == null)) {
                this.onEndGetLatestWorkedOnTasksByUserDelegate = new EndOperationDelegate(this.OnEndGetLatestWorkedOnTasksByUser);
            }
            if ((this.onGetLatestWorkedOnTasksByUserCompletedDelegate == null)) {
                this.onGetLatestWorkedOnTasksByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestWorkedOnTasksByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestWorkedOnTasksByUserDelegate, new object[] {
                        user,
                        fromDate}, this.onEndGetLatestWorkedOnTasksByUserDelegate, this.onGetLatestWorkedOnTasksByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGenerateInvoicesFromCustomerID(System.DateTime startDate, System.DateTime endDate, int customerId, int userId, float VAT, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateInvoicesFromCustomerID(startDate, endDate, customerId, userId, VAT, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndGenerateInvoicesFromCustomerID(System.IAsyncResult result) {
            return base.Channel.EndGenerateInvoicesFromCustomerID(result);
        }
        
        private System.IAsyncResult OnBeginGenerateInvoicesFromCustomerID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            int customerId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            float VAT = ((float)(inValues[4]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGenerateInvoicesFromCustomerID(startDate, endDate, customerId, userId, VAT, callback, asyncState);
        }
        
        private object[] OnEndGenerateInvoicesFromCustomerID(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGenerateInvoicesFromCustomerID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateInvoicesFromCustomerIDCompleted(object state) {
            if ((this.GenerateInvoicesFromCustomerIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateInvoicesFromCustomerIDCompleted(this, new GenerateInvoicesFromCustomerIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateInvoicesFromCustomerIDAsync(System.DateTime startDate, System.DateTime endDate, int customerId, int userId, float VAT) {
            this.GenerateInvoicesFromCustomerIDAsync(startDate, endDate, customerId, userId, VAT, null);
        }
        
        public void GenerateInvoicesFromCustomerIDAsync(System.DateTime startDate, System.DateTime endDate, int customerId, int userId, float VAT, object userState) {
            if ((this.onBeginGenerateInvoicesFromCustomerIDDelegate == null)) {
                this.onBeginGenerateInvoicesFromCustomerIDDelegate = new BeginOperationDelegate(this.OnBeginGenerateInvoicesFromCustomerID);
            }
            if ((this.onEndGenerateInvoicesFromCustomerIDDelegate == null)) {
                this.onEndGenerateInvoicesFromCustomerIDDelegate = new EndOperationDelegate(this.OnEndGenerateInvoicesFromCustomerID);
            }
            if ((this.onGenerateInvoicesFromCustomerIDCompletedDelegate == null)) {
                this.onGenerateInvoicesFromCustomerIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateInvoicesFromCustomerIDCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateInvoicesFromCustomerIDDelegate, new object[] {
                        startDate,
                        endDate,
                        customerId,
                        userId,
                        VAT}, this.onEndGenerateInvoicesFromCustomerIDDelegate, this.onGenerateInvoicesFromCustomerIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGenerateCreditnote(int invoiceId, int currentUserId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateCreditnote(invoiceId, currentUserId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndGenerateCreditnote(System.IAsyncResult result) {
            return base.Channel.EndGenerateCreditnote(result);
        }
        
        private System.IAsyncResult OnBeginGenerateCreditnote(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            int currentUserId = ((int)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGenerateCreditnote(invoiceId, currentUserId, callback, asyncState);
        }
        
        private object[] OnEndGenerateCreditnote(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGenerateCreditnote(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateCreditnoteCompleted(object state) {
            if ((this.GenerateCreditnoteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateCreditnoteCompleted(this, new GenerateCreditnoteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateCreditnoteAsync(int invoiceId, int currentUserId) {
            this.GenerateCreditnoteAsync(invoiceId, currentUserId, null);
        }
        
        public void GenerateCreditnoteAsync(int invoiceId, int currentUserId, object userState) {
            if ((this.onBeginGenerateCreditnoteDelegate == null)) {
                this.onBeginGenerateCreditnoteDelegate = new BeginOperationDelegate(this.OnBeginGenerateCreditnote);
            }
            if ((this.onEndGenerateCreditnoteDelegate == null)) {
                this.onEndGenerateCreditnoteDelegate = new EndOperationDelegate(this.OnEndGenerateCreditnote);
            }
            if ((this.onGenerateCreditnoteCompletedDelegate == null)) {
                this.onGenerateCreditnoteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateCreditnoteCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateCreditnoteDelegate, new object[] {
                        invoiceId,
                        currentUserId}, this.onEndGenerateCreditnoteDelegate, this.onGenerateCreditnoteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginUpdateTimeEntryPrice(int projectId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateTimeEntryPrice(projectId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndUpdateTimeEntryPrice(System.IAsyncResult result) {
            return base.Channel.EndUpdateTimeEntryPrice(result);
        }
        
        private System.IAsyncResult OnBeginUpdateTimeEntryPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int projectId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginUpdateTimeEntryPrice(projectId, callback, asyncState);
        }
        
        private object[] OnEndUpdateTimeEntryPrice(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndUpdateTimeEntryPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateTimeEntryPriceCompleted(object state) {
            if ((this.UpdateTimeEntryPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateTimeEntryPriceCompleted(this, new UpdateTimeEntryPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateTimeEntryPriceAsync(int projectId) {
            this.UpdateTimeEntryPriceAsync(projectId, null);
        }
        
        public void UpdateTimeEntryPriceAsync(int projectId, object userState) {
            if ((this.onBeginUpdateTimeEntryPriceDelegate == null)) {
                this.onBeginUpdateTimeEntryPriceDelegate = new BeginOperationDelegate(this.OnBeginUpdateTimeEntryPrice);
            }
            if ((this.onEndUpdateTimeEntryPriceDelegate == null)) {
                this.onEndUpdateTimeEntryPriceDelegate = new EndOperationDelegate(this.OnEndUpdateTimeEntryPrice);
            }
            if ((this.onUpdateTimeEntryPriceCompletedDelegate == null)) {
                this.onUpdateTimeEntryPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateTimeEntryPriceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateTimeEntryPriceDelegate, new object[] {
                        projectId}, this.onEndUpdateTimeEntryPriceDelegate, this.onUpdateTimeEntryPriceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetCustomerByCriteria(Trex.ServiceContracts.GetCustomerByIdCriterias criterias, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerByCriteria(criterias, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Customer Trex.ServiceModel.Model.ITrexService.EndGetCustomerByCriteria(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerByCriteria(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerByCriteria(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.GetCustomerByIdCriterias criterias = ((Trex.ServiceContracts.GetCustomerByIdCriterias)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetCustomerByCriteria(criterias, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerByCriteria(System.IAsyncResult result) {
            Trex.ServiceContracts.Customer retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetCustomerByCriteria(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerByCriteriaCompleted(object state) {
            if ((this.GetCustomerByCriteriaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerByCriteriaCompleted(this, new GetCustomerByCriteriaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerByCriteriaAsync(Trex.ServiceContracts.GetCustomerByIdCriterias criterias) {
            this.GetCustomerByCriteriaAsync(criterias, null);
        }
        
        public void GetCustomerByCriteriaAsync(Trex.ServiceContracts.GetCustomerByIdCriterias criterias, object userState) {
            if ((this.onBeginGetCustomerByCriteriaDelegate == null)) {
                this.onBeginGetCustomerByCriteriaDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerByCriteria);
            }
            if ((this.onEndGetCustomerByCriteriaDelegate == null)) {
                this.onEndGetCustomerByCriteriaDelegate = new EndOperationDelegate(this.OnEndGetCustomerByCriteria);
            }
            if ((this.onGetCustomerByCriteriaCompletedDelegate == null)) {
                this.onGetCustomerByCriteriaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerByCriteriaCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerByCriteriaDelegate, new object[] {
                        criterias}, this.onEndGetCustomerByCriteriaDelegate, this.onGetCustomerByCriteriaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginLoadComments(int invoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLoadComments(invoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment> Trex.ServiceModel.Model.ITrexService.EndLoadComments(System.IAsyncResult result) {
            return base.Channel.EndLoadComments(result);
        }
        
        private System.IAsyncResult OnBeginLoadComments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginLoadComments(invoiceId, callback, asyncState);
        }
        
        private object[] OnEndLoadComments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndLoadComments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoadCommentsCompleted(object state) {
            if ((this.LoadCommentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoadCommentsCompleted(this, new LoadCommentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoadCommentsAsync(int invoiceId) {
            this.LoadCommentsAsync(invoiceId, null);
        }
        
        public void LoadCommentsAsync(int invoiceId, object userState) {
            if ((this.onBeginLoadCommentsDelegate == null)) {
                this.onBeginLoadCommentsDelegate = new BeginOperationDelegate(this.OnBeginLoadComments);
            }
            if ((this.onEndLoadCommentsDelegate == null)) {
                this.onEndLoadCommentsDelegate = new EndOperationDelegate(this.OnEndLoadComments);
            }
            if ((this.onLoadCommentsCompletedDelegate == null)) {
                this.onLoadCommentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoadCommentsCompleted);
            }
            base.InvokeAsync(this.onBeginLoadCommentsDelegate, new object[] {
                        invoiceId}, this.onEndLoadCommentsDelegate, this.onLoadCommentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveComment(string comment, int invoiceID, int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveComment(comment, invoiceID, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndSaveComment(System.IAsyncResult result) {
            return base.Channel.EndSaveComment(result);
        }
        
        private System.IAsyncResult OnBeginSaveComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string comment = ((string)(inValues[0]));
            int invoiceID = ((int)(inValues[1]));
            int userID = ((int)(inValues[2]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveComment(comment, invoiceID, userID, callback, asyncState);
        }
        
        private object[] OnEndSaveComment(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveComment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCommentCompleted(object state) {
            if ((this.SaveCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCommentCompleted(this, new SaveCommentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCommentAsync(string comment, int invoiceID, int userID) {
            this.SaveCommentAsync(comment, invoiceID, userID, null);
        }
        
        public void SaveCommentAsync(string comment, int invoiceID, int userID, object userState) {
            if ((this.onBeginSaveCommentDelegate == null)) {
                this.onBeginSaveCommentDelegate = new BeginOperationDelegate(this.OnBeginSaveComment);
            }
            if ((this.onEndSaveCommentDelegate == null)) {
                this.onEndSaveCommentDelegate = new EndOperationDelegate(this.OnEndSaveComment);
            }
            if ((this.onSaveCommentCompletedDelegate == null)) {
                this.onSaveCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCommentCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCommentDelegate, new object[] {
                        comment,
                        invoiceID,
                        userID}, this.onEndSaveCommentDelegate, this.onSaveCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetDebitList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDebitList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> Trex.ServiceModel.Model.ITrexService.EndGetDebitList(System.IAsyncResult result) {
            return base.Channel.EndGetDebitList(result);
        }
        
        private System.IAsyncResult OnBeginGetDebitList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetDebitList(callback, asyncState);
        }
        
        private object[] OnEndGetDebitList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetDebitList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDebitListCompleted(object state) {
            if ((this.GetDebitListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDebitListCompleted(this, new GetDebitListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDebitListAsync() {
            this.GetDebitListAsync(null);
        }
        
        public void GetDebitListAsync(object userState) {
            if ((this.onBeginGetDebitListDelegate == null)) {
                this.onBeginGetDebitListDelegate = new BeginOperationDelegate(this.OnBeginGetDebitList);
            }
            if ((this.onEndGetDebitListDelegate == null)) {
                this.onEndGetDebitListDelegate = new EndOperationDelegate(this.OnEndGetDebitList);
            }
            if ((this.onGetDebitListCompletedDelegate == null)) {
                this.onGetDebitListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDebitListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDebitListDelegate, null, this.onEndGetDebitListDelegate, this.onGetDebitListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetTimeEntryByTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeEntryByTimeEntry(timeEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.TimeEntry Trex.ServiceModel.Model.ITrexService.EndGetTimeEntryByTimeEntry(System.IAsyncResult result) {
            return base.Channel.EndGetTimeEntryByTimeEntry(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeEntryByTimeEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.TimeEntry timeEntry = ((Trex.ServiceContracts.TimeEntry)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetTimeEntryByTimeEntry(timeEntry, callback, asyncState);
        }
        
        private object[] OnEndGetTimeEntryByTimeEntry(System.IAsyncResult result) {
            Trex.ServiceContracts.TimeEntry retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetTimeEntryByTimeEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeEntryByTimeEntryCompleted(object state) {
            if ((this.GetTimeEntryByTimeEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeEntryByTimeEntryCompleted(this, new GetTimeEntryByTimeEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeEntryByTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry) {
            this.GetTimeEntryByTimeEntryAsync(timeEntry, null);
        }
        
        public void GetTimeEntryByTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry, object userState) {
            if ((this.onBeginGetTimeEntryByTimeEntryDelegate == null)) {
                this.onBeginGetTimeEntryByTimeEntryDelegate = new BeginOperationDelegate(this.OnBeginGetTimeEntryByTimeEntry);
            }
            if ((this.onEndGetTimeEntryByTimeEntryDelegate == null)) {
                this.onEndGetTimeEntryByTimeEntryDelegate = new EndOperationDelegate(this.OnEndGetTimeEntryByTimeEntry);
            }
            if ((this.onGetTimeEntryByTimeEntryCompletedDelegate == null)) {
                this.onGetTimeEntryByTimeEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeEntryByTimeEntryCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeEntryByTimeEntryDelegate, new object[] {
                        timeEntry}, this.onEndGetTimeEntryByTimeEntryDelegate, this.onGetTimeEntryByTimeEntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetInvoiceByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvoiceByInvoiceId(invoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.InvoiceListItemView Trex.ServiceModel.Model.ITrexService.EndGetInvoiceByInvoiceId(System.IAsyncResult result) {
            return base.Channel.EndGetInvoiceByInvoiceId(result);
        }
        
        private System.IAsyncResult OnBeginGetInvoiceByInvoiceId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetInvoiceByInvoiceId(invoiceId, callback, asyncState);
        }
        
        private object[] OnEndGetInvoiceByInvoiceId(System.IAsyncResult result) {
            Trex.ServiceContracts.InvoiceListItemView retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetInvoiceByInvoiceId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvoiceByInvoiceIdCompleted(object state) {
            if ((this.GetInvoiceByInvoiceIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvoiceByInvoiceIdCompleted(this, new GetInvoiceByInvoiceIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvoiceByInvoiceIdAsync(int invoiceId) {
            this.GetInvoiceByInvoiceIdAsync(invoiceId, null);
        }
        
        public void GetInvoiceByInvoiceIdAsync(int invoiceId, object userState) {
            if ((this.onBeginGetInvoiceByInvoiceIdDelegate == null)) {
                this.onBeginGetInvoiceByInvoiceIdDelegate = new BeginOperationDelegate(this.OnBeginGetInvoiceByInvoiceId);
            }
            if ((this.onEndGetInvoiceByInvoiceIdDelegate == null)) {
                this.onEndGetInvoiceByInvoiceIdDelegate = new EndOperationDelegate(this.OnEndGetInvoiceByInvoiceId);
            }
            if ((this.onGetInvoiceByInvoiceIdCompletedDelegate == null)) {
                this.onGetInvoiceByInvoiceIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvoiceByInvoiceIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvoiceByInvoiceIdDelegate, new object[] {
                        invoiceId}, this.onEndGetInvoiceByInvoiceIdDelegate, this.onGetInvoiceByInvoiceIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetAllInvoiceIds(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllInvoiceIds(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>> Trex.ServiceModel.Model.ITrexService.EndGetAllInvoiceIds(System.IAsyncResult result) {
            return base.Channel.EndGetAllInvoiceIds(result);
        }
        
        private System.IAsyncResult OnBeginGetAllInvoiceIds(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetAllInvoiceIds(callback, asyncState);
        }
        
        private object[] OnEndGetAllInvoiceIds(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetAllInvoiceIds(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllInvoiceIdsCompleted(object state) {
            if ((this.GetAllInvoiceIdsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllInvoiceIdsCompleted(this, new GetAllInvoiceIdsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllInvoiceIdsAsync() {
            this.GetAllInvoiceIdsAsync(null);
        }
        
        public void GetAllInvoiceIdsAsync(object userState) {
            if ((this.onBeginGetAllInvoiceIdsDelegate == null)) {
                this.onBeginGetAllInvoiceIdsDelegate = new BeginOperationDelegate(this.OnBeginGetAllInvoiceIds);
            }
            if ((this.onEndGetAllInvoiceIdsDelegate == null)) {
                this.onEndGetAllInvoiceIdsDelegate = new EndOperationDelegate(this.OnEndGetAllInvoiceIds);
            }
            if ((this.onGetAllInvoiceIdsCompletedDelegate == null)) {
                this.onGetAllInvoiceIdsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllInvoiceIdsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllInvoiceIdsDelegate, null, this.onEndGetAllInvoiceIdsDelegate, this.onGetAllInvoiceIdsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginRecalculateInvoice(int invoiceId, System.DateTime startDate, System.DateTime endDate, int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecalculateInvoice(invoiceId, startDate, endDate, customerInvoiceGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndRecalculateInvoice(System.IAsyncResult result) {
            base.Channel.EndRecalculateInvoice(result);
        }
        
        private System.IAsyncResult OnBeginRecalculateInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            System.DateTime startDate = ((System.DateTime)(inValues[1]));
            System.DateTime endDate = ((System.DateTime)(inValues[2]));
            int customerInvoiceGroupId = ((int)(inValues[3]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginRecalculateInvoice(invoiceId, startDate, endDate, customerInvoiceGroupId, callback, asyncState);
        }
        
        private object[] OnEndRecalculateInvoice(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndRecalculateInvoice(result);
            return null;
        }
        
        private void OnRecalculateInvoiceCompleted(object state) {
            if ((this.RecalculateInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecalculateInvoiceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecalculateInvoiceAsync(int invoiceId, System.DateTime startDate, System.DateTime endDate, int customerInvoiceGroupId) {
            this.RecalculateInvoiceAsync(invoiceId, startDate, endDate, customerInvoiceGroupId, null);
        }
        
        public void RecalculateInvoiceAsync(int invoiceId, System.DateTime startDate, System.DateTime endDate, int customerInvoiceGroupId, object userState) {
            if ((this.onBeginRecalculateInvoiceDelegate == null)) {
                this.onBeginRecalculateInvoiceDelegate = new BeginOperationDelegate(this.OnBeginRecalculateInvoice);
            }
            if ((this.onEndRecalculateInvoiceDelegate == null)) {
                this.onEndRecalculateInvoiceDelegate = new EndOperationDelegate(this.OnEndRecalculateInvoice);
            }
            if ((this.onRecalculateInvoiceCompletedDelegate == null)) {
                this.onRecalculateInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecalculateInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginRecalculateInvoiceDelegate, new object[] {
                        invoiceId,
                        startDate,
                        endDate,
                        customerInvoiceGroupId}, this.onEndRecalculateInvoiceDelegate, this.onRecalculateInvoiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteInvoiceTemplate(Trex.ServiceContracts.InvoiceTemplate template, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteInvoiceTemplate(template, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndDeleteInvoiceTemplate(System.IAsyncResult result) {
            base.Channel.EndDeleteInvoiceTemplate(result);
        }
        
        private System.IAsyncResult OnBeginDeleteInvoiceTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.InvoiceTemplate template = ((Trex.ServiceContracts.InvoiceTemplate)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteInvoiceTemplate(template, callback, asyncState);
        }
        
        private object[] OnEndDeleteInvoiceTemplate(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteInvoiceTemplate(result);
            return null;
        }
        
        private void OnDeleteInvoiceTemplateCompleted(object state) {
            if ((this.DeleteInvoiceTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteInvoiceTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteInvoiceTemplateAsync(Trex.ServiceContracts.InvoiceTemplate template) {
            this.DeleteInvoiceTemplateAsync(template, null);
        }
        
        public void DeleteInvoiceTemplateAsync(Trex.ServiceContracts.InvoiceTemplate template, object userState) {
            if ((this.onBeginDeleteInvoiceTemplateDelegate == null)) {
                this.onBeginDeleteInvoiceTemplateDelegate = new BeginOperationDelegate(this.OnBeginDeleteInvoiceTemplate);
            }
            if ((this.onEndDeleteInvoiceTemplateDelegate == null)) {
                this.onEndDeleteInvoiceTemplateDelegate = new EndOperationDelegate(this.OnEndDeleteInvoiceTemplate);
            }
            if ((this.onDeleteInvoiceTemplateCompletedDelegate == null)) {
                this.onDeleteInvoiceTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteInvoiceTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteInvoiceTemplateDelegate, new object[] {
                        template}, this.onEndDeleteInvoiceTemplateDelegate, this.onDeleteInvoiceTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginUpdateExclVAT(int invoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateExclVAT(invoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Nullable<double> Trex.ServiceModel.Model.ITrexService.EndUpdateExclVAT(System.IAsyncResult result) {
            return base.Channel.EndUpdateExclVAT(result);
        }
        
        private System.IAsyncResult OnBeginUpdateExclVAT(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginUpdateExclVAT(invoiceId, callback, asyncState);
        }
        
        private object[] OnEndUpdateExclVAT(System.IAsyncResult result) {
            System.Nullable<double> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndUpdateExclVAT(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateExclVATCompleted(object state) {
            if ((this.UpdateExclVATCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateExclVATCompleted(this, new UpdateExclVATCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateExclVATAsync(int invoiceId) {
            this.UpdateExclVATAsync(invoiceId, null);
        }
        
        public void UpdateExclVATAsync(int invoiceId, object userState) {
            if ((this.onBeginUpdateExclVATDelegate == null)) {
                this.onBeginUpdateExclVATDelegate = new BeginOperationDelegate(this.OnBeginUpdateExclVAT);
            }
            if ((this.onEndUpdateExclVATDelegate == null)) {
                this.onEndUpdateExclVATDelegate = new EndOperationDelegate(this.OnEndUpdateExclVAT);
            }
            if ((this.onUpdateExclVATCompletedDelegate == null)) {
                this.onUpdateExclVATCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateExclVATCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateExclVATDelegate, new object[] {
                        invoiceId}, this.onEndUpdateExclVATDelegate, this.onUpdateExclVATCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetFinalizedInvoiceDataByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFinalizedInvoiceDataByInvoiceId(invoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote> Trex.ServiceModel.Model.ITrexService.EndGetFinalizedInvoiceDataByInvoiceId(System.IAsyncResult result) {
            return base.Channel.EndGetFinalizedInvoiceDataByInvoiceId(result);
        }
        
        private System.IAsyncResult OnBeginGetFinalizedInvoiceDataByInvoiceId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetFinalizedInvoiceDataByInvoiceId(invoiceId, callback, asyncState);
        }
        
        private object[] OnEndGetFinalizedInvoiceDataByInvoiceId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetFinalizedInvoiceDataByInvoiceId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFinalizedInvoiceDataByInvoiceIdCompleted(object state) {
            if ((this.GetFinalizedInvoiceDataByInvoiceIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFinalizedInvoiceDataByInvoiceIdCompleted(this, new GetFinalizedInvoiceDataByInvoiceIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFinalizedInvoiceDataByInvoiceIdAsync(int invoiceId) {
            this.GetFinalizedInvoiceDataByInvoiceIdAsync(invoiceId, null);
        }
        
        public void GetFinalizedInvoiceDataByInvoiceIdAsync(int invoiceId, object userState) {
            if ((this.onBeginGetFinalizedInvoiceDataByInvoiceIdDelegate == null)) {
                this.onBeginGetFinalizedInvoiceDataByInvoiceIdDelegate = new BeginOperationDelegate(this.OnBeginGetFinalizedInvoiceDataByInvoiceId);
            }
            if ((this.onEndGetFinalizedInvoiceDataByInvoiceIdDelegate == null)) {
                this.onEndGetFinalizedInvoiceDataByInvoiceIdDelegate = new EndOperationDelegate(this.OnEndGetFinalizedInvoiceDataByInvoiceId);
            }
            if ((this.onGetFinalizedInvoiceDataByInvoiceIdCompletedDelegate == null)) {
                this.onGetFinalizedInvoiceDataByInvoiceIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFinalizedInvoiceDataByInvoiceIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetFinalizedInvoiceDataByInvoiceIdDelegate, new object[] {
                        invoiceId}, this.onEndGetFinalizedInvoiceDataByInvoiceIdDelegate, this.onGetFinalizedInvoiceDataByInvoiceIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveInvoiceTemplateFile(byte[] binaryFile, int invoiceTemplateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveInvoiceTemplateFile(binaryFile, invoiceTemplateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndSaveInvoiceTemplateFile(System.IAsyncResult result) {
            base.Channel.EndSaveInvoiceTemplateFile(result);
        }
        
        private System.IAsyncResult OnBeginSaveInvoiceTemplateFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] binaryFile = ((byte[])(inValues[0]));
            int invoiceTemplateId = ((int)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveInvoiceTemplateFile(binaryFile, invoiceTemplateId, callback, asyncState);
        }
        
        private object[] OnEndSaveInvoiceTemplateFile(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveInvoiceTemplateFile(result);
            return null;
        }
        
        private void OnSaveInvoiceTemplateFileCompleted(object state) {
            if ((this.SaveInvoiceTemplateFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveInvoiceTemplateFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveInvoiceTemplateFileAsync(byte[] binaryFile, int invoiceTemplateId) {
            this.SaveInvoiceTemplateFileAsync(binaryFile, invoiceTemplateId, null);
        }
        
        public void SaveInvoiceTemplateFileAsync(byte[] binaryFile, int invoiceTemplateId, object userState) {
            if ((this.onBeginSaveInvoiceTemplateFileDelegate == null)) {
                this.onBeginSaveInvoiceTemplateFileDelegate = new BeginOperationDelegate(this.OnBeginSaveInvoiceTemplateFile);
            }
            if ((this.onEndSaveInvoiceTemplateFileDelegate == null)) {
                this.onEndSaveInvoiceTemplateFileDelegate = new EndOperationDelegate(this.OnEndSaveInvoiceTemplateFile);
            }
            if ((this.onSaveInvoiceTemplateFileCompletedDelegate == null)) {
                this.onSaveInvoiceTemplateFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveInvoiceTemplateFileCompleted);
            }
            base.InvokeAsync(this.onBeginSaveInvoiceTemplateFileDelegate, new object[] {
                        binaryFile,
                        invoiceTemplateId}, this.onEndSaveInvoiceTemplateFileDelegate, this.onSaveInvoiceTemplateFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetInvoiceTemplates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvoiceTemplates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> Trex.ServiceModel.Model.ITrexService.EndGetInvoiceTemplates(System.IAsyncResult result) {
            return base.Channel.EndGetInvoiceTemplates(result);
        }
        
        private System.IAsyncResult OnBeginGetInvoiceTemplates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetInvoiceTemplates(callback, asyncState);
        }
        
        private object[] OnEndGetInvoiceTemplates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetInvoiceTemplates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvoiceTemplatesCompleted(object state) {
            if ((this.GetInvoiceTemplatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvoiceTemplatesCompleted(this, new GetInvoiceTemplatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvoiceTemplatesAsync() {
            this.GetInvoiceTemplatesAsync(null);
        }
        
        public void GetInvoiceTemplatesAsync(object userState) {
            if ((this.onBeginGetInvoiceTemplatesDelegate == null)) {
                this.onBeginGetInvoiceTemplatesDelegate = new BeginOperationDelegate(this.OnBeginGetInvoiceTemplates);
            }
            if ((this.onEndGetInvoiceTemplatesDelegate == null)) {
                this.onEndGetInvoiceTemplatesDelegate = new EndOperationDelegate(this.OnEndGetInvoiceTemplates);
            }
            if ((this.onGetInvoiceTemplatesCompletedDelegate == null)) {
                this.onGetInvoiceTemplatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvoiceTemplatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvoiceTemplatesDelegate, null, this.onEndGetInvoiceTemplatesDelegate, this.onGetInvoiceTemplatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginOverWriteCig(Trex.ServiceContracts.CustomerInvoiceGroup cig, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOverWriteCig(cig, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndOverWriteCig(System.IAsyncResult result) {
            return base.Channel.EndOverWriteCig(result);
        }
        
        private System.IAsyncResult OnBeginOverWriteCig(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.CustomerInvoiceGroup cig = ((Trex.ServiceContracts.CustomerInvoiceGroup)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginOverWriteCig(cig, callback, asyncState);
        }
        
        private object[] OnEndOverWriteCig(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndOverWriteCig(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOverWriteCigCompleted(object state) {
            if ((this.OverWriteCigCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OverWriteCigCompleted(this, new OverWriteCigCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OverWriteCigAsync(Trex.ServiceContracts.CustomerInvoiceGroup cig) {
            this.OverWriteCigAsync(cig, null);
        }
        
        public void OverWriteCigAsync(Trex.ServiceContracts.CustomerInvoiceGroup cig, object userState) {
            if ((this.onBeginOverWriteCigDelegate == null)) {
                this.onBeginOverWriteCigDelegate = new BeginOperationDelegate(this.OnBeginOverWriteCig);
            }
            if ((this.onEndOverWriteCigDelegate == null)) {
                this.onEndOverWriteCigDelegate = new EndOperationDelegate(this.OnEndOverWriteCig);
            }
            if ((this.onOverWriteCigCompletedDelegate == null)) {
                this.onOverWriteCigCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOverWriteCigCompleted);
            }
            base.InvokeAsync(this.onBeginOverWriteCigDelegate, new object[] {
                        cig}, this.onEndOverWriteCigDelegate, this.onOverWriteCigCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveCIG(Trex.ServiceContracts.CustomerInvoiceGroup cig, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCIG(cig, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndSaveCIG(System.IAsyncResult result) {
            return base.Channel.EndSaveCIG(result);
        }
        
        private System.IAsyncResult OnBeginSaveCIG(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.CustomerInvoiceGroup cig = ((Trex.ServiceContracts.CustomerInvoiceGroup)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveCIG(cig, callback, asyncState);
        }
        
        private object[] OnEndSaveCIG(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveCIG(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCIGCompleted(object state) {
            if ((this.SaveCIGCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCIGCompleted(this, new SaveCIGCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCIGAsync(Trex.ServiceContracts.CustomerInvoiceGroup cig) {
            this.SaveCIGAsync(cig, null);
        }
        
        public void SaveCIGAsync(Trex.ServiceContracts.CustomerInvoiceGroup cig, object userState) {
            if ((this.onBeginSaveCIGDelegate == null)) {
                this.onBeginSaveCIGDelegate = new BeginOperationDelegate(this.OnBeginSaveCIG);
            }
            if ((this.onEndSaveCIGDelegate == null)) {
                this.onEndSaveCIGDelegate = new EndOperationDelegate(this.OnEndSaveCIG);
            }
            if ((this.onSaveCIGCompletedDelegate == null)) {
                this.onSaveCIGCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCIGCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCIGDelegate, new object[] {
                        cig}, this.onEndSaveCIGDelegate, this.onSaveCIGCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveInvoiceChanges(Trex.ServiceContracts.InvoiceListItemView invoicedata, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveInvoiceChanges(invoicedata, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndSaveInvoiceChanges(System.IAsyncResult result) {
            return base.Channel.EndSaveInvoiceChanges(result);
        }
        
        private System.IAsyncResult OnBeginSaveInvoiceChanges(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.InvoiceListItemView invoicedata = ((Trex.ServiceContracts.InvoiceListItemView)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveInvoiceChanges(invoicedata, callback, asyncState);
        }
        
        private object[] OnEndSaveInvoiceChanges(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveInvoiceChanges(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveInvoiceChangesCompleted(object state) {
            if ((this.SaveInvoiceChangesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveInvoiceChangesCompleted(this, new SaveInvoiceChangesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveInvoiceChangesAsync(Trex.ServiceContracts.InvoiceListItemView invoicedata) {
            this.SaveInvoiceChangesAsync(invoicedata, null);
        }
        
        public void SaveInvoiceChangesAsync(Trex.ServiceContracts.InvoiceListItemView invoicedata, object userState) {
            if ((this.onBeginSaveInvoiceChangesDelegate == null)) {
                this.onBeginSaveInvoiceChangesDelegate = new BeginOperationDelegate(this.OnBeginSaveInvoiceChanges);
            }
            if ((this.onEndSaveInvoiceChangesDelegate == null)) {
                this.onEndSaveInvoiceChangesDelegate = new EndOperationDelegate(this.OnEndSaveInvoiceChanges);
            }
            if ((this.onSaveInvoiceChangesCompletedDelegate == null)) {
                this.onSaveInvoiceChangesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveInvoiceChangesCompleted);
            }
            base.InvokeAsync(this.onBeginSaveInvoiceChangesDelegate, new object[] {
                        invoicedata}, this.onEndSaveInvoiceChangesDelegate, this.onSaveInvoiceChangesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetInvoicesByCustomerId(System.Collections.ObjectModel.ObservableCollection<int> customerIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvoicesByCustomerId(customerIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> Trex.ServiceModel.Model.ITrexService.EndGetInvoicesByCustomerId(System.IAsyncResult result) {
            return base.Channel.EndGetInvoicesByCustomerId(result);
        }
        
        private System.IAsyncResult OnBeginGetInvoicesByCustomerId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> customerIds = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetInvoicesByCustomerId(customerIds, callback, asyncState);
        }
        
        private object[] OnEndGetInvoicesByCustomerId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetInvoicesByCustomerId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvoicesByCustomerIdCompleted(object state) {
            if ((this.GetInvoicesByCustomerIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvoicesByCustomerIdCompleted(this, new GetInvoicesByCustomerIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvoicesByCustomerIdAsync(System.Collections.ObjectModel.ObservableCollection<int> customerIds) {
            this.GetInvoicesByCustomerIdAsync(customerIds, null);
        }
        
        public void GetInvoicesByCustomerIdAsync(System.Collections.ObjectModel.ObservableCollection<int> customerIds, object userState) {
            if ((this.onBeginGetInvoicesByCustomerIdDelegate == null)) {
                this.onBeginGetInvoicesByCustomerIdDelegate = new BeginOperationDelegate(this.OnBeginGetInvoicesByCustomerId);
            }
            if ((this.onEndGetInvoicesByCustomerIdDelegate == null)) {
                this.onEndGetInvoicesByCustomerIdDelegate = new EndOperationDelegate(this.OnEndGetInvoicesByCustomerId);
            }
            if ((this.onGetInvoicesByCustomerIdCompletedDelegate == null)) {
                this.onGetInvoicesByCustomerIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvoicesByCustomerIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvoicesByCustomerIdDelegate, new object[] {
                        customerIds}, this.onEndGetInvoicesByCustomerIdDelegate, this.onGetInvoicesByCustomerIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGenerateInvoiceLines(int invoiceid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateInvoiceLines(invoiceid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndGenerateInvoiceLines(System.IAsyncResult result) {
            base.Channel.EndGenerateInvoiceLines(result);
        }
        
        private System.IAsyncResult OnBeginGenerateInvoiceLines(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceid = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGenerateInvoiceLines(invoiceid, callback, asyncState);
        }
        
        private object[] OnEndGenerateInvoiceLines(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndGenerateInvoiceLines(result);
            return null;
        }
        
        private void OnGenerateInvoiceLinesCompleted(object state) {
            if ((this.GenerateInvoiceLinesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateInvoiceLinesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateInvoiceLinesAsync(int invoiceid) {
            this.GenerateInvoiceLinesAsync(invoiceid, null);
        }
        
        public void GenerateInvoiceLinesAsync(int invoiceid, object userState) {
            if ((this.onBeginGenerateInvoiceLinesDelegate == null)) {
                this.onBeginGenerateInvoiceLinesDelegate = new BeginOperationDelegate(this.OnBeginGenerateInvoiceLines);
            }
            if ((this.onEndGenerateInvoiceLinesDelegate == null)) {
                this.onEndGenerateInvoiceLinesDelegate = new EndOperationDelegate(this.OnEndGenerateInvoiceLines);
            }
            if ((this.onGenerateInvoiceLinesCompletedDelegate == null)) {
                this.onGenerateInvoiceLinesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateInvoiceLinesCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateInvoiceLinesDelegate, new object[] {
                        invoiceid}, this.onEndGenerateInvoiceLinesDelegate, this.onGenerateInvoiceLinesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginCreateNewInvoiceLine(int invoiceId, double vat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateNewInvoiceLine(invoiceId, vat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndCreateNewInvoiceLine(System.IAsyncResult result) {
            base.Channel.EndCreateNewInvoiceLine(result);
        }
        
        private System.IAsyncResult OnBeginCreateNewInvoiceLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            double vat = ((double)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginCreateNewInvoiceLine(invoiceId, vat, callback, asyncState);
        }
        
        private object[] OnEndCreateNewInvoiceLine(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndCreateNewInvoiceLine(result);
            return null;
        }
        
        private void OnCreateNewInvoiceLineCompleted(object state) {
            if ((this.CreateNewInvoiceLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateNewInvoiceLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateNewInvoiceLineAsync(int invoiceId, double vat) {
            this.CreateNewInvoiceLineAsync(invoiceId, vat, null);
        }
        
        public void CreateNewInvoiceLineAsync(int invoiceId, double vat, object userState) {
            if ((this.onBeginCreateNewInvoiceLineDelegate == null)) {
                this.onBeginCreateNewInvoiceLineDelegate = new BeginOperationDelegate(this.OnBeginCreateNewInvoiceLine);
            }
            if ((this.onEndCreateNewInvoiceLineDelegate == null)) {
                this.onEndCreateNewInvoiceLineDelegate = new EndOperationDelegate(this.OnEndCreateNewInvoiceLine);
            }
            if ((this.onCreateNewInvoiceLineCompletedDelegate == null)) {
                this.onCreateNewInvoiceLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNewInvoiceLineCompleted);
            }
            base.InvokeAsync(this.onBeginCreateNewInvoiceLineDelegate, new object[] {
                        invoiceId,
                        vat}, this.onEndCreateNewInvoiceLineDelegate, this.onCreateNewInvoiceLineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSetStandardInvoicePrintTemplate(int templateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetStandardInvoicePrintTemplate(templateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndSetStandardInvoicePrintTemplate(System.IAsyncResult result) {
            base.Channel.EndSetStandardInvoicePrintTemplate(result);
        }
        
        private System.IAsyncResult OnBeginSetStandardInvoicePrintTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int templateId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSetStandardInvoicePrintTemplate(templateId, callback, asyncState);
        }
        
        private object[] OnEndSetStandardInvoicePrintTemplate(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndSetStandardInvoicePrintTemplate(result);
            return null;
        }
        
        private void OnSetStandardInvoicePrintTemplateCompleted(object state) {
            if ((this.SetStandardInvoicePrintTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetStandardInvoicePrintTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetStandardInvoicePrintTemplateAsync(int templateId) {
            this.SetStandardInvoicePrintTemplateAsync(templateId, null);
        }
        
        public void SetStandardInvoicePrintTemplateAsync(int templateId, object userState) {
            if ((this.onBeginSetStandardInvoicePrintTemplateDelegate == null)) {
                this.onBeginSetStandardInvoicePrintTemplateDelegate = new BeginOperationDelegate(this.OnBeginSetStandardInvoicePrintTemplate);
            }
            if ((this.onEndSetStandardInvoicePrintTemplateDelegate == null)) {
                this.onEndSetStandardInvoicePrintTemplateDelegate = new EndOperationDelegate(this.OnEndSetStandardInvoicePrintTemplate);
            }
            if ((this.onSetStandardInvoicePrintTemplateCompletedDelegate == null)) {
                this.onSetStandardInvoicePrintTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetStandardInvoicePrintTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginSetStandardInvoicePrintTemplateDelegate, new object[] {
                        templateId}, this.onEndSetStandardInvoicePrintTemplateDelegate, this.onSetStandardInvoicePrintTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSetStandardInvoiceMailTemplate(int templateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetStandardInvoiceMailTemplate(templateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndSetStandardInvoiceMailTemplate(System.IAsyncResult result) {
            base.Channel.EndSetStandardInvoiceMailTemplate(result);
        }
        
        private System.IAsyncResult OnBeginSetStandardInvoiceMailTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int templateId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSetStandardInvoiceMailTemplate(templateId, callback, asyncState);
        }
        
        private object[] OnEndSetStandardInvoiceMailTemplate(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndSetStandardInvoiceMailTemplate(result);
            return null;
        }
        
        private void OnSetStandardInvoiceMailTemplateCompleted(object state) {
            if ((this.SetStandardInvoiceMailTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetStandardInvoiceMailTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetStandardInvoiceMailTemplateAsync(int templateId) {
            this.SetStandardInvoiceMailTemplateAsync(templateId, null);
        }
        
        public void SetStandardInvoiceMailTemplateAsync(int templateId, object userState) {
            if ((this.onBeginSetStandardInvoiceMailTemplateDelegate == null)) {
                this.onBeginSetStandardInvoiceMailTemplateDelegate = new BeginOperationDelegate(this.OnBeginSetStandardInvoiceMailTemplate);
            }
            if ((this.onEndSetStandardInvoiceMailTemplateDelegate == null)) {
                this.onEndSetStandardInvoiceMailTemplateDelegate = new EndOperationDelegate(this.OnEndSetStandardInvoiceMailTemplate);
            }
            if ((this.onSetStandardInvoiceMailTemplateCompletedDelegate == null)) {
                this.onSetStandardInvoiceMailTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetStandardInvoiceMailTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginSetStandardInvoiceMailTemplateDelegate, new object[] {
                        templateId}, this.onEndSetStandardInvoiceMailTemplateDelegate, this.onSetStandardInvoiceMailTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSetStandardSpecificationTemplate(int templateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetStandardSpecificationTemplate(templateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndSetStandardSpecificationTemplate(System.IAsyncResult result) {
            base.Channel.EndSetStandardSpecificationTemplate(result);
        }
        
        private System.IAsyncResult OnBeginSetStandardSpecificationTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int templateId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSetStandardSpecificationTemplate(templateId, callback, asyncState);
        }
        
        private object[] OnEndSetStandardSpecificationTemplate(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndSetStandardSpecificationTemplate(result);
            return null;
        }
        
        private void OnSetStandardSpecificationTemplateCompleted(object state) {
            if ((this.SetStandardSpecificationTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetStandardSpecificationTemplateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetStandardSpecificationTemplateAsync(int templateId) {
            this.SetStandardSpecificationTemplateAsync(templateId, null);
        }
        
        public void SetStandardSpecificationTemplateAsync(int templateId, object userState) {
            if ((this.onBeginSetStandardSpecificationTemplateDelegate == null)) {
                this.onBeginSetStandardSpecificationTemplateDelegate = new BeginOperationDelegate(this.OnBeginSetStandardSpecificationTemplate);
            }
            if ((this.onEndSetStandardSpecificationTemplateDelegate == null)) {
                this.onEndSetStandardSpecificationTemplateDelegate = new EndOperationDelegate(this.OnEndSetStandardSpecificationTemplate);
            }
            if ((this.onSetStandardSpecificationTemplateCompletedDelegate == null)) {
                this.onSetStandardSpecificationTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetStandardSpecificationTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginSetStandardSpecificationTemplateDelegate, new object[] {
                        templateId}, this.onEndSetStandardSpecificationTemplateDelegate, this.onSetStandardSpecificationTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSendInvoiceEmailToCustomerInvoiceGroup(Trex.ServiceContracts.Invoice invoice, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendInvoiceEmailToCustomerInvoiceGroup(invoice, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndSendInvoiceEmailToCustomerInvoiceGroup(System.IAsyncResult result) {
            return base.Channel.EndSendInvoiceEmailToCustomerInvoiceGroup(result);
        }
        
        private System.IAsyncResult OnBeginSendInvoiceEmailToCustomerInvoiceGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Invoice invoice = ((Trex.ServiceContracts.Invoice)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSendInvoiceEmailToCustomerInvoiceGroup(invoice, callback, asyncState);
        }
        
        private object[] OnEndSendInvoiceEmailToCustomerInvoiceGroup(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSendInvoiceEmailToCustomerInvoiceGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendInvoiceEmailToCustomerInvoiceGroupCompleted(object state) {
            if ((this.SendInvoiceEmailToCustomerInvoiceGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendInvoiceEmailToCustomerInvoiceGroupCompleted(this, new SendInvoiceEmailToCustomerInvoiceGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendInvoiceEmailToCustomerInvoiceGroupAsync(Trex.ServiceContracts.Invoice invoice) {
            this.SendInvoiceEmailToCustomerInvoiceGroupAsync(invoice, null);
        }
        
        public void SendInvoiceEmailToCustomerInvoiceGroupAsync(Trex.ServiceContracts.Invoice invoice, object userState) {
            if ((this.onBeginSendInvoiceEmailToCustomerInvoiceGroupDelegate == null)) {
                this.onBeginSendInvoiceEmailToCustomerInvoiceGroupDelegate = new BeginOperationDelegate(this.OnBeginSendInvoiceEmailToCustomerInvoiceGroup);
            }
            if ((this.onEndSendInvoiceEmailToCustomerInvoiceGroupDelegate == null)) {
                this.onEndSendInvoiceEmailToCustomerInvoiceGroupDelegate = new EndOperationDelegate(this.OnEndSendInvoiceEmailToCustomerInvoiceGroup);
            }
            if ((this.onSendInvoiceEmailToCustomerInvoiceGroupCompletedDelegate == null)) {
                this.onSendInvoiceEmailToCustomerInvoiceGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendInvoiceEmailToCustomerInvoiceGroupCompleted);
            }
            base.InvokeAsync(this.onBeginSendInvoiceEmailToCustomerInvoiceGroupDelegate, new object[] {
                        invoice}, this.onEndSendInvoiceEmailToCustomerInvoiceGroupDelegate, this.onSendInvoiceEmailToCustomerInvoiceGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(customerInvoiceGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.CustomerInvoiceGroup Trex.ServiceModel.Model.ITrexService.EndGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int customerInvoiceGroupId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(customerInvoiceGroupId, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(System.IAsyncResult result) {
            Trex.ServiceContracts.CustomerInvoiceGroup retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompleted(object state) {
            if ((this.GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompleted(this, new GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdAsync(int customerInvoiceGroupId) {
            this.GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdAsync(customerInvoiceGroupId, null);
        }
        
        public void GetCustomerInvoiceGroupByCustomerInvoiceFGroupIdAsync(int customerInvoiceGroupId, object userState) {
            if ((this.onBeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate == null)) {
                this.onBeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupId);
            }
            if ((this.onEndGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate == null)) {
                this.onEndGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate = new EndOperationDelegate(this.OnEndGetCustomerInvoiceGroupByCustomerInvoiceFGroupId);
            }
            if ((this.onGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedDelegate == null)) {
                this.onGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate, new object[] {
                        customerInvoiceGroupId}, this.onEndGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdDelegate, this.onGetCustomerInvoiceGroupByCustomerInvoiceFGroupIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteCustomerInvoiceGroup(int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCustomerInvoiceGroup(customerInvoiceGroupId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndDeleteCustomerInvoiceGroup(System.IAsyncResult result) {
            return base.Channel.EndDeleteCustomerInvoiceGroup(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCustomerInvoiceGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int customerInvoiceGroupId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteCustomerInvoiceGroup(customerInvoiceGroupId, callback, asyncState);
        }
        
        private object[] OnEndDeleteCustomerInvoiceGroup(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteCustomerInvoiceGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCustomerInvoiceGroupCompleted(object state) {
            if ((this.DeleteCustomerInvoiceGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCustomerInvoiceGroupCompleted(this, new DeleteCustomerInvoiceGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCustomerInvoiceGroupAsync(int customerInvoiceGroupId) {
            this.DeleteCustomerInvoiceGroupAsync(customerInvoiceGroupId, null);
        }
        
        public void DeleteCustomerInvoiceGroupAsync(int customerInvoiceGroupId, object userState) {
            if ((this.onBeginDeleteCustomerInvoiceGroupDelegate == null)) {
                this.onBeginDeleteCustomerInvoiceGroupDelegate = new BeginOperationDelegate(this.OnBeginDeleteCustomerInvoiceGroup);
            }
            if ((this.onEndDeleteCustomerInvoiceGroupDelegate == null)) {
                this.onEndDeleteCustomerInvoiceGroupDelegate = new EndOperationDelegate(this.OnEndDeleteCustomerInvoiceGroup);
            }
            if ((this.onDeleteCustomerInvoiceGroupCompletedDelegate == null)) {
                this.onDeleteCustomerInvoiceGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerInvoiceGroupCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCustomerInvoiceGroupDelegate, new object[] {
                        customerInvoiceGroupId}, this.onEndDeleteCustomerInvoiceGroupDelegate, this.onDeleteCustomerInvoiceGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetCustomerInvoiceGroupByCustomerId(int customerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerInvoiceGroupByCustomerId(customerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> Trex.ServiceModel.Model.ITrexService.EndGetCustomerInvoiceGroupByCustomerId(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerInvoiceGroupByCustomerId(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerInvoiceGroupByCustomerId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int customerId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetCustomerInvoiceGroupByCustomerId(customerId, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerInvoiceGroupByCustomerId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetCustomerInvoiceGroupByCustomerId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerInvoiceGroupByCustomerIdCompleted(object state) {
            if ((this.GetCustomerInvoiceGroupByCustomerIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerInvoiceGroupByCustomerIdCompleted(this, new GetCustomerInvoiceGroupByCustomerIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerInvoiceGroupByCustomerIdAsync(int customerId) {
            this.GetCustomerInvoiceGroupByCustomerIdAsync(customerId, null);
        }
        
        public void GetCustomerInvoiceGroupByCustomerIdAsync(int customerId, object userState) {
            if ((this.onBeginGetCustomerInvoiceGroupByCustomerIdDelegate == null)) {
                this.onBeginGetCustomerInvoiceGroupByCustomerIdDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerInvoiceGroupByCustomerId);
            }
            if ((this.onEndGetCustomerInvoiceGroupByCustomerIdDelegate == null)) {
                this.onEndGetCustomerInvoiceGroupByCustomerIdDelegate = new EndOperationDelegate(this.OnEndGetCustomerInvoiceGroupByCustomerId);
            }
            if ((this.onGetCustomerInvoiceGroupByCustomerIdCompletedDelegate == null)) {
                this.onGetCustomerInvoiceGroupByCustomerIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerInvoiceGroupByCustomerIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerInvoiceGroupByCustomerIdDelegate, new object[] {
                        customerId}, this.onEndGetCustomerInvoiceGroupByCustomerIdDelegate, this.onGetCustomerInvoiceGroupByCustomerIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginInsertCustomerInvoiceGroup(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> group, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertCustomerInvoiceGroup(group, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.ServerResponse Trex.ServiceModel.Model.ITrexService.EndInsertCustomerInvoiceGroup(System.IAsyncResult result) {
            return base.Channel.EndInsertCustomerInvoiceGroup(result);
        }
        
        private System.IAsyncResult OnBeginInsertCustomerInvoiceGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> group = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup>)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginInsertCustomerInvoiceGroup(group, callback, asyncState);
        }
        
        private object[] OnEndInsertCustomerInvoiceGroup(System.IAsyncResult result) {
            Trex.ServiceContracts.ServerResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndInsertCustomerInvoiceGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertCustomerInvoiceGroupCompleted(object state) {
            if ((this.InsertCustomerInvoiceGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCustomerInvoiceGroupCompleted(this, new InsertCustomerInvoiceGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertCustomerInvoiceGroupAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> group) {
            this.InsertCustomerInvoiceGroupAsync(group, null);
        }
        
        public void InsertCustomerInvoiceGroupAsync(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> group, object userState) {
            if ((this.onBeginInsertCustomerInvoiceGroupDelegate == null)) {
                this.onBeginInsertCustomerInvoiceGroupDelegate = new BeginOperationDelegate(this.OnBeginInsertCustomerInvoiceGroup);
            }
            if ((this.onEndInsertCustomerInvoiceGroupDelegate == null)) {
                this.onEndInsertCustomerInvoiceGroupDelegate = new EndOperationDelegate(this.OnEndInsertCustomerInvoiceGroup);
            }
            if ((this.onInsertCustomerInvoiceGroupCompletedDelegate == null)) {
                this.onInsertCustomerInvoiceGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCustomerInvoiceGroupCompleted);
            }
            base.InvokeAsync(this.onBeginInsertCustomerInvoiceGroupDelegate, new object[] {
                        group}, this.onEndInsertCustomerInvoiceGroupDelegate, this.onInsertCustomerInvoiceGroupCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginReCalculateInvoice1(Trex.ServiceModel.Model.ReCalculateInvoiceRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReCalculateInvoice1(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private System.IAsyncResult BeginReCalculateInvoice1(Trex.ServiceContracts.Invoice invoice, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceModel.Model.ReCalculateInvoiceRequest inValue = new Trex.ServiceModel.Model.ReCalculateInvoiceRequest();
            inValue.invoice = invoice;
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginReCalculateInvoice1(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceModel.Model.ReCalculateInvoiceResponse Trex.ServiceModel.Model.ITrexService.EndReCalculateInvoice1(System.IAsyncResult result) {
            return base.Channel.EndReCalculateInvoice1(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        private Trex.ServiceContracts.Invoice EndReCalculateInvoice1(System.IAsyncResult result) {
            Trex.ServiceModel.Model.ReCalculateInvoiceResponse retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndReCalculateInvoice1(result);
            return retVal.ReCalculateInvoiceResult;
        }
        
        private System.IAsyncResult OnBeginReCalculateInvoice1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Invoice invoice = ((Trex.ServiceContracts.Invoice)(inValues[0]));
            return this.BeginReCalculateInvoice1(invoice, callback, asyncState);
        }
        
        private object[] OnEndReCalculateInvoice1(System.IAsyncResult result) {
            Trex.ServiceContracts.Invoice retVal = this.EndReCalculateInvoice1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReCalculateInvoice1Completed(object state) {
            if ((this.ReCalculateInvoice1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReCalculateInvoice1Completed(this, new ReCalculateInvoice1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReCalculateInvoice1Async(Trex.ServiceContracts.Invoice invoice) {
            this.ReCalculateInvoice1Async(invoice, null);
        }
        
        public void ReCalculateInvoice1Async(Trex.ServiceContracts.Invoice invoice, object userState) {
            if ((this.onBeginReCalculateInvoice1Delegate == null)) {
                this.onBeginReCalculateInvoice1Delegate = new BeginOperationDelegate(this.OnBeginReCalculateInvoice1);
            }
            if ((this.onEndReCalculateInvoice1Delegate == null)) {
                this.onEndReCalculateInvoice1Delegate = new EndOperationDelegate(this.OnEndReCalculateInvoice1);
            }
            if ((this.onReCalculateInvoice1CompletedDelegate == null)) {
                this.onReCalculateInvoice1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReCalculateInvoice1Completed);
            }
            base.InvokeAsync(this.onBeginReCalculateInvoice1Delegate, new object[] {
                        invoice}, this.onEndReCalculateInvoice1Delegate, this.onReCalculateInvoice1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetInvoiceDataByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvoiceDataByInvoiceId(invoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> Trex.ServiceModel.Model.ITrexService.EndGetInvoiceDataByInvoiceId(System.IAsyncResult result) {
            return base.Channel.EndGetInvoiceDataByInvoiceId(result);
        }
        
        private System.IAsyncResult OnBeginGetInvoiceDataByInvoiceId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetInvoiceDataByInvoiceId(invoiceId, callback, asyncState);
        }
        
        private object[] OnEndGetInvoiceDataByInvoiceId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetInvoiceDataByInvoiceId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvoiceDataByInvoiceIdCompleted(object state) {
            if ((this.GetInvoiceDataByInvoiceIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvoiceDataByInvoiceIdCompleted(this, new GetInvoiceDataByInvoiceIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvoiceDataByInvoiceIdAsync(int invoiceId) {
            this.GetInvoiceDataByInvoiceIdAsync(invoiceId, null);
        }
        
        public void GetInvoiceDataByInvoiceIdAsync(int invoiceId, object userState) {
            if ((this.onBeginGetInvoiceDataByInvoiceIdDelegate == null)) {
                this.onBeginGetInvoiceDataByInvoiceIdDelegate = new BeginOperationDelegate(this.OnBeginGetInvoiceDataByInvoiceId);
            }
            if ((this.onEndGetInvoiceDataByInvoiceIdDelegate == null)) {
                this.onEndGetInvoiceDataByInvoiceIdDelegate = new EndOperationDelegate(this.OnEndGetInvoiceDataByInvoiceId);
            }
            if ((this.onGetInvoiceDataByInvoiceIdCompletedDelegate == null)) {
                this.onGetInvoiceDataByInvoiceIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvoiceDataByInvoiceIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvoiceDataByInvoiceIdDelegate, new object[] {
                        invoiceId}, this.onEndGetInvoiceDataByInvoiceIdDelegate, this.onGetInvoiceDataByInvoiceIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetInvoiceLinesByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInvoiceLinesByInvoiceId(invoiceId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine> Trex.ServiceModel.Model.ITrexService.EndGetInvoiceLinesByInvoiceId(System.IAsyncResult result) {
            return base.Channel.EndGetInvoiceLinesByInvoiceId(result);
        }
        
        private System.IAsyncResult OnBeginGetInvoiceLinesByInvoiceId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetInvoiceLinesByInvoiceId(invoiceId, callback, asyncState);
        }
        
        private object[] OnEndGetInvoiceLinesByInvoiceId(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetInvoiceLinesByInvoiceId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInvoiceLinesByInvoiceIdCompleted(object state) {
            if ((this.GetInvoiceLinesByInvoiceIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInvoiceLinesByInvoiceIdCompleted(this, new GetInvoiceLinesByInvoiceIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInvoiceLinesByInvoiceIdAsync(int invoiceId) {
            this.GetInvoiceLinesByInvoiceIdAsync(invoiceId, null);
        }
        
        public void GetInvoiceLinesByInvoiceIdAsync(int invoiceId, object userState) {
            if ((this.onBeginGetInvoiceLinesByInvoiceIdDelegate == null)) {
                this.onBeginGetInvoiceLinesByInvoiceIdDelegate = new BeginOperationDelegate(this.OnBeginGetInvoiceLinesByInvoiceId);
            }
            if ((this.onEndGetInvoiceLinesByInvoiceIdDelegate == null)) {
                this.onEndGetInvoiceLinesByInvoiceIdDelegate = new EndOperationDelegate(this.OnEndGetInvoiceLinesByInvoiceId);
            }
            if ((this.onGetInvoiceLinesByInvoiceIdCompletedDelegate == null)) {
                this.onGetInvoiceLinesByInvoiceIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInvoiceLinesByInvoiceIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetInvoiceLinesByInvoiceIdDelegate, new object[] {
                        invoiceId}, this.onEndGetInvoiceLinesByInvoiceIdDelegate, this.onGetInvoiceLinesByInvoiceIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetTimeEntriesForInvoicing(System.DateTime startDate, System.DateTime endDate, int customerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeEntriesForInvoicing(startDate, endDate, customerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> Trex.ServiceModel.Model.ITrexService.EndGetTimeEntriesForInvoicing(System.IAsyncResult result) {
            return base.Channel.EndGetTimeEntriesForInvoicing(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeEntriesForInvoicing(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            int customerId = ((int)(inValues[2]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetTimeEntriesForInvoicing(startDate, endDate, customerId, callback, asyncState);
        }
        
        private object[] OnEndGetTimeEntriesForInvoicing(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetTimeEntriesForInvoicing(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeEntriesForInvoicingCompleted(object state) {
            if ((this.GetTimeEntriesForInvoicingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeEntriesForInvoicingCompleted(this, new GetTimeEntriesForInvoicingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeEntriesForInvoicingAsync(System.DateTime startDate, System.DateTime endDate, int customerId) {
            this.GetTimeEntriesForInvoicingAsync(startDate, endDate, customerId, null);
        }
        
        public void GetTimeEntriesForInvoicingAsync(System.DateTime startDate, System.DateTime endDate, int customerId, object userState) {
            if ((this.onBeginGetTimeEntriesForInvoicingDelegate == null)) {
                this.onBeginGetTimeEntriesForInvoicingDelegate = new BeginOperationDelegate(this.OnBeginGetTimeEntriesForInvoicing);
            }
            if ((this.onEndGetTimeEntriesForInvoicingDelegate == null)) {
                this.onEndGetTimeEntriesForInvoicingDelegate = new EndOperationDelegate(this.OnEndGetTimeEntriesForInvoicing);
            }
            if ((this.onGetTimeEntriesForInvoicingCompletedDelegate == null)) {
                this.onGetTimeEntriesForInvoicingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeEntriesForInvoicingCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeEntriesForInvoicingDelegate, new object[] {
                        startDate,
                        endDate,
                        customerId}, this.onEndGetTimeEntriesForInvoicingDelegate, this.onGetTimeEntriesForInvoicingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetCustomerInvoiceViews(System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerInvoiceViews(startDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView> Trex.ServiceModel.Model.ITrexService.EndGetCustomerInvoiceViews(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerInvoiceViews(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerInvoiceViews(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetCustomerInvoiceViews(startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerInvoiceViews(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetCustomerInvoiceViews(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerInvoiceViewsCompleted(object state) {
            if ((this.GetCustomerInvoiceViewsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerInvoiceViewsCompleted(this, new GetCustomerInvoiceViewsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerInvoiceViewsAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetCustomerInvoiceViewsAsync(startDate, endDate, null);
        }
        
        public void GetCustomerInvoiceViewsAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetCustomerInvoiceViewsDelegate == null)) {
                this.onBeginGetCustomerInvoiceViewsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerInvoiceViews);
            }
            if ((this.onEndGetCustomerInvoiceViewsDelegate == null)) {
                this.onEndGetCustomerInvoiceViewsDelegate = new EndOperationDelegate(this.OnEndGetCustomerInvoiceViews);
            }
            if ((this.onGetCustomerInvoiceViewsCompletedDelegate == null)) {
                this.onGetCustomerInvoiceViewsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerInvoiceViewsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerInvoiceViewsDelegate, new object[] {
                        startDate,
                        endDate}, this.onEndGetCustomerInvoiceViewsDelegate, this.onGetCustomerInvoiceViewsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetCustomerById(int customerId, bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerById(customerId, includeInactive, includeParents, includeProjects, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Customer Trex.ServiceModel.Model.ITrexService.EndGetCustomerById(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerById(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int customerId = ((int)(inValues[0]));
            bool includeInactive = ((bool)(inValues[1]));
            bool includeParents = ((bool)(inValues[2]));
            bool includeProjects = ((bool)(inValues[3]));
            bool includeTasks = ((bool)(inValues[4]));
            bool includeTimeEntries = ((bool)(inValues[5]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetCustomerById(customerId, includeInactive, includeParents, includeProjects, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerById(System.IAsyncResult result) {
            Trex.ServiceContracts.Customer retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetCustomerById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerByIdCompleted(object state) {
            if ((this.GetCustomerByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerByIdCompleted(this, new GetCustomerByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerByIdAsync(int customerId, bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries) {
            this.GetCustomerByIdAsync(customerId, includeInactive, includeParents, includeProjects, includeTasks, includeTimeEntries, null);
        }
        
        public void GetCustomerByIdAsync(int customerId, bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, object userState) {
            if ((this.onBeginGetCustomerByIdDelegate == null)) {
                this.onBeginGetCustomerByIdDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerById);
            }
            if ((this.onEndGetCustomerByIdDelegate == null)) {
                this.onEndGetCustomerByIdDelegate = new EndOperationDelegate(this.OnEndGetCustomerById);
            }
            if ((this.onGetCustomerByIdCompletedDelegate == null)) {
                this.onGetCustomerByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerByIdDelegate, new object[] {
                        customerId,
                        includeInactive,
                        includeParents,
                        includeProjects,
                        includeTasks,
                        includeTimeEntries}, this.onEndGetCustomerByIdDelegate, this.onGetCustomerByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetProjectById(int projectId, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectById(projectId, includeParents, includeInactive, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Project Trex.ServiceModel.Model.ITrexService.EndGetProjectById(System.IAsyncResult result) {
            return base.Channel.EndGetProjectById(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int projectId = ((int)(inValues[0]));
            bool includeParents = ((bool)(inValues[1]));
            bool includeInactive = ((bool)(inValues[2]));
            bool includeTasks = ((bool)(inValues[3]));
            bool includeTimeEntries = ((bool)(inValues[4]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetProjectById(projectId, includeParents, includeInactive, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        private object[] OnEndGetProjectById(System.IAsyncResult result) {
            Trex.ServiceContracts.Project retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetProjectById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectByIdCompleted(object state) {
            if ((this.GetProjectByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectByIdCompleted(this, new GetProjectByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectByIdAsync(int projectId, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries) {
            this.GetProjectByIdAsync(projectId, includeParents, includeInactive, includeTasks, includeTimeEntries, null);
        }
        
        public void GetProjectByIdAsync(int projectId, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, object userState) {
            if ((this.onBeginGetProjectByIdDelegate == null)) {
                this.onBeginGetProjectByIdDelegate = new BeginOperationDelegate(this.OnBeginGetProjectById);
            }
            if ((this.onEndGetProjectByIdDelegate == null)) {
                this.onEndGetProjectByIdDelegate = new EndOperationDelegate(this.OnEndGetProjectById);
            }
            if ((this.onGetProjectByIdCompletedDelegate == null)) {
                this.onGetProjectByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectByIdDelegate, new object[] {
                        projectId,
                        includeParents,
                        includeInactive,
                        includeTasks,
                        includeTimeEntries}, this.onEndGetProjectByIdDelegate, this.onGetProjectByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetTaskById(int taskId, bool includeParents, bool includeSubTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaskById(taskId, includeParents, includeSubTasks, includeTimeEntries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Task Trex.ServiceModel.Model.ITrexService.EndGetTaskById(System.IAsyncResult result) {
            return base.Channel.EndGetTaskById(result);
        }
        
        private System.IAsyncResult OnBeginGetTaskById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int taskId = ((int)(inValues[0]));
            bool includeParents = ((bool)(inValues[1]));
            bool includeSubTasks = ((bool)(inValues[2]));
            bool includeTimeEntries = ((bool)(inValues[3]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetTaskById(taskId, includeParents, includeSubTasks, includeTimeEntries, callback, asyncState);
        }
        
        private object[] OnEndGetTaskById(System.IAsyncResult result) {
            Trex.ServiceContracts.Task retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetTaskById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaskByIdCompleted(object state) {
            if ((this.GetTaskByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaskByIdCompleted(this, new GetTaskByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaskByIdAsync(int taskId, bool includeParents, bool includeSubTasks, bool includeTimeEntries) {
            this.GetTaskByIdAsync(taskId, includeParents, includeSubTasks, includeTimeEntries, null);
        }
        
        public void GetTaskByIdAsync(int taskId, bool includeParents, bool includeSubTasks, bool includeTimeEntries, object userState) {
            if ((this.onBeginGetTaskByIdDelegate == null)) {
                this.onBeginGetTaskByIdDelegate = new BeginOperationDelegate(this.OnBeginGetTaskById);
            }
            if ((this.onEndGetTaskByIdDelegate == null)) {
                this.onEndGetTaskByIdDelegate = new EndOperationDelegate(this.OnEndGetTaskById);
            }
            if ((this.onGetTaskByIdCompletedDelegate == null)) {
                this.onGetTaskByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaskByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaskByIdDelegate, new object[] {
                        taskId,
                        includeParents,
                        includeSubTasks,
                        includeTimeEntries}, this.onEndGetTaskByIdDelegate, this.onGetTaskByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetAllCustomers(bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllCustomers(includeInactive, includeParents, includeProjects, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Trex.ServiceModel.Model.ITrexService.EndGetAllCustomers(System.IAsyncResult result) {
            return base.Channel.EndGetAllCustomers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllCustomers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool includeInactive = ((bool)(inValues[0]));
            bool includeParents = ((bool)(inValues[1]));
            bool includeProjects = ((bool)(inValues[2]));
            bool includeTasks = ((bool)(inValues[3]));
            bool includeTimeEntries = ((bool)(inValues[4]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetAllCustomers(includeInactive, includeParents, includeProjects, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        private object[] OnEndGetAllCustomers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetAllCustomers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllCustomersCompleted(object state) {
            if ((this.GetAllCustomersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllCustomersCompleted(this, new GetAllCustomersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllCustomersAsync(bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries) {
            this.GetAllCustomersAsync(includeInactive, includeParents, includeProjects, includeTasks, includeTimeEntries, null);
        }
        
        public void GetAllCustomersAsync(bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, object userState) {
            if ((this.onBeginGetAllCustomersDelegate == null)) {
                this.onBeginGetAllCustomersDelegate = new BeginOperationDelegate(this.OnBeginGetAllCustomers);
            }
            if ((this.onEndGetAllCustomersDelegate == null)) {
                this.onEndGetAllCustomersDelegate = new EndOperationDelegate(this.OnEndGetAllCustomers);
            }
            if ((this.onGetAllCustomersCompletedDelegate == null)) {
                this.onGetAllCustomersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllCustomersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllCustomersDelegate, new object[] {
                        includeInactive,
                        includeParents,
                        includeProjects,
                        includeTasks,
                        includeTimeEntries}, this.onEndGetAllCustomersDelegate, this.onGetAllCustomersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginEntityCompanyRequest(System.Collections.ObjectModel.ObservableCollection<int> customerIds, bool includeParents, bool includeInactive, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityCompanyRequest(customerIds, includeParents, includeInactive, includeProjects, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> Trex.ServiceModel.Model.ITrexService.EndEntityCompanyRequest(System.IAsyncResult result) {
            return base.Channel.EndEntityCompanyRequest(result);
        }
        
        private System.IAsyncResult OnBeginEntityCompanyRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> customerIds = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            bool includeParents = ((bool)(inValues[1]));
            bool includeInactive = ((bool)(inValues[2]));
            bool includeProjects = ((bool)(inValues[3]));
            bool includeTasks = ((bool)(inValues[4]));
            bool includeTimeEntries = ((bool)(inValues[5]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginEntityCompanyRequest(customerIds, includeParents, includeInactive, includeProjects, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        private object[] OnEndEntityCompanyRequest(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndEntityCompanyRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityCompanyRequestCompleted(object state) {
            if ((this.EntityCompanyRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityCompanyRequestCompleted(this, new EntityCompanyRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityCompanyRequestAsync(System.Collections.ObjectModel.ObservableCollection<int> customerIds, bool includeParents, bool includeInactive, bool includeProjects, bool includeTasks, bool includeTimeEntries) {
            this.EntityCompanyRequestAsync(customerIds, includeParents, includeInactive, includeProjects, includeTasks, includeTimeEntries, null);
        }
        
        public void EntityCompanyRequestAsync(System.Collections.ObjectModel.ObservableCollection<int> customerIds, bool includeParents, bool includeInactive, bool includeProjects, bool includeTasks, bool includeTimeEntries, object userState) {
            if ((this.onBeginEntityCompanyRequestDelegate == null)) {
                this.onBeginEntityCompanyRequestDelegate = new BeginOperationDelegate(this.OnBeginEntityCompanyRequest);
            }
            if ((this.onEndEntityCompanyRequestDelegate == null)) {
                this.onEndEntityCompanyRequestDelegate = new EndOperationDelegate(this.OnEndEntityCompanyRequest);
            }
            if ((this.onEntityCompanyRequestCompletedDelegate == null)) {
                this.onEntityCompanyRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityCompanyRequestCompleted);
            }
            base.InvokeAsync(this.onBeginEntityCompanyRequestDelegate, new object[] {
                        customerIds,
                        includeParents,
                        includeInactive,
                        includeProjects,
                        includeTasks,
                        includeTimeEntries}, this.onEndEntityCompanyRequestDelegate, this.onEntityCompanyRequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginEntityProjectRequest(System.Collections.ObjectModel.ObservableCollection<int> projectIds, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityProjectRequest(projectIds, includeParents, includeInactive, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Trex.ServiceModel.Model.ITrexService.EndEntityProjectRequest(System.IAsyncResult result) {
            return base.Channel.EndEntityProjectRequest(result);
        }
        
        private System.IAsyncResult OnBeginEntityProjectRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> projectIds = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            bool includeParents = ((bool)(inValues[1]));
            bool includeInactive = ((bool)(inValues[2]));
            bool includeTasks = ((bool)(inValues[3]));
            bool includeTimeEntries = ((bool)(inValues[4]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginEntityProjectRequest(projectIds, includeParents, includeInactive, includeTasks, includeTimeEntries, callback, asyncState);
        }
        
        private object[] OnEndEntityProjectRequest(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndEntityProjectRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityProjectRequestCompleted(object state) {
            if ((this.EntityProjectRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityProjectRequestCompleted(this, new EntityProjectRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityProjectRequestAsync(System.Collections.ObjectModel.ObservableCollection<int> projectIds, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries) {
            this.EntityProjectRequestAsync(projectIds, includeParents, includeInactive, includeTasks, includeTimeEntries, null);
        }
        
        public void EntityProjectRequestAsync(System.Collections.ObjectModel.ObservableCollection<int> projectIds, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, object userState) {
            if ((this.onBeginEntityProjectRequestDelegate == null)) {
                this.onBeginEntityProjectRequestDelegate = new BeginOperationDelegate(this.OnBeginEntityProjectRequest);
            }
            if ((this.onEndEntityProjectRequestDelegate == null)) {
                this.onEndEntityProjectRequestDelegate = new EndOperationDelegate(this.OnEndEntityProjectRequest);
            }
            if ((this.onEntityProjectRequestCompletedDelegate == null)) {
                this.onEntityProjectRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityProjectRequestCompleted);
            }
            base.InvokeAsync(this.onBeginEntityProjectRequestDelegate, new object[] {
                        projectIds,
                        includeParents,
                        includeInactive,
                        includeTasks,
                        includeTimeEntries}, this.onEndEntityProjectRequestDelegate, this.onEntityProjectRequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginEntityTaskRequest(System.Collections.ObjectModel.ObservableCollection<int> taskIds, bool includeParents, bool includeSubTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEntityTaskRequest(taskIds, includeParents, includeSubTasks, includeTimeEntries, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Trex.ServiceModel.Model.ITrexService.EndEntityTaskRequest(System.IAsyncResult result) {
            return base.Channel.EndEntityTaskRequest(result);
        }
        
        private System.IAsyncResult OnBeginEntityTaskRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> taskIds = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            bool includeParents = ((bool)(inValues[1]));
            bool includeSubTasks = ((bool)(inValues[2]));
            bool includeTimeEntries = ((bool)(inValues[3]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginEntityTaskRequest(taskIds, includeParents, includeSubTasks, includeTimeEntries, callback, asyncState);
        }
        
        private object[] OnEndEntityTaskRequest(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndEntityTaskRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEntityTaskRequestCompleted(object state) {
            if ((this.EntityTaskRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EntityTaskRequestCompleted(this, new EntityTaskRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EntityTaskRequestAsync(System.Collections.ObjectModel.ObservableCollection<int> taskIds, bool includeParents, bool includeSubTasks, bool includeTimeEntries) {
            this.EntityTaskRequestAsync(taskIds, includeParents, includeSubTasks, includeTimeEntries, null);
        }
        
        public void EntityTaskRequestAsync(System.Collections.ObjectModel.ObservableCollection<int> taskIds, bool includeParents, bool includeSubTasks, bool includeTimeEntries, object userState) {
            if ((this.onBeginEntityTaskRequestDelegate == null)) {
                this.onBeginEntityTaskRequestDelegate = new BeginOperationDelegate(this.OnBeginEntityTaskRequest);
            }
            if ((this.onEndEntityTaskRequestDelegate == null)) {
                this.onEndEntityTaskRequestDelegate = new EndOperationDelegate(this.OnEndEntityTaskRequest);
            }
            if ((this.onEntityTaskRequestCompletedDelegate == null)) {
                this.onEntityTaskRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEntityTaskRequestCompleted);
            }
            base.InvokeAsync(this.onBeginEntityTaskRequestDelegate, new object[] {
                        taskIds,
                        includeParents,
                        includeSubTasks,
                        includeTimeEntries}, this.onEndEntityTaskRequestDelegate, this.onEntityTaskRequestCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetTimeEntriesByPeriodAndUser(Trex.ServiceContracts.User user, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeEntriesByPeriodAndUser(user, startDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> Trex.ServiceModel.Model.ITrexService.EndGetTimeEntriesByPeriodAndUser(System.IAsyncResult result) {
            return base.Channel.EndGetTimeEntriesByPeriodAndUser(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeEntriesByPeriodAndUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            System.DateTime startDate = ((System.DateTime)(inValues[1]));
            System.DateTime endDate = ((System.DateTime)(inValues[2]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetTimeEntriesByPeriodAndUser(user, startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetTimeEntriesByPeriodAndUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetTimeEntriesByPeriodAndUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeEntriesByPeriodAndUserCompleted(object state) {
            if ((this.GetTimeEntriesByPeriodAndUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeEntriesByPeriodAndUserCompleted(this, new GetTimeEntriesByPeriodAndUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeEntriesByPeriodAndUserAsync(Trex.ServiceContracts.User user, System.DateTime startDate, System.DateTime endDate) {
            this.GetTimeEntriesByPeriodAndUserAsync(user, startDate, endDate, null);
        }
        
        public void GetTimeEntriesByPeriodAndUserAsync(Trex.ServiceContracts.User user, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetTimeEntriesByPeriodAndUserDelegate == null)) {
                this.onBeginGetTimeEntriesByPeriodAndUserDelegate = new BeginOperationDelegate(this.OnBeginGetTimeEntriesByPeriodAndUser);
            }
            if ((this.onEndGetTimeEntriesByPeriodAndUserDelegate == null)) {
                this.onEndGetTimeEntriesByPeriodAndUserDelegate = new EndOperationDelegate(this.OnEndGetTimeEntriesByPeriodAndUser);
            }
            if ((this.onGetTimeEntriesByPeriodAndUserCompletedDelegate == null)) {
                this.onGetTimeEntriesByPeriodAndUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeEntriesByPeriodAndUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeEntriesByPeriodAndUserDelegate, new object[] {
                        user,
                        startDate,
                        endDate}, this.onEndGetTimeEntriesByPeriodAndUserDelegate, this.onGetTimeEntriesByPeriodAndUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetTimeEntriesByPeriod(System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeEntriesByPeriod(startDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView> Trex.ServiceModel.Model.ITrexService.EndGetTimeEntriesByPeriod(System.IAsyncResult result) {
            return base.Channel.EndGetTimeEntriesByPeriod(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeEntriesByPeriod(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startDate = ((System.DateTime)(inValues[0]));
            System.DateTime endDate = ((System.DateTime)(inValues[1]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetTimeEntriesByPeriod(startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetTimeEntriesByPeriod(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetTimeEntriesByPeriod(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeEntriesByPeriodCompleted(object state) {
            if ((this.GetTimeEntriesByPeriodCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeEntriesByPeriodCompleted(this, new GetTimeEntriesByPeriodCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeEntriesByPeriodAsync(System.DateTime startDate, System.DateTime endDate) {
            this.GetTimeEntriesByPeriodAsync(startDate, endDate, null);
        }
        
        public void GetTimeEntriesByPeriodAsync(System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetTimeEntriesByPeriodDelegate == null)) {
                this.onBeginGetTimeEntriesByPeriodDelegate = new BeginOperationDelegate(this.OnBeginGetTimeEntriesByPeriod);
            }
            if ((this.onEndGetTimeEntriesByPeriodDelegate == null)) {
                this.onEndGetTimeEntriesByPeriodDelegate = new EndOperationDelegate(this.OnEndGetTimeEntriesByPeriod);
            }
            if ((this.onGetTimeEntriesByPeriodCompletedDelegate == null)) {
                this.onGetTimeEntriesByPeriodCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeEntriesByPeriodCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeEntriesByPeriodDelegate, new object[] {
                        startDate,
                        endDate}, this.onEndGetTimeEntriesByPeriodDelegate, this.onGetTimeEntriesByPeriodCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User> Trex.ServiceModel.Model.ITrexService.EndGetAllUsers(System.IAsyncResult result) {
            return base.Channel.EndGetAllUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetAllUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetAllUsers(callback, asyncState);
        }
        
        private object[] OnEndGetAllUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetAllUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllUsersCompleted(object state) {
            if ((this.GetAllUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllUsersCompleted(this, new GetAllUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllUsersAsync() {
            this.GetAllUsersAsync(null);
        }
        
        public void GetAllUsersAsync(object userState) {
            if ((this.onBeginGetAllUsersDelegate == null)) {
                this.onBeginGetAllUsersDelegate = new BeginOperationDelegate(this.OnBeginGetAllUsers);
            }
            if ((this.onEndGetAllUsersDelegate == null)) {
                this.onEndGetAllUsersDelegate = new EndOperationDelegate(this.OnEndGetAllUsers);
            }
            if ((this.onGetAllUsersCompletedDelegate == null)) {
                this.onGetAllUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllUsersDelegate, null, this.onEndGetAllUsersDelegate, this.onGetAllUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetUserByUserName(string userName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserByUserName(userName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.User Trex.ServiceModel.Model.ITrexService.EndGetUserByUserName(System.IAsyncResult result) {
            return base.Channel.EndGetUserByUserName(result);
        }
        
        private System.IAsyncResult OnBeginGetUserByUserName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetUserByUserName(userName, callback, asyncState);
        }
        
        private object[] OnEndGetUserByUserName(System.IAsyncResult result) {
            Trex.ServiceContracts.User retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetUserByUserName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserByUserNameCompleted(object state) {
            if ((this.GetUserByUserNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserByUserNameCompleted(this, new GetUserByUserNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserByUserNameAsync(string userName) {
            this.GetUserByUserNameAsync(userName, null);
        }
        
        public void GetUserByUserNameAsync(string userName, object userState) {
            if ((this.onBeginGetUserByUserNameDelegate == null)) {
                this.onBeginGetUserByUserNameDelegate = new BeginOperationDelegate(this.OnBeginGetUserByUserName);
            }
            if ((this.onEndGetUserByUserNameDelegate == null)) {
                this.onEndGetUserByUserNameDelegate = new EndOperationDelegate(this.OnEndGetUserByUserName);
            }
            if ((this.onGetUserByUserNameCompletedDelegate == null)) {
                this.onGetUserByUserNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserByUserNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserByUserNameDelegate, new object[] {
                        userName}, this.onEndGetUserByUserNameDelegate, this.onGetUserByUserNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndSaveUser(System.IAsyncResult result) {
            base.Channel.EndSaveUser(result);
        }
        
        private System.IAsyncResult OnBeginSaveUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveUser(user, callback, asyncState);
        }
        
        private object[] OnEndSaveUser(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveUser(result);
            return null;
        }
        
        private void OnSaveUserCompleted(object state) {
            if ((this.SaveUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveUserAsync(Trex.ServiceContracts.User user) {
            this.SaveUserAsync(user, null);
        }
        
        public void SaveUserAsync(Trex.ServiceContracts.User user, object userState) {
            if ((this.onBeginSaveUserDelegate == null)) {
                this.onBeginSaveUserDelegate = new BeginOperationDelegate(this.OnBeginSaveUser);
            }
            if ((this.onEndSaveUserDelegate == null)) {
                this.onEndSaveUserDelegate = new EndOperationDelegate(this.OnEndSaveUser);
            }
            if ((this.onSaveUserCompletedDelegate == null)) {
                this.onSaveUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveUserCompleted);
            }
            base.InvokeAsync(this.onBeginSaveUserDelegate, new object[] {
                        user}, this.onEndSaveUserDelegate, this.onSaveUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndDeleteUser(System.IAsyncResult result) {
            base.Channel.EndDeleteUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteUser(user, callback, asyncState);
        }
        
        private object[] OnEndDeleteUser(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteUser(result);
            return null;
        }
        
        private void OnDeleteUserCompleted(object state) {
            if ((this.DeleteUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserAsync(Trex.ServiceContracts.User user) {
            this.DeleteUserAsync(user, null);
        }
        
        public void DeleteUserAsync(Trex.ServiceContracts.User user, object userState) {
            if ((this.onBeginDeleteUserDelegate == null)) {
                this.onBeginDeleteUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteUser);
            }
            if ((this.onEndDeleteUserDelegate == null)) {
                this.onEndDeleteUserDelegate = new EndOperationDelegate(this.OnEndDeleteUser);
            }
            if ((this.onDeleteUserCompletedDelegate == null)) {
                this.onDeleteUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserDelegate, new object[] {
                        user}, this.onEndDeleteUserDelegate, this.onDeleteUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeactivateUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeactivateUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndDeactivateUser(System.IAsyncResult result) {
            base.Channel.EndDeactivateUser(result);
        }
        
        private System.IAsyncResult OnBeginDeactivateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeactivateUser(user, callback, asyncState);
        }
        
        private object[] OnEndDeactivateUser(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeactivateUser(result);
            return null;
        }
        
        private void OnDeactivateUserCompleted(object state) {
            if ((this.DeactivateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeactivateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeactivateUserAsync(Trex.ServiceContracts.User user) {
            this.DeactivateUserAsync(user, null);
        }
        
        public void DeactivateUserAsync(Trex.ServiceContracts.User user, object userState) {
            if ((this.onBeginDeactivateUserDelegate == null)) {
                this.onBeginDeactivateUserDelegate = new BeginOperationDelegate(this.OnBeginDeactivateUser);
            }
            if ((this.onEndDeactivateUserDelegate == null)) {
                this.onEndDeactivateUserDelegate = new EndOperationDelegate(this.OnEndDeactivateUser);
            }
            if ((this.onDeactivateUserCompletedDelegate == null)) {
                this.onDeactivateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeactivateUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeactivateUserDelegate, new object[] {
                        user}, this.onEndDeactivateUserDelegate, this.onDeactivateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginActivateUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginActivateUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndActivateUser(System.IAsyncResult result) {
            base.Channel.EndActivateUser(result);
        }
        
        private System.IAsyncResult OnBeginActivateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.User user = ((Trex.ServiceContracts.User)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginActivateUser(user, callback, asyncState);
        }
        
        private object[] OnEndActivateUser(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndActivateUser(result);
            return null;
        }
        
        private void OnActivateUserCompleted(object state) {
            if ((this.ActivateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ActivateUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ActivateUserAsync(Trex.ServiceContracts.User user) {
            this.ActivateUserAsync(user, null);
        }
        
        public void ActivateUserAsync(Trex.ServiceContracts.User user, object userState) {
            if ((this.onBeginActivateUserDelegate == null)) {
                this.onBeginActivateUserDelegate = new BeginOperationDelegate(this.OnBeginActivateUser);
            }
            if ((this.onEndActivateUserDelegate == null)) {
                this.onEndActivateUserDelegate = new EndOperationDelegate(this.OnEndActivateUser);
            }
            if ((this.onActivateUserCompletedDelegate == null)) {
                this.onActivateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnActivateUserCompleted);
            }
            base.InvokeAsync(this.onBeginActivateUserDelegate, new object[] {
                        user}, this.onEndActivateUserDelegate, this.onActivateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTimeEntry(timeEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.TimeEntry Trex.ServiceModel.Model.ITrexService.EndSaveTimeEntry(System.IAsyncResult result) {
            return base.Channel.EndSaveTimeEntry(result);
        }
        
        private System.IAsyncResult OnBeginSaveTimeEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.TimeEntry timeEntry = ((Trex.ServiceContracts.TimeEntry)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveTimeEntry(timeEntry, callback, asyncState);
        }
        
        private object[] OnEndSaveTimeEntry(System.IAsyncResult result) {
            Trex.ServiceContracts.TimeEntry retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveTimeEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTimeEntryCompleted(object state) {
            if ((this.SaveTimeEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTimeEntryCompleted(this, new SaveTimeEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry) {
            this.SaveTimeEntryAsync(timeEntry, null);
        }
        
        public void SaveTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry, object userState) {
            if ((this.onBeginSaveTimeEntryDelegate == null)) {
                this.onBeginSaveTimeEntryDelegate = new BeginOperationDelegate(this.OnBeginSaveTimeEntry);
            }
            if ((this.onEndSaveTimeEntryDelegate == null)) {
                this.onEndSaveTimeEntryDelegate = new EndOperationDelegate(this.OnEndSaveTimeEntry);
            }
            if ((this.onSaveTimeEntryCompletedDelegate == null)) {
                this.onSaveTimeEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTimeEntryCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTimeEntryDelegate, new object[] {
                        timeEntry}, this.onEndSaveTimeEntryDelegate, this.onSaveTimeEntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginExcludeTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExcludeTimeEntry(timeEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndExcludeTimeEntry(System.IAsyncResult result) {
            base.Channel.EndExcludeTimeEntry(result);
        }
        
        private System.IAsyncResult OnBeginExcludeTimeEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.TimeEntry timeEntry = ((Trex.ServiceContracts.TimeEntry)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginExcludeTimeEntry(timeEntry, callback, asyncState);
        }
        
        private object[] OnEndExcludeTimeEntry(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndExcludeTimeEntry(result);
            return null;
        }
        
        private void OnExcludeTimeEntryCompleted(object state) {
            if ((this.ExcludeTimeEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExcludeTimeEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExcludeTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry) {
            this.ExcludeTimeEntryAsync(timeEntry, null);
        }
        
        public void ExcludeTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry, object userState) {
            if ((this.onBeginExcludeTimeEntryDelegate == null)) {
                this.onBeginExcludeTimeEntryDelegate = new BeginOperationDelegate(this.OnBeginExcludeTimeEntry);
            }
            if ((this.onEndExcludeTimeEntryDelegate == null)) {
                this.onEndExcludeTimeEntryDelegate = new EndOperationDelegate(this.OnEndExcludeTimeEntry);
            }
            if ((this.onExcludeTimeEntryCompletedDelegate == null)) {
                this.onExcludeTimeEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExcludeTimeEntryCompleted);
            }
            base.InvokeAsync(this.onBeginExcludeTimeEntryDelegate, new object[] {
                        timeEntry}, this.onEndExcludeTimeEntryDelegate, this.onExcludeTimeEntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveInvoiceLine(Trex.ServiceContracts.InvoiceLine invoiceLine, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveInvoiceLine(invoiceLine, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.InvoiceLine Trex.ServiceModel.Model.ITrexService.EndSaveInvoiceLine(System.IAsyncResult result) {
            return base.Channel.EndSaveInvoiceLine(result);
        }
        
        private System.IAsyncResult OnBeginSaveInvoiceLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.InvoiceLine invoiceLine = ((Trex.ServiceContracts.InvoiceLine)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveInvoiceLine(invoiceLine, callback, asyncState);
        }
        
        private object[] OnEndSaveInvoiceLine(System.IAsyncResult result) {
            Trex.ServiceContracts.InvoiceLine retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveInvoiceLine(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveInvoiceLineCompleted(object state) {
            if ((this.SaveInvoiceLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveInvoiceLineCompleted(this, new SaveInvoiceLineCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveInvoiceLineAsync(Trex.ServiceContracts.InvoiceLine invoiceLine) {
            this.SaveInvoiceLineAsync(invoiceLine, null);
        }
        
        public void SaveInvoiceLineAsync(Trex.ServiceContracts.InvoiceLine invoiceLine, object userState) {
            if ((this.onBeginSaveInvoiceLineDelegate == null)) {
                this.onBeginSaveInvoiceLineDelegate = new BeginOperationDelegate(this.OnBeginSaveInvoiceLine);
            }
            if ((this.onEndSaveInvoiceLineDelegate == null)) {
                this.onEndSaveInvoiceLineDelegate = new EndOperationDelegate(this.OnEndSaveInvoiceLine);
            }
            if ((this.onSaveInvoiceLineCompletedDelegate == null)) {
                this.onSaveInvoiceLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveInvoiceLineCompleted);
            }
            base.InvokeAsync(this.onBeginSaveInvoiceLineDelegate, new object[] {
                        invoiceLine}, this.onEndSaveInvoiceLineDelegate, this.onSaveInvoiceLineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveInvoice(Trex.ServiceContracts.Invoice invoice, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveInvoice(invoice, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Invoice Trex.ServiceModel.Model.ITrexService.EndSaveInvoice(System.IAsyncResult result) {
            return base.Channel.EndSaveInvoice(result);
        }
        
        private System.IAsyncResult OnBeginSaveInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Invoice invoice = ((Trex.ServiceContracts.Invoice)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveInvoice(invoice, callback, asyncState);
        }
        
        private object[] OnEndSaveInvoice(System.IAsyncResult result) {
            Trex.ServiceContracts.Invoice retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveInvoice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveInvoiceCompleted(object state) {
            if ((this.SaveInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveInvoiceCompleted(this, new SaveInvoiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveInvoiceAsync(Trex.ServiceContracts.Invoice invoice) {
            this.SaveInvoiceAsync(invoice, null);
        }
        
        public void SaveInvoiceAsync(Trex.ServiceContracts.Invoice invoice, object userState) {
            if ((this.onBeginSaveInvoiceDelegate == null)) {
                this.onBeginSaveInvoiceDelegate = new BeginOperationDelegate(this.OnBeginSaveInvoice);
            }
            if ((this.onEndSaveInvoiceDelegate == null)) {
                this.onEndSaveInvoiceDelegate = new EndOperationDelegate(this.OnEndSaveInvoice);
            }
            if ((this.onSaveInvoiceCompletedDelegate == null)) {
                this.onSaveInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginSaveInvoiceDelegate, new object[] {
                        invoice}, this.onEndSaveInvoiceDelegate, this.onSaveInvoiceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveTask(Trex.ServiceContracts.Task task, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTask(task, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Task Trex.ServiceModel.Model.ITrexService.EndSaveTask(System.IAsyncResult result) {
            return base.Channel.EndSaveTask(result);
        }
        
        private System.IAsyncResult OnBeginSaveTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Task task = ((Trex.ServiceContracts.Task)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveTask(task, callback, asyncState);
        }
        
        private object[] OnEndSaveTask(System.IAsyncResult result) {
            Trex.ServiceContracts.Task retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTaskCompleted(object state) {
            if ((this.SaveTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTaskCompleted(this, new SaveTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTaskAsync(Trex.ServiceContracts.Task task) {
            this.SaveTaskAsync(task, null);
        }
        
        public void SaveTaskAsync(Trex.ServiceContracts.Task task, object userState) {
            if ((this.onBeginSaveTaskDelegate == null)) {
                this.onBeginSaveTaskDelegate = new BeginOperationDelegate(this.OnBeginSaveTask);
            }
            if ((this.onEndSaveTaskDelegate == null)) {
                this.onEndSaveTaskDelegate = new EndOperationDelegate(this.OnEndSaveTask);
            }
            if ((this.onSaveTaskCompletedDelegate == null)) {
                this.onSaveTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTaskCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTaskDelegate, new object[] {
                        task}, this.onEndSaveTaskDelegate, this.onSaveTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveProject(Trex.ServiceContracts.Project project, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveProject(project, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Project Trex.ServiceModel.Model.ITrexService.EndSaveProject(System.IAsyncResult result) {
            return base.Channel.EndSaveProject(result);
        }
        
        private System.IAsyncResult OnBeginSaveProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Project project = ((Trex.ServiceContracts.Project)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveProject(project, callback, asyncState);
        }
        
        private object[] OnEndSaveProject(System.IAsyncResult result) {
            Trex.ServiceContracts.Project retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveProjectCompleted(object state) {
            if ((this.SaveProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveProjectCompleted(this, new SaveProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveProjectAsync(Trex.ServiceContracts.Project project) {
            this.SaveProjectAsync(project, null);
        }
        
        public void SaveProjectAsync(Trex.ServiceContracts.Project project, object userState) {
            if ((this.onBeginSaveProjectDelegate == null)) {
                this.onBeginSaveProjectDelegate = new BeginOperationDelegate(this.OnBeginSaveProject);
            }
            if ((this.onEndSaveProjectDelegate == null)) {
                this.onEndSaveProjectDelegate = new EndOperationDelegate(this.OnEndSaveProject);
            }
            if ((this.onSaveProjectCompletedDelegate == null)) {
                this.onSaveProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveProjectCompleted);
            }
            base.InvokeAsync(this.onBeginSaveProjectDelegate, new object[] {
                        project}, this.onEndSaveProjectDelegate, this.onSaveProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveCustomer(Trex.ServiceContracts.Customer customer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCustomer(customer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.Customer Trex.ServiceModel.Model.ITrexService.EndSaveCustomer(System.IAsyncResult result) {
            return base.Channel.EndSaveCustomer(result);
        }
        
        private System.IAsyncResult OnBeginSaveCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Customer customer = ((Trex.ServiceContracts.Customer)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveCustomer(customer, callback, asyncState);
        }
        
        private object[] OnEndSaveCustomer(System.IAsyncResult result) {
            Trex.ServiceContracts.Customer retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCustomerCompleted(object state) {
            if ((this.SaveCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCustomerCompleted(this, new SaveCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCustomerAsync(Trex.ServiceContracts.Customer customer) {
            this.SaveCustomerAsync(customer, null);
        }
        
        public void SaveCustomerAsync(Trex.ServiceContracts.Customer customer, object userState) {
            if ((this.onBeginSaveCustomerDelegate == null)) {
                this.onBeginSaveCustomerDelegate = new BeginOperationDelegate(this.OnBeginSaveCustomer);
            }
            if ((this.onEndSaveCustomerDelegate == null)) {
                this.onEndSaveCustomerDelegate = new EndOperationDelegate(this.OnEndSaveCustomer);
            }
            if ((this.onSaveCustomerCompletedDelegate == null)) {
                this.onSaveCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCustomerDelegate, new object[] {
                        customer}, this.onEndSaveCustomerDelegate, this.onSaveCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteInvoiceLine(int invoiceLineId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteInvoiceLine(invoiceLineId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndDeleteInvoiceLine(System.IAsyncResult result) {
            base.Channel.EndDeleteInvoiceLine(result);
        }
        
        private System.IAsyncResult OnBeginDeleteInvoiceLine(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceLineId = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteInvoiceLine(invoiceLineId, callback, asyncState);
        }
        
        private object[] OnEndDeleteInvoiceLine(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteInvoiceLine(result);
            return null;
        }
        
        private void OnDeleteInvoiceLineCompleted(object state) {
            if ((this.DeleteInvoiceLineCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteInvoiceLineCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteInvoiceLineAsync(int invoiceLineId) {
            this.DeleteInvoiceLineAsync(invoiceLineId, null);
        }
        
        public void DeleteInvoiceLineAsync(int invoiceLineId, object userState) {
            if ((this.onBeginDeleteInvoiceLineDelegate == null)) {
                this.onBeginDeleteInvoiceLineDelegate = new BeginOperationDelegate(this.OnBeginDeleteInvoiceLine);
            }
            if ((this.onEndDeleteInvoiceLineDelegate == null)) {
                this.onEndDeleteInvoiceLineDelegate = new EndOperationDelegate(this.OnEndDeleteInvoiceLine);
            }
            if ((this.onDeleteInvoiceLineCompletedDelegate == null)) {
                this.onDeleteInvoiceLineCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteInvoiceLineCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteInvoiceLineDelegate, new object[] {
                        invoiceLineId}, this.onEndDeleteInvoiceLineDelegate, this.onDeleteInvoiceLineCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteInvoiceDraft(int invoiceDraftID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteInvoiceDraft(invoiceDraftID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Trex.ServiceModel.Model.ITrexService.EndDeleteInvoiceDraft(System.IAsyncResult result) {
            base.Channel.EndDeleteInvoiceDraft(result);
        }
        
        private System.IAsyncResult OnBeginDeleteInvoiceDraft(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int invoiceDraftID = ((int)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteInvoiceDraft(invoiceDraftID, callback, asyncState);
        }
        
        private object[] OnEndDeleteInvoiceDraft(System.IAsyncResult result) {
            ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteInvoiceDraft(result);
            return null;
        }
        
        private void OnDeleteInvoiceDraftCompleted(object state) {
            if ((this.DeleteInvoiceDraftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteInvoiceDraftCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteInvoiceDraftAsync(int invoiceDraftID) {
            this.DeleteInvoiceDraftAsync(invoiceDraftID, null);
        }
        
        public void DeleteInvoiceDraftAsync(int invoiceDraftID, object userState) {
            if ((this.onBeginDeleteInvoiceDraftDelegate == null)) {
                this.onBeginDeleteInvoiceDraftDelegate = new BeginOperationDelegate(this.OnBeginDeleteInvoiceDraft);
            }
            if ((this.onEndDeleteInvoiceDraftDelegate == null)) {
                this.onEndDeleteInvoiceDraftDelegate = new EndOperationDelegate(this.OnEndDeleteInvoiceDraft);
            }
            if ((this.onDeleteInvoiceDraftCompletedDelegate == null)) {
                this.onDeleteInvoiceDraftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteInvoiceDraftCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteInvoiceDraftDelegate, new object[] {
                        invoiceDraftID}, this.onEndDeleteInvoiceDraftDelegate, this.onDeleteInvoiceDraftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteCustomer(Trex.ServiceContracts.Customer customer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteCustomer(customer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndDeleteCustomer(System.IAsyncResult result) {
            return base.Channel.EndDeleteCustomer(result);
        }
        
        private System.IAsyncResult OnBeginDeleteCustomer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Customer customer = ((Trex.ServiceContracts.Customer)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteCustomer(customer, callback, asyncState);
        }
        
        private object[] OnEndDeleteCustomer(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteCustomer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCustomerCompleted(object state) {
            if ((this.DeleteCustomerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCustomerCompleted(this, new DeleteCustomerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteCustomerAsync(Trex.ServiceContracts.Customer customer) {
            this.DeleteCustomerAsync(customer, null);
        }
        
        public void DeleteCustomerAsync(Trex.ServiceContracts.Customer customer, object userState) {
            if ((this.onBeginDeleteCustomerDelegate == null)) {
                this.onBeginDeleteCustomerDelegate = new BeginOperationDelegate(this.OnBeginDeleteCustomer);
            }
            if ((this.onEndDeleteCustomerDelegate == null)) {
                this.onEndDeleteCustomerDelegate = new EndOperationDelegate(this.OnEndDeleteCustomer);
            }
            if ((this.onDeleteCustomerCompletedDelegate == null)) {
                this.onDeleteCustomerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCustomerCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteCustomerDelegate, new object[] {
                        customer}, this.onEndDeleteCustomerDelegate, this.onDeleteCustomerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteTask(Trex.ServiceContracts.Task task, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTask(task, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndDeleteTask(System.IAsyncResult result) {
            return base.Channel.EndDeleteTask(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Task task = ((Trex.ServiceContracts.Task)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteTask(task, callback, asyncState);
        }
        
        private object[] OnEndDeleteTask(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteTask(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTaskCompleted(object state) {
            if ((this.DeleteTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTaskAsync(Trex.ServiceContracts.Task task) {
            this.DeleteTaskAsync(task, null);
        }
        
        public void DeleteTaskAsync(Trex.ServiceContracts.Task task, object userState) {
            if ((this.onBeginDeleteTaskDelegate == null)) {
                this.onBeginDeleteTaskDelegate = new BeginOperationDelegate(this.OnBeginDeleteTask);
            }
            if ((this.onEndDeleteTaskDelegate == null)) {
                this.onEndDeleteTaskDelegate = new EndOperationDelegate(this.OnEndDeleteTask);
            }
            if ((this.onDeleteTaskCompletedDelegate == null)) {
                this.onDeleteTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTaskCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTaskDelegate, new object[] {
                        task}, this.onEndDeleteTaskDelegate, this.onDeleteTaskCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteProject(Trex.ServiceContracts.Project project, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProject(project, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndDeleteProject(System.IAsyncResult result) {
            return base.Channel.EndDeleteProject(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.Project project = ((Trex.ServiceContracts.Project)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteProject(project, callback, asyncState);
        }
        
        private object[] OnEndDeleteProject(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProjectCompleted(object state) {
            if ((this.DeleteProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProjectCompleted(this, new DeleteProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProjectAsync(Trex.ServiceContracts.Project project) {
            this.DeleteProjectAsync(project, null);
        }
        
        public void DeleteProjectAsync(Trex.ServiceContracts.Project project, object userState) {
            if ((this.onBeginDeleteProjectDelegate == null)) {
                this.onBeginDeleteProjectDelegate = new BeginOperationDelegate(this.OnBeginDeleteProject);
            }
            if ((this.onEndDeleteProjectDelegate == null)) {
                this.onEndDeleteProjectDelegate = new EndOperationDelegate(this.OnEndDeleteProject);
            }
            if ((this.onDeleteProjectCompletedDelegate == null)) {
                this.onDeleteProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProjectCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProjectDelegate, new object[] {
                        project}, this.onEndDeleteProjectDelegate, this.onDeleteProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginDeleteTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteTimeEntry(timeEntry, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Trex.ServiceModel.Model.ITrexService.EndDeleteTimeEntry(System.IAsyncResult result) {
            return base.Channel.EndDeleteTimeEntry(result);
        }
        
        private System.IAsyncResult OnBeginDeleteTimeEntry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.TimeEntry timeEntry = ((Trex.ServiceContracts.TimeEntry)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginDeleteTimeEntry(timeEntry, callback, asyncState);
        }
        
        private object[] OnEndDeleteTimeEntry(System.IAsyncResult result) {
            bool retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndDeleteTimeEntry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteTimeEntryCompleted(object state) {
            if ((this.DeleteTimeEntryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteTimeEntryCompleted(this, new DeleteTimeEntryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry) {
            this.DeleteTimeEntryAsync(timeEntry, null);
        }
        
        public void DeleteTimeEntryAsync(Trex.ServiceContracts.TimeEntry timeEntry, object userState) {
            if ((this.onBeginDeleteTimeEntryDelegate == null)) {
                this.onBeginDeleteTimeEntryDelegate = new BeginOperationDelegate(this.OnBeginDeleteTimeEntry);
            }
            if ((this.onEndDeleteTimeEntryDelegate == null)) {
                this.onEndDeleteTimeEntryDelegate = new EndOperationDelegate(this.OnEndDeleteTimeEntry);
            }
            if ((this.onDeleteTimeEntryCompletedDelegate == null)) {
                this.onDeleteTimeEntryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteTimeEntryCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteTimeEntryDelegate, new object[] {
                        timeEntry}, this.onEndDeleteTimeEntryDelegate, this.onDeleteTimeEntryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetGlobalTimeEntryTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGlobalTimeEntryTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> Trex.ServiceModel.Model.ITrexService.EndGetGlobalTimeEntryTypes(System.IAsyncResult result) {
            return base.Channel.EndGetGlobalTimeEntryTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetGlobalTimeEntryTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetGlobalTimeEntryTypes(callback, asyncState);
        }
        
        private object[] OnEndGetGlobalTimeEntryTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetGlobalTimeEntryTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGlobalTimeEntryTypesCompleted(object state) {
            if ((this.GetGlobalTimeEntryTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGlobalTimeEntryTypesCompleted(this, new GetGlobalTimeEntryTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGlobalTimeEntryTypesAsync() {
            this.GetGlobalTimeEntryTypesAsync(null);
        }
        
        public void GetGlobalTimeEntryTypesAsync(object userState) {
            if ((this.onBeginGetGlobalTimeEntryTypesDelegate == null)) {
                this.onBeginGetGlobalTimeEntryTypesDelegate = new BeginOperationDelegate(this.OnBeginGetGlobalTimeEntryTypes);
            }
            if ((this.onEndGetGlobalTimeEntryTypesDelegate == null)) {
                this.onEndGetGlobalTimeEntryTypesDelegate = new EndOperationDelegate(this.OnEndGetGlobalTimeEntryTypes);
            }
            if ((this.onGetGlobalTimeEntryTypesCompletedDelegate == null)) {
                this.onGetGlobalTimeEntryTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGlobalTimeEntryTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetGlobalTimeEntryTypesDelegate, null, this.onEndGetGlobalTimeEntryTypesDelegate, this.onGetGlobalTimeEntryTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginGetAllTimeEntryTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllTimeEntryTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> Trex.ServiceModel.Model.ITrexService.EndGetAllTimeEntryTypes(System.IAsyncResult result) {
            return base.Channel.EndGetAllTimeEntryTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetAllTimeEntryTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginGetAllTimeEntryTypes(callback, asyncState);
        }
        
        private object[] OnEndGetAllTimeEntryTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndGetAllTimeEntryTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllTimeEntryTypesCompleted(object state) {
            if ((this.GetAllTimeEntryTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllTimeEntryTypesCompleted(this, new GetAllTimeEntryTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllTimeEntryTypesAsync() {
            this.GetAllTimeEntryTypesAsync(null);
        }
        
        public void GetAllTimeEntryTypesAsync(object userState) {
            if ((this.onBeginGetAllTimeEntryTypesDelegate == null)) {
                this.onBeginGetAllTimeEntryTypesDelegate = new BeginOperationDelegate(this.OnBeginGetAllTimeEntryTypes);
            }
            if ((this.onEndGetAllTimeEntryTypesDelegate == null)) {
                this.onEndGetAllTimeEntryTypesDelegate = new EndOperationDelegate(this.OnEndGetAllTimeEntryTypes);
            }
            if ((this.onGetAllTimeEntryTypesCompletedDelegate == null)) {
                this.onGetAllTimeEntryTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllTimeEntryTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllTimeEntryTypesDelegate, null, this.onEndGetAllTimeEntryTypesDelegate, this.onGetAllTimeEntryTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSaveTimeEntryType(Trex.ServiceContracts.TimeEntryType timeEntryType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveTimeEntryType(timeEntryType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Trex.ServiceContracts.TimeEntryType Trex.ServiceModel.Model.ITrexService.EndSaveTimeEntryType(System.IAsyncResult result) {
            return base.Channel.EndSaveTimeEntryType(result);
        }
        
        private System.IAsyncResult OnBeginSaveTimeEntryType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Trex.ServiceContracts.TimeEntryType timeEntryType = ((Trex.ServiceContracts.TimeEntryType)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSaveTimeEntryType(timeEntryType, callback, asyncState);
        }
        
        private object[] OnEndSaveTimeEntryType(System.IAsyncResult result) {
            Trex.ServiceContracts.TimeEntryType retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSaveTimeEntryType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveTimeEntryTypeCompleted(object state) {
            if ((this.SaveTimeEntryTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveTimeEntryTypeCompleted(this, new SaveTimeEntryTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveTimeEntryTypeAsync(Trex.ServiceContracts.TimeEntryType timeEntryType) {
            this.SaveTimeEntryTypeAsync(timeEntryType, null);
        }
        
        public void SaveTimeEntryTypeAsync(Trex.ServiceContracts.TimeEntryType timeEntryType, object userState) {
            if ((this.onBeginSaveTimeEntryTypeDelegate == null)) {
                this.onBeginSaveTimeEntryTypeDelegate = new BeginOperationDelegate(this.OnBeginSaveTimeEntryType);
            }
            if ((this.onEndSaveTimeEntryTypeDelegate == null)) {
                this.onEndSaveTimeEntryTypeDelegate = new EndOperationDelegate(this.OnEndSaveTimeEntryType);
            }
            if ((this.onSaveTimeEntryTypeCompletedDelegate == null)) {
                this.onSaveTimeEntryTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveTimeEntryTypeCompleted);
            }
            base.InvokeAsync(this.onBeginSaveTimeEntryTypeDelegate, new object[] {
                        timeEntryType}, this.onEndSaveTimeEntryTypeDelegate, this.onSaveTimeEntryTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSearchTasks(string searchString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchTasks(searchString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> Trex.ServiceModel.Model.ITrexService.EndSearchTasks(System.IAsyncResult result) {
            return base.Channel.EndSearchTasks(result);
        }
        
        private System.IAsyncResult OnBeginSearchTasks(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string searchString = ((string)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSearchTasks(searchString, callback, asyncState);
        }
        
        private object[] OnEndSearchTasks(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSearchTasks(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchTasksCompleted(object state) {
            if ((this.SearchTasksCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchTasksCompleted(this, new SearchTasksCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchTasksAsync(string searchString) {
            this.SearchTasksAsync(searchString, null);
        }
        
        public void SearchTasksAsync(string searchString, object userState) {
            if ((this.onBeginSearchTasksDelegate == null)) {
                this.onBeginSearchTasksDelegate = new BeginOperationDelegate(this.OnBeginSearchTasks);
            }
            if ((this.onEndSearchTasksDelegate == null)) {
                this.onEndSearchTasksDelegate = new EndOperationDelegate(this.OnEndSearchTasks);
            }
            if ((this.onSearchTasksCompletedDelegate == null)) {
                this.onSearchTasksCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchTasksCompleted);
            }
            base.InvokeAsync(this.onBeginSearchTasksDelegate, new object[] {
                        searchString}, this.onEndSearchTasksDelegate, this.onSearchTasksCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Trex.ServiceModel.Model.ITrexService.BeginSearchProjects(string searchString, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchProjects(searchString, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> Trex.ServiceModel.Model.ITrexService.EndSearchProjects(System.IAsyncResult result) {
            return base.Channel.EndSearchProjects(result);
        }
        
        private System.IAsyncResult OnBeginSearchProjects(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string searchString = ((string)(inValues[0]));
            return ((Trex.ServiceModel.Model.ITrexService)(this)).BeginSearchProjects(searchString, callback, asyncState);
        }
        
        private object[] OnEndSearchProjects(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> retVal = ((Trex.ServiceModel.Model.ITrexService)(this)).EndSearchProjects(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchProjectsCompleted(object state) {
            if ((this.SearchProjectsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchProjectsCompleted(this, new SearchProjectsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchProjectsAsync(string searchString) {
            this.SearchProjectsAsync(searchString, null);
        }
        
        public void SearchProjectsAsync(string searchString, object userState) {
            if ((this.onBeginSearchProjectsDelegate == null)) {
                this.onBeginSearchProjectsDelegate = new BeginOperationDelegate(this.OnBeginSearchProjects);
            }
            if ((this.onEndSearchProjectsDelegate == null)) {
                this.onEndSearchProjectsDelegate = new EndOperationDelegate(this.OnEndSearchProjects);
            }
            if ((this.onSearchProjectsCompletedDelegate == null)) {
                this.onSearchProjectsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchProjectsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchProjectsDelegate, new object[] {
                        searchString}, this.onEndSearchProjectsDelegate, this.onSearchProjectsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Trex.ServiceModel.Model.ITrexService CreateChannel() {
            return new TrexServiceClientChannel(this);
        }
        
        private class TrexServiceClientChannel : ChannelBase<Trex.ServiceModel.Model.ITrexService>, Trex.ServiceModel.Model.ITrexService {
            
            public TrexServiceClientChannel(System.ServiceModel.ClientBase<Trex.ServiceModel.Model.ITrexService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginValidateUser(string userName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("ValidateUser", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndValidateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ValidateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUser(string userName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.User EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.User _result = ((Trex.ServiceContracts.User)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPingService(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("PingService", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndPingService(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("PingService", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUnsyncedCompanies(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lastSyncDate;
                System.IAsyncResult _result = base.BeginInvoke("GetUnsyncedCompanies", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndGetUnsyncedCompanies(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(base.EndInvoke("GetUnsyncedCompanies", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUnsyncedProjects(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lastSyncDate;
                System.IAsyncResult _result = base.BeginInvoke("GetUnsyncedProjects", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndGetUnsyncedProjects(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(base.EndInvoke("GetUnsyncedProjects", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUnsyncedTasks(System.DateTime lastSyncDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lastSyncDate;
                System.IAsyncResult _result = base.BeginInvoke("GetUnsyncedTasks", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndGetUnsyncedTasks(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(base.EndInvoke("GetUnsyncedTasks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadNewTasks(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> tasks, Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = tasks;
                _args[1] = user;
                System.IAsyncResult _result = base.BeginInvoke("UploadNewTasks", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndUploadNewTasks(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(base.EndInvoke("UploadNewTasks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUploadNewTimeEntries(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> timeEntries, Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = timeEntries;
                _args[1] = user;
                System.IAsyncResult _result = base.BeginInvoke("UploadNewTimeEntries", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUploadNewTimeEntries(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UploadNewTimeEntries", _args, result);
            }
            
            public System.IAsyncResult BeginChangePassword(string userName, string oldPassword, string newPassword, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = oldPassword;
                _args[2] = newPassword;
                System.IAsyncResult _result = base.BeginInvoke("ChangePassword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndChangePassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ChangePassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoles(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRoles", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role> EndGetRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Role>)(base.EndInvoke("GetRoles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateUserRoles(string userName, System.Collections.ObjectModel.ObservableCollection<string> roles, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = roles;
                System.IAsyncResult _result = base.BeginInvoke("UpdateUserRoles", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateUserRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateUserRoles", _args, result);
            }
            
            public System.IAsyncResult BeginCreateRole(string roleName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleName;
                System.IAsyncResult _result = base.BeginInvoke("CreateRole", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateRole", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteRole(string roleName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleName;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRole", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteRole", _args, result);
            }
            
            public System.IAsyncResult BeginExistsRole(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("ExistsRole", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndExistsRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ExistsRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPermissionsForSingleRole(string roleName, int applicationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = roleName;
                _args[1] = applicationId;
                System.IAsyncResult _result = base.BeginInvoke("GetPermissionsForSingleRole", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> EndGetPermissionsForSingleRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission>)(base.EndInvoke("GetPermissionsForSingleRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdatePermissions(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> updatedPermissions, Trex.ServiceContracts.Role role, int applicationId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = updatedPermissions;
                _args[1] = role;
                _args[2] = applicationId;
                System.IAsyncResult _result = base.BeginInvoke("UpdatePermissions", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdatePermissions(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdatePermissions", _args, result);
            }
            
            public System.IAsyncResult BeginGetInvoiceById(int invoiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceId;
                System.IAsyncResult _result = base.BeginInvoke("GetInvoiceById", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Invoice EndGetInvoiceById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Invoice _result = ((Trex.ServiceContracts.Invoice)(base.EndInvoke("GetInvoiceById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateUserWithCustomerId(string userName, string password, string customerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userName;
                _args[1] = password;
                _args[2] = customerId;
                System.IAsyncResult _result = base.BeginInvoke("ValidateUserWithCustomerId", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndValidateUserWithCustomerId(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ValidateUserWithCustomerId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateUser(Trex.ServiceContracts.User user, bool sendEmail, string language, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = user;
                _args[1] = sendEmail;
                _args[2] = language;
                System.IAsyncResult _result = base.BeginInvoke("CreateUser", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.UserCreationResponse EndCreateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.UserCreationResponse _result = ((Trex.ServiceContracts.UserCreationResponse)(base.EndInvoke("CreateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResetPassword(Trex.ServiceContracts.User user, string language, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = user;
                _args[1] = language;
                System.IAsyncResult _result = base.BeginInvoke("ResetPassword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndResetPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ResetPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllInvoiceTemplates(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllInvoiceTemplates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> EndGetAllInvoiceTemplates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate>)(base.EndInvoke("GetAllInvoiceTemplates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveInvoiceTemplate(Trex.ServiceContracts.InvoiceTemplate template, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = template;
                System.IAsyncResult _result = base.BeginInvoke("SaveInvoiceTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveInvoiceTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveInvoiceTemplate", _args, result);
            }
            
            public System.IAsyncResult BeginGetAllPermissionsByClientId(int clientId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllPermissionsByClientId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> EndGetAllPermissionsByClientId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.UserPermission>)(base.EndInvoke("GetAllPermissionsByClientId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestWorkedOnCustomersByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = user;
                _args[1] = fromDate;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestWorkedOnCustomersByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndGetLatestWorkedOnCustomersByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(base.EndInvoke("GetLatestWorkedOnCustomersByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestWorkedOnProjectsByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = user;
                _args[1] = fromDate;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestWorkedOnProjectsByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndGetLatestWorkedOnProjectsByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(base.EndInvoke("GetLatestWorkedOnProjectsByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestWorkedOnTasksByUser(Trex.ServiceContracts.User user, System.DateTime fromDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = user;
                _args[1] = fromDate;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestWorkedOnTasksByUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndGetLatestWorkedOnTasksByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(base.EndInvoke("GetLatestWorkedOnTasksByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerateInvoicesFromCustomerID(System.DateTime startDate, System.DateTime endDate, int customerId, int userId, float VAT, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = startDate;
                _args[1] = endDate;
                _args[2] = customerId;
                _args[3] = userId;
                _args[4] = VAT;
                System.IAsyncResult _result = base.BeginInvoke("GenerateInvoicesFromCustomerID", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndGenerateInvoicesFromCustomerID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("GenerateInvoicesFromCustomerID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerateCreditnote(int invoiceId, int currentUserId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = invoiceId;
                _args[1] = currentUserId;
                System.IAsyncResult _result = base.BeginInvoke("GenerateCreditnote", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndGenerateCreditnote(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("GenerateCreditnote", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateTimeEntryPrice(int projectId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = projectId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateTimeEntryPrice", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndUpdateTimeEntryPrice(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("UpdateTimeEntryPrice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerByCriteria(Trex.ServiceContracts.GetCustomerByIdCriterias criterias, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = criterias;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerByCriteria", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Customer EndGetCustomerByCriteria(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Customer _result = ((Trex.ServiceContracts.Customer)(base.EndInvoke("GetCustomerByCriteria", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLoadComments(int invoiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceId;
                System.IAsyncResult _result = base.BeginInvoke("LoadComments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment> EndLoadComments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceComment>)(base.EndInvoke("LoadComments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveComment(string comment, int invoiceID, int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = comment;
                _args[1] = invoiceID;
                _args[2] = userID;
                System.IAsyncResult _result = base.BeginInvoke("SaveComment", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndSaveComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("SaveComment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDebitList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDebitList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> EndGetDebitList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView>)(base.EndInvoke("GetDebitList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeEntryByTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = timeEntry;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeEntryByTimeEntry", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.TimeEntry EndGetTimeEntryByTimeEntry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.TimeEntry _result = ((Trex.ServiceContracts.TimeEntry)(base.EndInvoke("GetTimeEntryByTimeEntry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInvoiceByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceId;
                System.IAsyncResult _result = base.BeginInvoke("GetInvoiceByInvoiceId", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.InvoiceListItemView EndGetInvoiceByInvoiceId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.InvoiceListItemView _result = ((Trex.ServiceContracts.InvoiceListItemView)(base.EndInvoke("GetInvoiceByInvoiceId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllInvoiceIds(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllInvoiceIds", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>> EndGetAllInvoiceIds(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Nullable<int>>)(base.EndInvoke("GetAllInvoiceIds", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecalculateInvoice(int invoiceId, System.DateTime startDate, System.DateTime endDate, int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = invoiceId;
                _args[1] = startDate;
                _args[2] = endDate;
                _args[3] = customerInvoiceGroupId;
                System.IAsyncResult _result = base.BeginInvoke("RecalculateInvoice", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRecalculateInvoice(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RecalculateInvoice", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteInvoiceTemplate(Trex.ServiceContracts.InvoiceTemplate template, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = template;
                System.IAsyncResult _result = base.BeginInvoke("DeleteInvoiceTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteInvoiceTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteInvoiceTemplate", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateExclVAT(int invoiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateExclVAT", _args, callback, asyncState);
                return _result;
            }
            
            public System.Nullable<double> EndUpdateExclVAT(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Nullable<double> _result = ((System.Nullable<double>)(base.EndInvoke("UpdateExclVAT", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFinalizedInvoiceDataByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceId;
                System.IAsyncResult _result = base.BeginInvoke("GetFinalizedInvoiceDataByInvoiceId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote> EndGetFinalizedInvoiceDataByInvoiceId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CreditNote>)(base.EndInvoke("GetFinalizedInvoiceDataByInvoiceId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveInvoiceTemplateFile(byte[] binaryFile, int invoiceTemplateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = binaryFile;
                _args[1] = invoiceTemplateId;
                System.IAsyncResult _result = base.BeginInvoke("SaveInvoiceTemplateFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveInvoiceTemplateFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveInvoiceTemplateFile", _args, result);
            }
            
            public System.IAsyncResult BeginGetInvoiceTemplates(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetInvoiceTemplates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> EndGetInvoiceTemplates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceTemplate>)(base.EndInvoke("GetInvoiceTemplates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginOverWriteCig(Trex.ServiceContracts.CustomerInvoiceGroup cig, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cig;
                System.IAsyncResult _result = base.BeginInvoke("OverWriteCig", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndOverWriteCig(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("OverWriteCig", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveCIG(Trex.ServiceContracts.CustomerInvoiceGroup cig, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cig;
                System.IAsyncResult _result = base.BeginInvoke("SaveCIG", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndSaveCIG(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("SaveCIG", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveInvoiceChanges(Trex.ServiceContracts.InvoiceListItemView invoicedata, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoicedata;
                System.IAsyncResult _result = base.BeginInvoke("SaveInvoiceChanges", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndSaveInvoiceChanges(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("SaveInvoiceChanges", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInvoicesByCustomerId(System.Collections.ObjectModel.ObservableCollection<int> customerIds, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = customerIds;
                System.IAsyncResult _result = base.BeginInvoke("GetInvoicesByCustomerId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> EndGetInvoicesByCustomerId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceListItemView>)(base.EndInvoke("GetInvoicesByCustomerId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGenerateInvoiceLines(int invoiceid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceid;
                System.IAsyncResult _result = base.BeginInvoke("GenerateInvoiceLines", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGenerateInvoiceLines(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GenerateInvoiceLines", _args, result);
            }
            
            public System.IAsyncResult BeginCreateNewInvoiceLine(int invoiceId, double vat, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = invoiceId;
                _args[1] = vat;
                System.IAsyncResult _result = base.BeginInvoke("CreateNewInvoiceLine", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateNewInvoiceLine(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateNewInvoiceLine", _args, result);
            }
            
            public System.IAsyncResult BeginSetStandardInvoicePrintTemplate(int templateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = templateId;
                System.IAsyncResult _result = base.BeginInvoke("SetStandardInvoicePrintTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetStandardInvoicePrintTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetStandardInvoicePrintTemplate", _args, result);
            }
            
            public System.IAsyncResult BeginSetStandardInvoiceMailTemplate(int templateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = templateId;
                System.IAsyncResult _result = base.BeginInvoke("SetStandardInvoiceMailTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetStandardInvoiceMailTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetStandardInvoiceMailTemplate", _args, result);
            }
            
            public System.IAsyncResult BeginSetStandardSpecificationTemplate(int templateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = templateId;
                System.IAsyncResult _result = base.BeginInvoke("SetStandardSpecificationTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSetStandardSpecificationTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SetStandardSpecificationTemplate", _args, result);
            }
            
            public System.IAsyncResult BeginSendInvoiceEmailToCustomerInvoiceGroup(Trex.ServiceContracts.Invoice invoice, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoice;
                System.IAsyncResult _result = base.BeginInvoke("SendInvoiceEmailToCustomerInvoiceGroup", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndSendInvoiceEmailToCustomerInvoiceGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("SendInvoiceEmailToCustomerInvoiceGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = customerInvoiceGroupId;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerInvoiceGroupByCustomerInvoiceFGroupId", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.CustomerInvoiceGroup EndGetCustomerInvoiceGroupByCustomerInvoiceFGroupId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.CustomerInvoiceGroup _result = ((Trex.ServiceContracts.CustomerInvoiceGroup)(base.EndInvoke("GetCustomerInvoiceGroupByCustomerInvoiceFGroupId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteCustomerInvoiceGroup(int customerInvoiceGroupId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = customerInvoiceGroupId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteCustomerInvoiceGroup", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndDeleteCustomerInvoiceGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("DeleteCustomerInvoiceGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerInvoiceGroupByCustomerId(int customerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = customerId;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerInvoiceGroupByCustomerId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> EndGetCustomerInvoiceGroupByCustomerId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup>)(base.EndInvoke("GetCustomerInvoiceGroupByCustomerId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertCustomerInvoiceGroup(System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomerInvoiceGroup> group, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = group;
                System.IAsyncResult _result = base.BeginInvoke("InsertCustomerInvoiceGroup", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.ServerResponse EndInsertCustomerInvoiceGroup(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.ServerResponse _result = ((Trex.ServiceContracts.ServerResponse)(base.EndInvoke("InsertCustomerInvoiceGroup", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReCalculateInvoice1(Trex.ServiceModel.Model.ReCalculateInvoiceRequest request, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = request;
                System.IAsyncResult _result = base.BeginInvoke("ReCalculateInvoice1", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceModel.Model.ReCalculateInvoiceResponse EndReCalculateInvoice1(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceModel.Model.ReCalculateInvoiceResponse _result = ((Trex.ServiceModel.Model.ReCalculateInvoiceResponse)(base.EndInvoke("ReCalculateInvoice1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInvoiceDataByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceId;
                System.IAsyncResult _result = base.BeginInvoke("GetInvoiceDataByInvoiceId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> EndGetInvoiceDataByInvoiceId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry>)(base.EndInvoke("GetInvoiceDataByInvoiceId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInvoiceLinesByInvoiceId(int invoiceId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceId;
                System.IAsyncResult _result = base.BeginInvoke("GetInvoiceLinesByInvoiceId", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine> EndGetInvoiceLinesByInvoiceId(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.InvoiceLine>)(base.EndInvoke("GetInvoiceLinesByInvoiceId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeEntriesForInvoicing(System.DateTime startDate, System.DateTime endDate, int customerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = startDate;
                _args[1] = endDate;
                _args[2] = customerId;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeEntriesForInvoicing", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> EndGetTimeEntriesForInvoicing(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry>)(base.EndInvoke("GetTimeEntriesForInvoicing", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerInvoiceViews(System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = startDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerInvoiceViews", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView> EndGetCustomerInvoiceViews(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.CustomersInvoiceView>)(base.EndInvoke("GetCustomerInvoiceViews", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerById(int customerId, bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = customerId;
                _args[1] = includeInactive;
                _args[2] = includeParents;
                _args[3] = includeProjects;
                _args[4] = includeTasks;
                _args[5] = includeTimeEntries;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerById", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Customer EndGetCustomerById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Customer _result = ((Trex.ServiceContracts.Customer)(base.EndInvoke("GetCustomerById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjectById(int projectId, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = projectId;
                _args[1] = includeParents;
                _args[2] = includeInactive;
                _args[3] = includeTasks;
                _args[4] = includeTimeEntries;
                System.IAsyncResult _result = base.BeginInvoke("GetProjectById", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Project EndGetProjectById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Project _result = ((Trex.ServiceContracts.Project)(base.EndInvoke("GetProjectById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaskById(int taskId, bool includeParents, bool includeSubTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = taskId;
                _args[1] = includeParents;
                _args[2] = includeSubTasks;
                _args[3] = includeTimeEntries;
                System.IAsyncResult _result = base.BeginInvoke("GetTaskById", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Task EndGetTaskById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Task _result = ((Trex.ServiceContracts.Task)(base.EndInvoke("GetTaskById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllCustomers(bool includeInactive, bool includeParents, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = includeInactive;
                _args[1] = includeParents;
                _args[2] = includeProjects;
                _args[3] = includeTasks;
                _args[4] = includeTimeEntries;
                System.IAsyncResult _result = base.BeginInvoke("GetAllCustomers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndGetAllCustomers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(base.EndInvoke("GetAllCustomers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityCompanyRequest(System.Collections.ObjectModel.ObservableCollection<int> customerIds, bool includeParents, bool includeInactive, bool includeProjects, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = customerIds;
                _args[1] = includeParents;
                _args[2] = includeInactive;
                _args[3] = includeProjects;
                _args[4] = includeTasks;
                _args[5] = includeTimeEntries;
                System.IAsyncResult _result = base.BeginInvoke("EntityCompanyRequest", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> EndEntityCompanyRequest(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Customer>)(base.EndInvoke("EntityCompanyRequest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityProjectRequest(System.Collections.ObjectModel.ObservableCollection<int> projectIds, bool includeParents, bool includeInactive, bool includeTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = projectIds;
                _args[1] = includeParents;
                _args[2] = includeInactive;
                _args[3] = includeTasks;
                _args[4] = includeTimeEntries;
                System.IAsyncResult _result = base.BeginInvoke("EntityProjectRequest", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndEntityProjectRequest(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(base.EndInvoke("EntityProjectRequest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEntityTaskRequest(System.Collections.ObjectModel.ObservableCollection<int> taskIds, bool includeParents, bool includeSubTasks, bool includeTimeEntries, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = taskIds;
                _args[1] = includeParents;
                _args[2] = includeSubTasks;
                _args[3] = includeTimeEntries;
                System.IAsyncResult _result = base.BeginInvoke("EntityTaskRequest", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndEntityTaskRequest(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(base.EndInvoke("EntityTaskRequest", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeEntriesByPeriodAndUser(Trex.ServiceContracts.User user, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = user;
                _args[1] = startDate;
                _args[2] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeEntriesByPeriodAndUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> EndGetTimeEntriesByPeriodAndUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntry>)(base.EndInvoke("GetTimeEntriesByPeriodAndUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeEntriesByPeriod(System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = startDate;
                _args[1] = endDate;
                System.IAsyncResult _result = base.BeginInvoke("GetTimeEntriesByPeriod", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView> EndGetTimeEntriesByPeriod(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryView>)(base.EndInvoke("GetTimeEntriesByPeriod", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User> EndGetAllUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.User>)(base.EndInvoke("GetAllUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserByUserName(string userName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userName;
                System.IAsyncResult _result = base.BeginInvoke("GetUserByUserName", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.User EndGetUserByUserName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.User _result = ((Trex.ServiceContracts.User)(base.EndInvoke("GetUserByUserName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SaveUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveUser", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteUser", _args, result);
            }
            
            public System.IAsyncResult BeginDeactivateUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("DeactivateUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeactivateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeactivateUser", _args, result);
            }
            
            public System.IAsyncResult BeginActivateUser(Trex.ServiceContracts.User user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("ActivateUser", _args, callback, asyncState);
                return _result;
            }
            
            public void EndActivateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ActivateUser", _args, result);
            }
            
            public System.IAsyncResult BeginSaveTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = timeEntry;
                System.IAsyncResult _result = base.BeginInvoke("SaveTimeEntry", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.TimeEntry EndSaveTimeEntry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.TimeEntry _result = ((Trex.ServiceContracts.TimeEntry)(base.EndInvoke("SaveTimeEntry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExcludeTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = timeEntry;
                System.IAsyncResult _result = base.BeginInvoke("ExcludeTimeEntry", _args, callback, asyncState);
                return _result;
            }
            
            public void EndExcludeTimeEntry(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ExcludeTimeEntry", _args, result);
            }
            
            public System.IAsyncResult BeginSaveInvoiceLine(Trex.ServiceContracts.InvoiceLine invoiceLine, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceLine;
                System.IAsyncResult _result = base.BeginInvoke("SaveInvoiceLine", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.InvoiceLine EndSaveInvoiceLine(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.InvoiceLine _result = ((Trex.ServiceContracts.InvoiceLine)(base.EndInvoke("SaveInvoiceLine", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveInvoice(Trex.ServiceContracts.Invoice invoice, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoice;
                System.IAsyncResult _result = base.BeginInvoke("SaveInvoice", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Invoice EndSaveInvoice(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Invoice _result = ((Trex.ServiceContracts.Invoice)(base.EndInvoke("SaveInvoice", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTask(Trex.ServiceContracts.Task task, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = task;
                System.IAsyncResult _result = base.BeginInvoke("SaveTask", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Task EndSaveTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Task _result = ((Trex.ServiceContracts.Task)(base.EndInvoke("SaveTask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveProject(Trex.ServiceContracts.Project project, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = project;
                System.IAsyncResult _result = base.BeginInvoke("SaveProject", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Project EndSaveProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Project _result = ((Trex.ServiceContracts.Project)(base.EndInvoke("SaveProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveCustomer(Trex.ServiceContracts.Customer customer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = customer;
                System.IAsyncResult _result = base.BeginInvoke("SaveCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.Customer EndSaveCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.Customer _result = ((Trex.ServiceContracts.Customer)(base.EndInvoke("SaveCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteInvoiceLine(int invoiceLineId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceLineId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteInvoiceLine", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteInvoiceLine(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteInvoiceLine", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteInvoiceDraft(int invoiceDraftID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = invoiceDraftID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteInvoiceDraft", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteInvoiceDraft(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteInvoiceDraft", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteCustomer(Trex.ServiceContracts.Customer customer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = customer;
                System.IAsyncResult _result = base.BeginInvoke("DeleteCustomer", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteCustomer(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteCustomer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTask(Trex.ServiceContracts.Task task, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = task;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTask", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteTask(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteTask", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteProject(Trex.ServiceContracts.Project project, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = project;
                System.IAsyncResult _result = base.BeginInvoke("DeleteProject", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteTimeEntry(Trex.ServiceContracts.TimeEntry timeEntry, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = timeEntry;
                System.IAsyncResult _result = base.BeginInvoke("DeleteTimeEntry", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteTimeEntry(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteTimeEntry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGlobalTimeEntryTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGlobalTimeEntryTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> EndGetGlobalTimeEntryTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType>)(base.EndInvoke("GetGlobalTimeEntryTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllTimeEntryTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllTimeEntryTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> EndGetAllTimeEntryTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.TimeEntryType>)(base.EndInvoke("GetAllTimeEntryTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveTimeEntryType(Trex.ServiceContracts.TimeEntryType timeEntryType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = timeEntryType;
                System.IAsyncResult _result = base.BeginInvoke("SaveTimeEntryType", _args, callback, asyncState);
                return _result;
            }
            
            public Trex.ServiceContracts.TimeEntryType EndSaveTimeEntryType(System.IAsyncResult result) {
                object[] _args = new object[0];
                Trex.ServiceContracts.TimeEntryType _result = ((Trex.ServiceContracts.TimeEntryType)(base.EndInvoke("SaveTimeEntryType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchTasks(string searchString, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = searchString;
                System.IAsyncResult _result = base.BeginInvoke("SearchTasks", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> EndSearchTasks(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Task>)(base.EndInvoke("SearchTasks", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchProjects(string searchString, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = searchString;
                System.IAsyncResult _result = base.BeginInvoke("SearchProjects", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> EndSearchProjects(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project> _result = ((System.Collections.ObjectModel.ObservableCollection<Trex.ServiceContracts.Project>)(base.EndInvoke("SearchProjects", _args, result)));
                return _result;
            }
        }
    }
}
